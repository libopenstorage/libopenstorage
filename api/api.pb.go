// Code generated by protoc-gen-go. DO NOT EDIT.
// source: api/api.proto

package api

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import timestamp "github.com/golang/protobuf/ptypes/timestamp"
import _ "google.golang.org/genproto/googleapis/api/annotations"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Status int32

const (
	Status_STATUS_NONE                     Status = 0
	Status_STATUS_INIT                     Status = 1
	Status_STATUS_OK                       Status = 2
	Status_STATUS_OFFLINE                  Status = 3
	Status_STATUS_ERROR                    Status = 4
	Status_STATUS_NOT_IN_QUORUM            Status = 5
	Status_STATUS_DECOMMISSION             Status = 6
	Status_STATUS_MAINTENANCE              Status = 7
	Status_STATUS_STORAGE_DOWN             Status = 8
	Status_STATUS_STORAGE_DEGRADED         Status = 9
	Status_STATUS_NEEDS_REBOOT             Status = 10
	Status_STATUS_STORAGE_REBALANCE        Status = 11
	Status_STATUS_STORAGE_DRIVE_REPLACE    Status = 12
	Status_STATUS_NOT_IN_QUORUM_NO_STORAGE Status = 13
	// Add statuses before MAX and update the number for MAX
	Status_STATUS_MAX Status = 14
)

var Status_name = map[int32]string{
	0:  "STATUS_NONE",
	1:  "STATUS_INIT",
	2:  "STATUS_OK",
	3:  "STATUS_OFFLINE",
	4:  "STATUS_ERROR",
	5:  "STATUS_NOT_IN_QUORUM",
	6:  "STATUS_DECOMMISSION",
	7:  "STATUS_MAINTENANCE",
	8:  "STATUS_STORAGE_DOWN",
	9:  "STATUS_STORAGE_DEGRADED",
	10: "STATUS_NEEDS_REBOOT",
	11: "STATUS_STORAGE_REBALANCE",
	12: "STATUS_STORAGE_DRIVE_REPLACE",
	13: "STATUS_NOT_IN_QUORUM_NO_STORAGE",
	14: "STATUS_MAX",
}
var Status_value = map[string]int32{
	"STATUS_NONE":                     0,
	"STATUS_INIT":                     1,
	"STATUS_OK":                       2,
	"STATUS_OFFLINE":                  3,
	"STATUS_ERROR":                    4,
	"STATUS_NOT_IN_QUORUM":            5,
	"STATUS_DECOMMISSION":             6,
	"STATUS_MAINTENANCE":              7,
	"STATUS_STORAGE_DOWN":             8,
	"STATUS_STORAGE_DEGRADED":         9,
	"STATUS_NEEDS_REBOOT":             10,
	"STATUS_STORAGE_REBALANCE":        11,
	"STATUS_STORAGE_DRIVE_REPLACE":    12,
	"STATUS_NOT_IN_QUORUM_NO_STORAGE": 13,
	"STATUS_MAX":                      14,
}

func (x Status) String() string {
	return proto.EnumName(Status_name, int32(x))
}
func (Status) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_api_1e0f7a7c36ab7fa4, []int{0}
}

type DriverType int32

const (
	DriverType_DRIVER_TYPE_NONE      DriverType = 0
	DriverType_DRIVER_TYPE_FILE      DriverType = 1
	DriverType_DRIVER_TYPE_BLOCK     DriverType = 2
	DriverType_DRIVER_TYPE_OBJECT    DriverType = 3
	DriverType_DRIVER_TYPE_CLUSTERED DriverType = 4
	DriverType_DRIVER_TYPE_GRAPH     DriverType = 5
)

var DriverType_name = map[int32]string{
	0: "DRIVER_TYPE_NONE",
	1: "DRIVER_TYPE_FILE",
	2: "DRIVER_TYPE_BLOCK",
	3: "DRIVER_TYPE_OBJECT",
	4: "DRIVER_TYPE_CLUSTERED",
	5: "DRIVER_TYPE_GRAPH",
}
var DriverType_value = map[string]int32{
	"DRIVER_TYPE_NONE":      0,
	"DRIVER_TYPE_FILE":      1,
	"DRIVER_TYPE_BLOCK":     2,
	"DRIVER_TYPE_OBJECT":    3,
	"DRIVER_TYPE_CLUSTERED": 4,
	"DRIVER_TYPE_GRAPH":     5,
}

func (x DriverType) String() string {
	return proto.EnumName(DriverType_name, int32(x))
}
func (DriverType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_api_1e0f7a7c36ab7fa4, []int{1}
}

type FSType int32

const (
	FSType_FS_TYPE_NONE  FSType = 0
	FSType_FS_TYPE_BTRFS FSType = 1
	FSType_FS_TYPE_EXT4  FSType = 2
	FSType_FS_TYPE_FUSE  FSType = 3
	FSType_FS_TYPE_NFS   FSType = 4
	FSType_FS_TYPE_VFS   FSType = 5
	FSType_FS_TYPE_XFS   FSType = 6
	FSType_FS_TYPE_ZFS   FSType = 7
)

var FSType_name = map[int32]string{
	0: "FS_TYPE_NONE",
	1: "FS_TYPE_BTRFS",
	2: "FS_TYPE_EXT4",
	3: "FS_TYPE_FUSE",
	4: "FS_TYPE_NFS",
	5: "FS_TYPE_VFS",
	6: "FS_TYPE_XFS",
	7: "FS_TYPE_ZFS",
}
var FSType_value = map[string]int32{
	"FS_TYPE_NONE":  0,
	"FS_TYPE_BTRFS": 1,
	"FS_TYPE_EXT4":  2,
	"FS_TYPE_FUSE":  3,
	"FS_TYPE_NFS":   4,
	"FS_TYPE_VFS":   5,
	"FS_TYPE_XFS":   6,
	"FS_TYPE_ZFS":   7,
}

func (x FSType) String() string {
	return proto.EnumName(FSType_name, int32(x))
}
func (FSType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_api_1e0f7a7c36ab7fa4, []int{2}
}

type GraphDriverChangeType int32

const (
	GraphDriverChangeType_GRAPH_DRIVER_CHANGE_TYPE_NONE     GraphDriverChangeType = 0
	GraphDriverChangeType_GRAPH_DRIVER_CHANGE_TYPE_MODIFIED GraphDriverChangeType = 1
	GraphDriverChangeType_GRAPH_DRIVER_CHANGE_TYPE_ADDED    GraphDriverChangeType = 2
	GraphDriverChangeType_GRAPH_DRIVER_CHANGE_TYPE_DELETED  GraphDriverChangeType = 3
)

var GraphDriverChangeType_name = map[int32]string{
	0: "GRAPH_DRIVER_CHANGE_TYPE_NONE",
	1: "GRAPH_DRIVER_CHANGE_TYPE_MODIFIED",
	2: "GRAPH_DRIVER_CHANGE_TYPE_ADDED",
	3: "GRAPH_DRIVER_CHANGE_TYPE_DELETED",
}
var GraphDriverChangeType_value = map[string]int32{
	"GRAPH_DRIVER_CHANGE_TYPE_NONE":     0,
	"GRAPH_DRIVER_CHANGE_TYPE_MODIFIED": 1,
	"GRAPH_DRIVER_CHANGE_TYPE_ADDED":    2,
	"GRAPH_DRIVER_CHANGE_TYPE_DELETED":  3,
}

func (x GraphDriverChangeType) String() string {
	return proto.EnumName(GraphDriverChangeType_name, int32(x))
}
func (GraphDriverChangeType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_api_1e0f7a7c36ab7fa4, []int{3}
}

type SeverityType int32

const (
	SeverityType_SEVERITY_TYPE_NONE    SeverityType = 0
	SeverityType_SEVERITY_TYPE_ALARM   SeverityType = 1
	SeverityType_SEVERITY_TYPE_WARNING SeverityType = 2
	SeverityType_SEVERITY_TYPE_NOTIFY  SeverityType = 3
)

var SeverityType_name = map[int32]string{
	0: "SEVERITY_TYPE_NONE",
	1: "SEVERITY_TYPE_ALARM",
	2: "SEVERITY_TYPE_WARNING",
	3: "SEVERITY_TYPE_NOTIFY",
}
var SeverityType_value = map[string]int32{
	"SEVERITY_TYPE_NONE":    0,
	"SEVERITY_TYPE_ALARM":   1,
	"SEVERITY_TYPE_WARNING": 2,
	"SEVERITY_TYPE_NOTIFY":  3,
}

func (x SeverityType) String() string {
	return proto.EnumName(SeverityType_name, int32(x))
}
func (SeverityType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_api_1e0f7a7c36ab7fa4, []int{4}
}

type ResourceType int32

const (
	ResourceType_RESOURCE_TYPE_NONE    ResourceType = 0
	ResourceType_RESOURCE_TYPE_VOLUME  ResourceType = 1
	ResourceType_RESOURCE_TYPE_NODE    ResourceType = 2
	ResourceType_RESOURCE_TYPE_CLUSTER ResourceType = 3
	ResourceType_RESOURCE_TYPE_DRIVE   ResourceType = 4
)

var ResourceType_name = map[int32]string{
	0: "RESOURCE_TYPE_NONE",
	1: "RESOURCE_TYPE_VOLUME",
	2: "RESOURCE_TYPE_NODE",
	3: "RESOURCE_TYPE_CLUSTER",
	4: "RESOURCE_TYPE_DRIVE",
}
var ResourceType_value = map[string]int32{
	"RESOURCE_TYPE_NONE":    0,
	"RESOURCE_TYPE_VOLUME":  1,
	"RESOURCE_TYPE_NODE":    2,
	"RESOURCE_TYPE_CLUSTER": 3,
	"RESOURCE_TYPE_DRIVE":   4,
}

func (x ResourceType) String() string {
	return proto.EnumName(ResourceType_name, int32(x))
}
func (ResourceType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_api_1e0f7a7c36ab7fa4, []int{5}
}

type AlertActionType int32

const (
	AlertActionType_ALERT_ACTION_TYPE_NONE   AlertActionType = 0
	AlertActionType_ALERT_ACTION_TYPE_DELETE AlertActionType = 1
	AlertActionType_ALERT_ACTION_TYPE_CREATE AlertActionType = 2
	AlertActionType_ALERT_ACTION_TYPE_UPDATE AlertActionType = 3
)

var AlertActionType_name = map[int32]string{
	0: "ALERT_ACTION_TYPE_NONE",
	1: "ALERT_ACTION_TYPE_DELETE",
	2: "ALERT_ACTION_TYPE_CREATE",
	3: "ALERT_ACTION_TYPE_UPDATE",
}
var AlertActionType_value = map[string]int32{
	"ALERT_ACTION_TYPE_NONE":   0,
	"ALERT_ACTION_TYPE_DELETE": 1,
	"ALERT_ACTION_TYPE_CREATE": 2,
	"ALERT_ACTION_TYPE_UPDATE": 3,
}

func (x AlertActionType) String() string {
	return proto.EnumName(AlertActionType_name, int32(x))
}
func (AlertActionType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_api_1e0f7a7c36ab7fa4, []int{6}
}

type VolumeActionParam int32

const (
	VolumeActionParam_VOLUME_ACTION_PARAM_NONE VolumeActionParam = 0
	// Maps to the boolean value false
	VolumeActionParam_VOLUME_ACTION_PARAM_OFF VolumeActionParam = 1
	// Maps to the boolean value true.
	VolumeActionParam_VOLUME_ACTION_PARAM_ON VolumeActionParam = 2
)

var VolumeActionParam_name = map[int32]string{
	0: "VOLUME_ACTION_PARAM_NONE",
	1: "VOLUME_ACTION_PARAM_OFF",
	2: "VOLUME_ACTION_PARAM_ON",
}
var VolumeActionParam_value = map[string]int32{
	"VOLUME_ACTION_PARAM_NONE": 0,
	"VOLUME_ACTION_PARAM_OFF":  1,
	"VOLUME_ACTION_PARAM_ON":   2,
}

func (x VolumeActionParam) String() string {
	return proto.EnumName(VolumeActionParam_name, int32(x))
}
func (VolumeActionParam) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_api_1e0f7a7c36ab7fa4, []int{7}
}

type CosType int32

const (
	CosType_NONE   CosType = 0
	CosType_LOW    CosType = 1
	CosType_MEDIUM CosType = 2
	CosType_HIGH   CosType = 3
)

var CosType_name = map[int32]string{
	0: "NONE",
	1: "LOW",
	2: "MEDIUM",
	3: "HIGH",
}
var CosType_value = map[string]int32{
	"NONE":   0,
	"LOW":    1,
	"MEDIUM": 2,
	"HIGH":   3,
}

func (x CosType) String() string {
	return proto.EnumName(CosType_name, int32(x))
}
func (CosType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_api_1e0f7a7c36ab7fa4, []int{8}
}

type IoProfile int32

const (
	IoProfile_IO_PROFILE_SEQUENTIAL IoProfile = 0
	IoProfile_IO_PROFILE_RANDOM     IoProfile = 1
	IoProfile_IO_PROFILE_DB         IoProfile = 2
	IoProfile_IO_PROFILE_DB_REMOTE  IoProfile = 3
	IoProfile_IO_PROFILE_CMS        IoProfile = 4
)

var IoProfile_name = map[int32]string{
	0: "IO_PROFILE_SEQUENTIAL",
	1: "IO_PROFILE_RANDOM",
	2: "IO_PROFILE_DB",
	3: "IO_PROFILE_DB_REMOTE",
	4: "IO_PROFILE_CMS",
}
var IoProfile_value = map[string]int32{
	"IO_PROFILE_SEQUENTIAL": 0,
	"IO_PROFILE_RANDOM":     1,
	"IO_PROFILE_DB":         2,
	"IO_PROFILE_DB_REMOTE":  3,
	"IO_PROFILE_CMS":        4,
}

func (x IoProfile) String() string {
	return proto.EnumName(IoProfile_name, int32(x))
}
func (IoProfile) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_api_1e0f7a7c36ab7fa4, []int{9}
}

// VolumeState represents the state of a volume.
type VolumeState int32

const (
	VolumeState_VOLUME_STATE_NONE VolumeState = 0
	// Volume is transitioning to new state
	VolumeState_VOLUME_STATE_PENDING VolumeState = 1
	// Volume is ready to be assigned to a container
	VolumeState_VOLUME_STATE_AVAILABLE VolumeState = 2
	// Volume is attached to container
	VolumeState_VOLUME_STATE_ATTACHED VolumeState = 3
	// Volume is detached but associated with a container
	VolumeState_VOLUME_STATE_DETACHED VolumeState = 4
	// Volume detach is in progress
	VolumeState_VOLUME_STATE_DETATCHING VolumeState = 5
	// Volume is in error state
	VolumeState_VOLUME_STATE_ERROR VolumeState = 6
	// Volume is deleted, it will remain in this state
	// while resources are asynchronously reclaimed
	VolumeState_VOLUME_STATE_DELETED VolumeState = 7
	// Volume is trying to be detached
	VolumeState_VOLUME_STATE_TRY_DETACHING VolumeState = 8
	// Volume is undergoing restore
	VolumeState_VOLUME_STATE_RESTORE VolumeState = 9
)

var VolumeState_name = map[int32]string{
	0: "VOLUME_STATE_NONE",
	1: "VOLUME_STATE_PENDING",
	2: "VOLUME_STATE_AVAILABLE",
	3: "VOLUME_STATE_ATTACHED",
	4: "VOLUME_STATE_DETACHED",
	5: "VOLUME_STATE_DETATCHING",
	6: "VOLUME_STATE_ERROR",
	7: "VOLUME_STATE_DELETED",
	8: "VOLUME_STATE_TRY_DETACHING",
	9: "VOLUME_STATE_RESTORE",
}
var VolumeState_value = map[string]int32{
	"VOLUME_STATE_NONE":          0,
	"VOLUME_STATE_PENDING":       1,
	"VOLUME_STATE_AVAILABLE":     2,
	"VOLUME_STATE_ATTACHED":      3,
	"VOLUME_STATE_DETACHED":      4,
	"VOLUME_STATE_DETATCHING":    5,
	"VOLUME_STATE_ERROR":         6,
	"VOLUME_STATE_DELETED":       7,
	"VOLUME_STATE_TRY_DETACHING": 8,
	"VOLUME_STATE_RESTORE":       9,
}

func (x VolumeState) String() string {
	return proto.EnumName(VolumeState_name, int32(x))
}
func (VolumeState) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_api_1e0f7a7c36ab7fa4, []int{10}
}

// VolumeStatus represents a health status for a volume.
type VolumeStatus int32

const (
	VolumeStatus_VOLUME_STATUS_NONE VolumeStatus = 0
	// Volume is not present
	VolumeStatus_VOLUME_STATUS_NOT_PRESENT VolumeStatus = 1
	// Volume is healthy
	VolumeStatus_VOLUME_STATUS_UP VolumeStatus = 2
	// Volume is in fail mode
	VolumeStatus_VOLUME_STATUS_DOWN VolumeStatus = 3
	// Volume is up but with degraded performance
	// In a RAID group, this may indicate a problem with one or more drives
	VolumeStatus_VOLUME_STATUS_DEGRADED VolumeStatus = 4
)

var VolumeStatus_name = map[int32]string{
	0: "VOLUME_STATUS_NONE",
	1: "VOLUME_STATUS_NOT_PRESENT",
	2: "VOLUME_STATUS_UP",
	3: "VOLUME_STATUS_DOWN",
	4: "VOLUME_STATUS_DEGRADED",
}
var VolumeStatus_value = map[string]int32{
	"VOLUME_STATUS_NONE":        0,
	"VOLUME_STATUS_NOT_PRESENT": 1,
	"VOLUME_STATUS_UP":          2,
	"VOLUME_STATUS_DOWN":        3,
	"VOLUME_STATUS_DEGRADED":    4,
}

func (x VolumeStatus) String() string {
	return proto.EnumName(VolumeStatus_name, int32(x))
}
func (VolumeStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_api_1e0f7a7c36ab7fa4, []int{11}
}

type StorageMedium int32

const (
	// Magnetic spinning disk.
	StorageMedium_STORAGE_MEDIUM_MAGNETIC StorageMedium = 0
	// SSD disk
	StorageMedium_STORAGE_MEDIUM_SSD StorageMedium = 1
	// NVME disk
	StorageMedium_STORAGE_MEDIUM_NVME StorageMedium = 2
)

var StorageMedium_name = map[int32]string{
	0: "STORAGE_MEDIUM_MAGNETIC",
	1: "STORAGE_MEDIUM_SSD",
	2: "STORAGE_MEDIUM_NVME",
}
var StorageMedium_value = map[string]int32{
	"STORAGE_MEDIUM_MAGNETIC": 0,
	"STORAGE_MEDIUM_SSD":      1,
	"STORAGE_MEDIUM_NVME":     2,
}

func (x StorageMedium) String() string {
	return proto.EnumName(StorageMedium_name, int32(x))
}
func (StorageMedium) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_api_1e0f7a7c36ab7fa4, []int{12}
}

type ClusterNotify int32

const (
	// Node is down
	ClusterNotify_CLUSTER_NOTIFY_DOWN ClusterNotify = 0
)

var ClusterNotify_name = map[int32]string{
	0: "CLUSTER_NOTIFY_DOWN",
}
var ClusterNotify_value = map[string]int32{
	"CLUSTER_NOTIFY_DOWN": 0,
}

func (x ClusterNotify) String() string {
	return proto.EnumName(ClusterNotify_name, int32(x))
}
func (ClusterNotify) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_api_1e0f7a7c36ab7fa4, []int{13}
}

type AttachState int32

const (
	// Attached and available externally
	AttachState_ATTACH_STATE_EXTERNAL AttachState = 0
	// Attached but only available internally
	AttachState_ATTACH_STATE_INTERNAL AttachState = 1
	// Switching from External to Internal
	AttachState_ATTACH_STATE_INTERNAL_SWITCH AttachState = 2
)

var AttachState_name = map[int32]string{
	0: "ATTACH_STATE_EXTERNAL",
	1: "ATTACH_STATE_INTERNAL",
	2: "ATTACH_STATE_INTERNAL_SWITCH",
}
var AttachState_value = map[string]int32{
	"ATTACH_STATE_EXTERNAL":        0,
	"ATTACH_STATE_INTERNAL":        1,
	"ATTACH_STATE_INTERNAL_SWITCH": 2,
}

func (x AttachState) String() string {
	return proto.EnumName(AttachState_name, int32(x))
}
func (AttachState) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_api_1e0f7a7c36ab7fa4, []int{14}
}

type OperationFlags int32

const (
	OperationFlags_OP_FLAGS_UNKNOWN OperationFlags = 0
	OperationFlags_OP_FLAGS_NONE    OperationFlags = 1
	// Perform a force_detach during detach operation
	OperationFlags_OP_FLAGS_DETACH_FORCE OperationFlags = 2
)

var OperationFlags_name = map[int32]string{
	0: "OP_FLAGS_UNKNOWN",
	1: "OP_FLAGS_NONE",
	2: "OP_FLAGS_DETACH_FORCE",
}
var OperationFlags_value = map[string]int32{
	"OP_FLAGS_UNKNOWN":      0,
	"OP_FLAGS_NONE":         1,
	"OP_FLAGS_DETACH_FORCE": 2,
}

func (x OperationFlags) String() string {
	return proto.EnumName(OperationFlags_name, int32(x))
}
func (OperationFlags) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_api_1e0f7a7c36ab7fa4, []int{15}
}

type CloudBackupOpType int32

const (
	CloudBackupOpType_CloudBackupOp  CloudBackupOpType = 0
	CloudBackupOpType_CloudRestoreOp CloudBackupOpType = 1
)

var CloudBackupOpType_name = map[int32]string{
	0: "CloudBackupOp",
	1: "CloudRestoreOp",
}
var CloudBackupOpType_value = map[string]int32{
	"CloudBackupOp":  0,
	"CloudRestoreOp": 1,
}

func (x CloudBackupOpType) String() string {
	return proto.EnumName(CloudBackupOpType_name, int32(x))
}
func (CloudBackupOpType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_api_1e0f7a7c36ab7fa4, []int{16}
}

type CloudBackupStatusType int32

const (
	CloudBackupStatusType_CloudBackupStatusNotStarted CloudBackupStatusType = 0
	CloudBackupStatusType_CloudBackupStatusDone       CloudBackupStatusType = 1
	CloudBackupStatusType_CloudBackupStatusAborted    CloudBackupStatusType = 2
	CloudBackupStatusType_CloudBackupStatusPaused     CloudBackupStatusType = 3
	CloudBackupStatusType_CloudBackupStatusStopped    CloudBackupStatusType = 4
	CloudBackupStatusType_CloudBackupStatusActive     CloudBackupStatusType = 5
	CloudBackupStatusType_CloudBackupStatusFailed     CloudBackupStatusType = 6
)

var CloudBackupStatusType_name = map[int32]string{
	0: "CloudBackupStatusNotStarted",
	1: "CloudBackupStatusDone",
	2: "CloudBackupStatusAborted",
	3: "CloudBackupStatusPaused",
	4: "CloudBackupStatusStopped",
	5: "CloudBackupStatusActive",
	6: "CloudBackupStatusFailed",
}
var CloudBackupStatusType_value = map[string]int32{
	"CloudBackupStatusNotStarted": 0,
	"CloudBackupStatusDone":       1,
	"CloudBackupStatusAborted":    2,
	"CloudBackupStatusPaused":     3,
	"CloudBackupStatusStopped":    4,
	"CloudBackupStatusActive":     5,
	"CloudBackupStatusFailed":     6,
}

func (x CloudBackupStatusType) String() string {
	return proto.EnumName(CloudBackupStatusType_name, int32(x))
}
func (CloudBackupStatusType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_api_1e0f7a7c36ab7fa4, []int{17}
}

// StorageResource groups properties of a storage device.
// swagger:model
type StorageResource struct {
	// Id is the LUN identifier.
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	// Path device path for this storage resource.
	Path string `protobuf:"bytes,2,opt,name=path" json:"path,omitempty"`
	// Storage medium.
	Medium StorageMedium `protobuf:"varint,3,opt,name=medium,enum=openstorage.api.StorageMedium" json:"medium,omitempty"`
	// True if this device is online.
	Online bool `protobuf:"varint,4,opt,name=online" json:"online,omitempty"`
	// IOPS
	Iops uint64 `protobuf:"varint,5,opt,name=iops" json:"iops,omitempty"`
	// SeqWrite
	SeqWrite float64 `protobuf:"fixed64,6,opt,name=seq_write,json=seqWrite" json:"seq_write,omitempty"`
	// SeqRead
	SeqRead float64 `protobuf:"fixed64,7,opt,name=seq_read,json=seqRead" json:"seq_read,omitempty"`
	// RandRW
	RandRW float64 `protobuf:"fixed64,8,opt,name=randRW" json:"randRW,omitempty"`
	// Total size in bytes.
	Size uint64 `protobuf:"varint,9,opt,name=size" json:"size,omitempty"`
	// Physical Bytes used.
	Used uint64 `protobuf:"varint,10,opt,name=used" json:"used,omitempty"`
	// True if this device is rotational.
	RotationSpeed string `protobuf:"bytes,11,opt,name=rotation_speed,json=rotationSpeed" json:"rotation_speed,omitempty"`
	// Timestamp of last time this device was scanned.
	LastScan *timestamp.Timestamp `protobuf:"bytes,12,opt,name=last_scan,json=lastScan" json:"last_scan,omitempty"`
	// True if dedicated for metadata.
	Metadata             bool     `protobuf:"varint,13,opt,name=metadata" json:"metadata,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StorageResource) Reset()         { *m = StorageResource{} }
func (m *StorageResource) String() string { return proto.CompactTextString(m) }
func (*StorageResource) ProtoMessage()    {}
func (*StorageResource) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_1e0f7a7c36ab7fa4, []int{0}
}
func (m *StorageResource) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StorageResource.Unmarshal(m, b)
}
func (m *StorageResource) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StorageResource.Marshal(b, m, deterministic)
}
func (dst *StorageResource) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StorageResource.Merge(dst, src)
}
func (m *StorageResource) XXX_Size() int {
	return xxx_messageInfo_StorageResource.Size(m)
}
func (m *StorageResource) XXX_DiscardUnknown() {
	xxx_messageInfo_StorageResource.DiscardUnknown(m)
}

var xxx_messageInfo_StorageResource proto.InternalMessageInfo

func (m *StorageResource) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *StorageResource) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *StorageResource) GetMedium() StorageMedium {
	if m != nil {
		return m.Medium
	}
	return StorageMedium_STORAGE_MEDIUM_MAGNETIC
}

func (m *StorageResource) GetOnline() bool {
	if m != nil {
		return m.Online
	}
	return false
}

func (m *StorageResource) GetIops() uint64 {
	if m != nil {
		return m.Iops
	}
	return 0
}

func (m *StorageResource) GetSeqWrite() float64 {
	if m != nil {
		return m.SeqWrite
	}
	return 0
}

func (m *StorageResource) GetSeqRead() float64 {
	if m != nil {
		return m.SeqRead
	}
	return 0
}

func (m *StorageResource) GetRandRW() float64 {
	if m != nil {
		return m.RandRW
	}
	return 0
}

func (m *StorageResource) GetSize() uint64 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *StorageResource) GetUsed() uint64 {
	if m != nil {
		return m.Used
	}
	return 0
}

func (m *StorageResource) GetRotationSpeed() string {
	if m != nil {
		return m.RotationSpeed
	}
	return ""
}

func (m *StorageResource) GetLastScan() *timestamp.Timestamp {
	if m != nil {
		return m.LastScan
	}
	return nil
}

func (m *StorageResource) GetMetadata() bool {
	if m != nil {
		return m.Metadata
	}
	return false
}

// StoragePool groups different storage devices based on their CosType
type StoragePool struct {
	// ID pool ID
	ID int32 `protobuf:"varint,1,opt,name=ID" json:"ID,omitempty"`
	// Cos reflects the capabilities of this drive pool
	Cos CosType `protobuf:"varint,2,opt,name=Cos,enum=openstorage.api.CosType" json:"Cos,omitempty"`
	// Medium underlying storage type
	Medium StorageMedium `protobuf:"varint,3,opt,name=Medium,enum=openstorage.api.StorageMedium" json:"Medium,omitempty"`
	// RaidLevel storage raid level
	RaidLevel string `protobuf:"bytes,4,opt,name=RaidLevel" json:"RaidLevel,omitempty"`
	// TotalSize of the pool
	TotalSize uint64 `protobuf:"varint,7,opt,name=TotalSize" json:"TotalSize,omitempty"`
	// Used size of the pool
	Used uint64 `protobuf:"varint,8,opt,name=Used" json:"Used,omitempty"`
	// Labels is a list of user defined name-value pairs
	Labels               map[string]string `protobuf:"bytes,9,rep,name=labels" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *StoragePool) Reset()         { *m = StoragePool{} }
func (m *StoragePool) String() string { return proto.CompactTextString(m) }
func (*StoragePool) ProtoMessage()    {}
func (*StoragePool) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_1e0f7a7c36ab7fa4, []int{1}
}
func (m *StoragePool) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StoragePool.Unmarshal(m, b)
}
func (m *StoragePool) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StoragePool.Marshal(b, m, deterministic)
}
func (dst *StoragePool) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StoragePool.Merge(dst, src)
}
func (m *StoragePool) XXX_Size() int {
	return xxx_messageInfo_StoragePool.Size(m)
}
func (m *StoragePool) XXX_DiscardUnknown() {
	xxx_messageInfo_StoragePool.DiscardUnknown(m)
}

var xxx_messageInfo_StoragePool proto.InternalMessageInfo

func (m *StoragePool) GetID() int32 {
	if m != nil {
		return m.ID
	}
	return 0
}

func (m *StoragePool) GetCos() CosType {
	if m != nil {
		return m.Cos
	}
	return CosType_NONE
}

func (m *StoragePool) GetMedium() StorageMedium {
	if m != nil {
		return m.Medium
	}
	return StorageMedium_STORAGE_MEDIUM_MAGNETIC
}

func (m *StoragePool) GetRaidLevel() string {
	if m != nil {
		return m.RaidLevel
	}
	return ""
}

func (m *StoragePool) GetTotalSize() uint64 {
	if m != nil {
		return m.TotalSize
	}
	return 0
}

func (m *StoragePool) GetUsed() uint64 {
	if m != nil {
		return m.Used
	}
	return 0
}

func (m *StoragePool) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

// VolumeLocator is a structure that is attached to a volume
// and is used to carry opaque metadata.
// swagger:model
type VolumeLocator struct {
	// User friendly identifier
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	// A set of name-value pairs that acts as search filters
	VolumeLabels         map[string]string `protobuf:"bytes,2,rep,name=volume_labels,json=volumeLabels" json:"volume_labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *VolumeLocator) Reset()         { *m = VolumeLocator{} }
func (m *VolumeLocator) String() string { return proto.CompactTextString(m) }
func (*VolumeLocator) ProtoMessage()    {}
func (*VolumeLocator) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_1e0f7a7c36ab7fa4, []int{2}
}
func (m *VolumeLocator) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VolumeLocator.Unmarshal(m, b)
}
func (m *VolumeLocator) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VolumeLocator.Marshal(b, m, deterministic)
}
func (dst *VolumeLocator) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VolumeLocator.Merge(dst, src)
}
func (m *VolumeLocator) XXX_Size() int {
	return xxx_messageInfo_VolumeLocator.Size(m)
}
func (m *VolumeLocator) XXX_DiscardUnknown() {
	xxx_messageInfo_VolumeLocator.DiscardUnknown(m)
}

var xxx_messageInfo_VolumeLocator proto.InternalMessageInfo

func (m *VolumeLocator) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *VolumeLocator) GetVolumeLabels() map[string]string {
	if m != nil {
		return m.VolumeLabels
	}
	return nil
}

// Source is a structure that can be given to a volume
// to seed the volume with data.
// swagger:model
type Source struct {
	// A volume id, if specified will create a clone of the parent.
	Parent string `protobuf:"bytes,1,opt,name=parent" json:"parent,omitempty"`
	// Seed will seed the volume from the specified URI
	// Any additional config for the source comes from the labels in the spec
	Seed                 string   `protobuf:"bytes,2,opt,name=seed" json:"seed,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Source) Reset()         { *m = Source{} }
func (m *Source) String() string { return proto.CompactTextString(m) }
func (*Source) ProtoMessage()    {}
func (*Source) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_1e0f7a7c36ab7fa4, []int{3}
}
func (m *Source) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Source.Unmarshal(m, b)
}
func (m *Source) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Source.Marshal(b, m, deterministic)
}
func (dst *Source) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Source.Merge(dst, src)
}
func (m *Source) XXX_Size() int {
	return xxx_messageInfo_Source.Size(m)
}
func (m *Source) XXX_DiscardUnknown() {
	xxx_messageInfo_Source.DiscardUnknown(m)
}

var xxx_messageInfo_Source proto.InternalMessageInfo

func (m *Source) GetParent() string {
	if m != nil {
		return m.Parent
	}
	return ""
}

func (m *Source) GetSeed() string {
	if m != nil {
		return m.Seed
	}
	return ""
}

// Group represents VolumeGroup / namespace
// All volumes in the same group share this object.
// swagger:model
type Group struct {
	// Id common identifier across volumes that have the same group.
	Id                   string   `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Group) Reset()         { *m = Group{} }
func (m *Group) String() string { return proto.CompactTextString(m) }
func (*Group) ProtoMessage()    {}
func (*Group) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_1e0f7a7c36ab7fa4, []int{4}
}
func (m *Group) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Group.Unmarshal(m, b)
}
func (m *Group) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Group.Marshal(b, m, deterministic)
}
func (dst *Group) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Group.Merge(dst, src)
}
func (m *Group) XXX_Size() int {
	return xxx_messageInfo_Group.Size(m)
}
func (m *Group) XXX_DiscardUnknown() {
	xxx_messageInfo_Group.DiscardUnknown(m)
}

var xxx_messageInfo_Group proto.InternalMessageInfo

func (m *Group) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

// VolumeSpec has the properties needed to create a volume.
// swagger:model
type VolumeSpec struct {
	// Ephemeral storage
	Ephemeral bool `protobuf:"varint,1,opt,name=ephemeral" json:"ephemeral,omitempty"`
	// Size specifies the thin provisioned volume size.
	Size uint64 `protobuf:"varint,2,opt,name=size" json:"size,omitempty"`
	// Format specifies the filesystem for this volume.
	Format FSType `protobuf:"varint,3,opt,name=format,enum=openstorage.api.FSType" json:"format,omitempty"`
	// BlockSize for the filesystem.
	BlockSize int64 `protobuf:"varint,4,opt,name=block_size,json=blockSize" json:"block_size,omitempty"`
	// HaLevel specifies the number of copies of data.
	HaLevel int64 `protobuf:"varint,5,opt,name=ha_level,json=haLevel" json:"ha_level,omitempty"`
	// Cos specifies the relative class of service.
	Cos CosType `protobuf:"varint,6,opt,name=cos,enum=openstorage.api.CosType" json:"cos,omitempty"`
	// IoProfile provides a hint about application using this volume.
	IoProfile IoProfile `protobuf:"varint,7,opt,name=io_profile,json=ioProfile,enum=openstorage.api.IoProfile" json:"io_profile,omitempty"`
	// Dedupe specifies if the volume data is to be de-duplicated.
	Dedupe bool `protobuf:"varint,8,opt,name=dedupe" json:"dedupe,omitempty"`
	// SnapshotInterval in minutes, set to 0 to disable snapshots
	SnapshotInterval uint32 `protobuf:"varint,9,opt,name=snapshot_interval,json=snapshotInterval" json:"snapshot_interval,omitempty"`
	// VolumeLabels configuration labels
	VolumeLabels map[string]string `protobuf:"bytes,10,rep,name=volume_labels,json=volumeLabels" json:"volume_labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Shared is true if this volume can be remotely accessed.
	Shared bool `protobuf:"varint,11,opt,name=shared" json:"shared,omitempty"`
	// ReplicaSet is the desired set of nodes for the volume data.
	ReplicaSet *ReplicaSet `protobuf:"bytes,12,opt,name=replica_set,json=replicaSet" json:"replica_set,omitempty"`
	// Aggregatiokn level Specifies the number of parts the volume can be aggregated from.
	AggregationLevel uint32 `protobuf:"varint,13,opt,name=aggregation_level,json=aggregationLevel" json:"aggregation_level,omitempty"`
	// Encrypted is true if this volume will be cryptographically secured.
	Encrypted bool `protobuf:"varint,14,opt,name=encrypted" json:"encrypted,omitempty"`
	// Passphrase for an encrypted volume
	Passphrase string `protobuf:"bytes,15,opt,name=passphrase" json:"passphrase,omitempty"`
	// SnapshotSchedule a well known string that specifies when snapshots should be taken.
	SnapshotSchedule string `protobuf:"bytes,16,opt,name=snapshot_schedule,json=snapshotSchedule" json:"snapshot_schedule,omitempty"`
	// Scale allows autocreation of volumes.
	Scale uint32 `protobuf:"varint,17,opt,name=scale" json:"scale,omitempty"`
	// Sticky volumes cannot be deleted until the flag is removed.
	Sticky bool `protobuf:"varint,18,opt,name=sticky" json:"sticky,omitempty"`
	// Group identifies a consistency group
	Group *Group `protobuf:"bytes,21,opt,name=group" json:"group,omitempty"`
	// GroupEnforced is true if consistency group creation is enforced.
	GroupEnforced bool `protobuf:"varint,22,opt,name=group_enforced,json=groupEnforced" json:"group_enforced,omitempty"`
	// Compressed is true if this volume is to be compressed.
	Compressed bool `protobuf:"varint,23,opt,name=compressed" json:"compressed,omitempty"`
	// Cascaded is true if this volume can be populated on any node from an external source.
	Cascaded bool `protobuf:"varint,24,opt,name=cascaded" json:"cascaded,omitempty"`
	// Journal is true if data for the volume goes into the journal.
	Journal bool `protobuf:"varint,25,opt,name=journal" json:"journal,omitempty"`
	// Sharedv4 is true if this volume can be accessed via sharedv4.
	Sharedv4             bool     `protobuf:"varint,26,opt,name=sharedv4" json:"sharedv4,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VolumeSpec) Reset()         { *m = VolumeSpec{} }
func (m *VolumeSpec) String() string { return proto.CompactTextString(m) }
func (*VolumeSpec) ProtoMessage()    {}
func (*VolumeSpec) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_1e0f7a7c36ab7fa4, []int{5}
}
func (m *VolumeSpec) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VolumeSpec.Unmarshal(m, b)
}
func (m *VolumeSpec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VolumeSpec.Marshal(b, m, deterministic)
}
func (dst *VolumeSpec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VolumeSpec.Merge(dst, src)
}
func (m *VolumeSpec) XXX_Size() int {
	return xxx_messageInfo_VolumeSpec.Size(m)
}
func (m *VolumeSpec) XXX_DiscardUnknown() {
	xxx_messageInfo_VolumeSpec.DiscardUnknown(m)
}

var xxx_messageInfo_VolumeSpec proto.InternalMessageInfo

func (m *VolumeSpec) GetEphemeral() bool {
	if m != nil {
		return m.Ephemeral
	}
	return false
}

func (m *VolumeSpec) GetSize() uint64 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *VolumeSpec) GetFormat() FSType {
	if m != nil {
		return m.Format
	}
	return FSType_FS_TYPE_NONE
}

func (m *VolumeSpec) GetBlockSize() int64 {
	if m != nil {
		return m.BlockSize
	}
	return 0
}

func (m *VolumeSpec) GetHaLevel() int64 {
	if m != nil {
		return m.HaLevel
	}
	return 0
}

func (m *VolumeSpec) GetCos() CosType {
	if m != nil {
		return m.Cos
	}
	return CosType_NONE
}

func (m *VolumeSpec) GetIoProfile() IoProfile {
	if m != nil {
		return m.IoProfile
	}
	return IoProfile_IO_PROFILE_SEQUENTIAL
}

func (m *VolumeSpec) GetDedupe() bool {
	if m != nil {
		return m.Dedupe
	}
	return false
}

func (m *VolumeSpec) GetSnapshotInterval() uint32 {
	if m != nil {
		return m.SnapshotInterval
	}
	return 0
}

func (m *VolumeSpec) GetVolumeLabels() map[string]string {
	if m != nil {
		return m.VolumeLabels
	}
	return nil
}

func (m *VolumeSpec) GetShared() bool {
	if m != nil {
		return m.Shared
	}
	return false
}

func (m *VolumeSpec) GetReplicaSet() *ReplicaSet {
	if m != nil {
		return m.ReplicaSet
	}
	return nil
}

func (m *VolumeSpec) GetAggregationLevel() uint32 {
	if m != nil {
		return m.AggregationLevel
	}
	return 0
}

func (m *VolumeSpec) GetEncrypted() bool {
	if m != nil {
		return m.Encrypted
	}
	return false
}

func (m *VolumeSpec) GetPassphrase() string {
	if m != nil {
		return m.Passphrase
	}
	return ""
}

func (m *VolumeSpec) GetSnapshotSchedule() string {
	if m != nil {
		return m.SnapshotSchedule
	}
	return ""
}

func (m *VolumeSpec) GetScale() uint32 {
	if m != nil {
		return m.Scale
	}
	return 0
}

func (m *VolumeSpec) GetSticky() bool {
	if m != nil {
		return m.Sticky
	}
	return false
}

func (m *VolumeSpec) GetGroup() *Group {
	if m != nil {
		return m.Group
	}
	return nil
}

func (m *VolumeSpec) GetGroupEnforced() bool {
	if m != nil {
		return m.GroupEnforced
	}
	return false
}

func (m *VolumeSpec) GetCompressed() bool {
	if m != nil {
		return m.Compressed
	}
	return false
}

func (m *VolumeSpec) GetCascaded() bool {
	if m != nil {
		return m.Cascaded
	}
	return false
}

func (m *VolumeSpec) GetJournal() bool {
	if m != nil {
		return m.Journal
	}
	return false
}

func (m *VolumeSpec) GetSharedv4() bool {
	if m != nil {
		return m.Sharedv4
	}
	return false
}

// ReplicaSet set of machine IDs (nodes) to which part of this volume is erasure
// coded - for clustered storage arrays
// swagger:model
type ReplicaSet struct {
	Nodes                []string `protobuf:"bytes,1,rep,name=nodes" json:"nodes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReplicaSet) Reset()         { *m = ReplicaSet{} }
func (m *ReplicaSet) String() string { return proto.CompactTextString(m) }
func (*ReplicaSet) ProtoMessage()    {}
func (*ReplicaSet) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_1e0f7a7c36ab7fa4, []int{6}
}
func (m *ReplicaSet) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReplicaSet.Unmarshal(m, b)
}
func (m *ReplicaSet) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReplicaSet.Marshal(b, m, deterministic)
}
func (dst *ReplicaSet) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReplicaSet.Merge(dst, src)
}
func (m *ReplicaSet) XXX_Size() int {
	return xxx_messageInfo_ReplicaSet.Size(m)
}
func (m *ReplicaSet) XXX_DiscardUnknown() {
	xxx_messageInfo_ReplicaSet.DiscardUnknown(m)
}

var xxx_messageInfo_ReplicaSet proto.InternalMessageInfo

func (m *ReplicaSet) GetNodes() []string {
	if m != nil {
		return m.Nodes
	}
	return nil
}

// RuntimeStateMap is a list of name value mapping of driver specific runtime
// information.
// swagger:model
type RuntimeStateMap struct {
	RuntimeState         map[string]string `protobuf:"bytes,1,rep,name=runtime_state,json=runtimeState" json:"runtime_state,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *RuntimeStateMap) Reset()         { *m = RuntimeStateMap{} }
func (m *RuntimeStateMap) String() string { return proto.CompactTextString(m) }
func (*RuntimeStateMap) ProtoMessage()    {}
func (*RuntimeStateMap) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_1e0f7a7c36ab7fa4, []int{7}
}
func (m *RuntimeStateMap) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RuntimeStateMap.Unmarshal(m, b)
}
func (m *RuntimeStateMap) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RuntimeStateMap.Marshal(b, m, deterministic)
}
func (dst *RuntimeStateMap) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RuntimeStateMap.Merge(dst, src)
}
func (m *RuntimeStateMap) XXX_Size() int {
	return xxx_messageInfo_RuntimeStateMap.Size(m)
}
func (m *RuntimeStateMap) XXX_DiscardUnknown() {
	xxx_messageInfo_RuntimeStateMap.DiscardUnknown(m)
}

var xxx_messageInfo_RuntimeStateMap proto.InternalMessageInfo

func (m *RuntimeStateMap) GetRuntimeState() map[string]string {
	if m != nil {
		return m.RuntimeState
	}
	return nil
}

// Volume represents an abstract storage volume.
// Volume represents an abstract storage volume.
// swagger:model
type Volume struct {
	// Self referential volume ID.
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	// Source specified seed data for the volume.
	Source *Source `protobuf:"bytes,2,opt,name=source" json:"source,omitempty"`
	// Group volumes in the same group have the same group id.
	Group *Group `protobuf:"bytes,3,opt,name=group" json:"group,omitempty"`
	// Readonly is true if this volume is to be mounted with readonly access.
	Readonly bool `protobuf:"varint,4,opt,name=readonly" json:"readonly,omitempty"`
	// User specified locator
	Locator *VolumeLocator `protobuf:"bytes,5,opt,name=locator" json:"locator,omitempty"`
	// Volume creation time
	Ctime *timestamp.Timestamp `protobuf:"bytes,6,opt,name=ctime" json:"ctime,omitempty"`
	// User specified VolumeSpec
	Spec *VolumeSpec `protobuf:"bytes,7,opt,name=spec" json:"spec,omitempty"`
	// Usage is bytes consumed by vtheis volume.
	Usage uint64 `protobuf:"varint,8,opt,name=usage" json:"usage,omitempty"`
	// LastScan is the time when an integrity check was run.
	LastScan *timestamp.Timestamp `protobuf:"bytes,9,opt,name=last_scan,json=lastScan" json:"last_scan,omitempty"`
	// Format specifies the filesytem for this volume.
	Format FSType `protobuf:"varint,10,opt,name=format,enum=openstorage.api.FSType" json:"format,omitempty"`
	// Status is the availability status of this volume.
	Status VolumeStatus `protobuf:"varint,11,opt,name=status,enum=openstorage.api.VolumeStatus" json:"status,omitempty"`
	// State is the current runtime state of this volume.
	State VolumeState `protobuf:"varint,12,opt,name=state,enum=openstorage.api.VolumeState" json:"state,omitempty"`
	// AttachedOn is the node instance identifier for clustered systems.
	AttachedOn string `protobuf:"bytes,13,opt,name=attached_on,json=attachedOn" json:"attached_on,omitempty"`
	// AttachedState shows whether the device is attached for internal or external use.
	AttachedState AttachState `protobuf:"varint,14,opt,name=attached_state,json=attachedState,enum=openstorage.api.AttachState" json:"attached_state,omitempty"`
	// DevicePath is the device exported by block device implementations.
	DevicePath string `protobuf:"bytes,15,opt,name=device_path,json=devicePath" json:"device_path,omitempty"`
	// SecureDevicePath is the device path for an encrypted volume.
	SecureDevicePath string `protobuf:"bytes,16,opt,name=secure_device_path,json=secureDevicePath" json:"secure_device_path,omitempty"`
	// AttachPath is the mounted path in the host namespace.
	AttachPath []string `protobuf:"bytes,17,rep,name=attach_path,json=attachPath" json:"attach_path,omitempty"`
	// AttachInfo is a list of name value mappings that provides attach information.
	AttachInfo map[string]string `protobuf:"bytes,18,rep,name=attach_info,json=attachInfo" json:"attach_info,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// ReplicatSets storage for this volumefor clustered storage arrays.
	ReplicaSets []*ReplicaSet `protobuf:"bytes,19,rep,name=replica_sets,json=replicaSets" json:"replica_sets,omitempty"`
	// RuntimeState is a lst of name value mapping of driver specific runtime
	// information.
	RuntimeState []*RuntimeStateMap `protobuf:"bytes,20,rep,name=runtime_state,json=runtimeState" json:"runtime_state,omitempty"`
	// Error is the Last recorded error.
	Error string `protobuf:"bytes,21,opt,name=error" json:"error,omitempty"`
	// VolumeConsumers are entities that consume this volume
	VolumeConsumers      []*VolumeConsumer `protobuf:"bytes,22,rep,name=volume_consumers,json=volumeConsumers" json:"volume_consumers,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Volume) Reset()         { *m = Volume{} }
func (m *Volume) String() string { return proto.CompactTextString(m) }
func (*Volume) ProtoMessage()    {}
func (*Volume) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_1e0f7a7c36ab7fa4, []int{8}
}
func (m *Volume) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Volume.Unmarshal(m, b)
}
func (m *Volume) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Volume.Marshal(b, m, deterministic)
}
func (dst *Volume) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Volume.Merge(dst, src)
}
func (m *Volume) XXX_Size() int {
	return xxx_messageInfo_Volume.Size(m)
}
func (m *Volume) XXX_DiscardUnknown() {
	xxx_messageInfo_Volume.DiscardUnknown(m)
}

var xxx_messageInfo_Volume proto.InternalMessageInfo

func (m *Volume) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Volume) GetSource() *Source {
	if m != nil {
		return m.Source
	}
	return nil
}

func (m *Volume) GetGroup() *Group {
	if m != nil {
		return m.Group
	}
	return nil
}

func (m *Volume) GetReadonly() bool {
	if m != nil {
		return m.Readonly
	}
	return false
}

func (m *Volume) GetLocator() *VolumeLocator {
	if m != nil {
		return m.Locator
	}
	return nil
}

func (m *Volume) GetCtime() *timestamp.Timestamp {
	if m != nil {
		return m.Ctime
	}
	return nil
}

func (m *Volume) GetSpec() *VolumeSpec {
	if m != nil {
		return m.Spec
	}
	return nil
}

func (m *Volume) GetUsage() uint64 {
	if m != nil {
		return m.Usage
	}
	return 0
}

func (m *Volume) GetLastScan() *timestamp.Timestamp {
	if m != nil {
		return m.LastScan
	}
	return nil
}

func (m *Volume) GetFormat() FSType {
	if m != nil {
		return m.Format
	}
	return FSType_FS_TYPE_NONE
}

func (m *Volume) GetStatus() VolumeStatus {
	if m != nil {
		return m.Status
	}
	return VolumeStatus_VOLUME_STATUS_NONE
}

func (m *Volume) GetState() VolumeState {
	if m != nil {
		return m.State
	}
	return VolumeState_VOLUME_STATE_NONE
}

func (m *Volume) GetAttachedOn() string {
	if m != nil {
		return m.AttachedOn
	}
	return ""
}

func (m *Volume) GetAttachedState() AttachState {
	if m != nil {
		return m.AttachedState
	}
	return AttachState_ATTACH_STATE_EXTERNAL
}

func (m *Volume) GetDevicePath() string {
	if m != nil {
		return m.DevicePath
	}
	return ""
}

func (m *Volume) GetSecureDevicePath() string {
	if m != nil {
		return m.SecureDevicePath
	}
	return ""
}

func (m *Volume) GetAttachPath() []string {
	if m != nil {
		return m.AttachPath
	}
	return nil
}

func (m *Volume) GetAttachInfo() map[string]string {
	if m != nil {
		return m.AttachInfo
	}
	return nil
}

func (m *Volume) GetReplicaSets() []*ReplicaSet {
	if m != nil {
		return m.ReplicaSets
	}
	return nil
}

func (m *Volume) GetRuntimeState() []*RuntimeStateMap {
	if m != nil {
		return m.RuntimeState
	}
	return nil
}

func (m *Volume) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

func (m *Volume) GetVolumeConsumers() []*VolumeConsumer {
	if m != nil {
		return m.VolumeConsumers
	}
	return nil
}

// Stats is a structure that represents last collected stats for a volume
// swagger:model
type Stats struct {
	// Reads completed successfully
	Reads uint64 `protobuf:"varint,1,opt,name=reads" json:"reads,omitempty"`
	// Time spent in reads in ms
	ReadMs    uint64 `protobuf:"varint,2,opt,name=read_ms,json=readMs" json:"read_ms,omitempty"`
	ReadBytes uint64 `protobuf:"varint,3,opt,name=read_bytes,json=readBytes" json:"read_bytes,omitempty"`
	// Writes completed successfully
	Writes uint64 `protobuf:"varint,4,opt,name=writes" json:"writes,omitempty"`
	// Time spent in writes in ms
	WriteMs    uint64 `protobuf:"varint,5,opt,name=write_ms,json=writeMs" json:"write_ms,omitempty"`
	WriteBytes uint64 `protobuf:"varint,6,opt,name=write_bytes,json=writeBytes" json:"write_bytes,omitempty"`
	// IOs curently in progress
	IoProgress uint64 `protobuf:"varint,7,opt,name=io_progress,json=ioProgress" json:"io_progress,omitempty"`
	// Time spent doing IOs ms
	IoMs uint64 `protobuf:"varint,8,opt,name=io_ms,json=ioMs" json:"io_ms,omitempty"`
	// BytesUsed
	BytesUsed uint64 `protobuf:"varint,9,opt,name=bytes_used,json=bytesUsed" json:"bytes_used,omitempty"`
	// Interval in ms during which stats were collected
	IntervalMs           uint64   `protobuf:"varint,10,opt,name=interval_ms,json=intervalMs" json:"interval_ms,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Stats) Reset()         { *m = Stats{} }
func (m *Stats) String() string { return proto.CompactTextString(m) }
func (*Stats) ProtoMessage()    {}
func (*Stats) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_1e0f7a7c36ab7fa4, []int{9}
}
func (m *Stats) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Stats.Unmarshal(m, b)
}
func (m *Stats) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Stats.Marshal(b, m, deterministic)
}
func (dst *Stats) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Stats.Merge(dst, src)
}
func (m *Stats) XXX_Size() int {
	return xxx_messageInfo_Stats.Size(m)
}
func (m *Stats) XXX_DiscardUnknown() {
	xxx_messageInfo_Stats.DiscardUnknown(m)
}

var xxx_messageInfo_Stats proto.InternalMessageInfo

func (m *Stats) GetReads() uint64 {
	if m != nil {
		return m.Reads
	}
	return 0
}

func (m *Stats) GetReadMs() uint64 {
	if m != nil {
		return m.ReadMs
	}
	return 0
}

func (m *Stats) GetReadBytes() uint64 {
	if m != nil {
		return m.ReadBytes
	}
	return 0
}

func (m *Stats) GetWrites() uint64 {
	if m != nil {
		return m.Writes
	}
	return 0
}

func (m *Stats) GetWriteMs() uint64 {
	if m != nil {
		return m.WriteMs
	}
	return 0
}

func (m *Stats) GetWriteBytes() uint64 {
	if m != nil {
		return m.WriteBytes
	}
	return 0
}

func (m *Stats) GetIoProgress() uint64 {
	if m != nil {
		return m.IoProgress
	}
	return 0
}

func (m *Stats) GetIoMs() uint64 {
	if m != nil {
		return m.IoMs
	}
	return 0
}

func (m *Stats) GetBytesUsed() uint64 {
	if m != nil {
		return m.BytesUsed
	}
	return 0
}

func (m *Stats) GetIntervalMs() uint64 {
	if m != nil {
		return m.IntervalMs
	}
	return 0
}

// Alert is a structure that represents an alert object
// swagger:model
type Alert struct {
	// Id for Alert
	Id int64 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	// Severity of the Alert
	Severity SeverityType `protobuf:"varint,2,opt,name=severity,enum=openstorage.api.SeverityType" json:"severity,omitempty"`
	// AlertType user defined alert type
	AlertType int64 `protobuf:"varint,3,opt,name=alert_type,json=alertType" json:"alert_type,omitempty"`
	// Message describing the Alert
	Message string `protobuf:"bytes,4,opt,name=message" json:"message,omitempty"`
	// Timestamp when Alert occured
	Timestamp *timestamp.Timestamp `protobuf:"bytes,5,opt,name=timestamp" json:"timestamp,omitempty"`
	// ResourceId where Alert occured
	ResourceId string `protobuf:"bytes,6,opt,name=resource_id,json=resourceId" json:"resource_id,omitempty"`
	// Resource where Alert occured
	Resource ResourceType `protobuf:"varint,7,opt,name=resource,enum=openstorage.api.ResourceType" json:"resource,omitempty"`
	// Cleared Flag
	Cleared bool `protobuf:"varint,8,opt,name=cleared" json:"cleared,omitempty"`
	// TTL in seconds for this Alert
	Ttl uint64 `protobuf:"varint,9,opt,name=ttl" json:"ttl,omitempty"`
	// UniqueTag helps identify a unique alert for a given resouce
	UniqueTag            string   `protobuf:"bytes,10,opt,name=unique_tag,json=uniqueTag" json:"unique_tag,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Alert) Reset()         { *m = Alert{} }
func (m *Alert) String() string { return proto.CompactTextString(m) }
func (*Alert) ProtoMessage()    {}
func (*Alert) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_1e0f7a7c36ab7fa4, []int{10}
}
func (m *Alert) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Alert.Unmarshal(m, b)
}
func (m *Alert) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Alert.Marshal(b, m, deterministic)
}
func (dst *Alert) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Alert.Merge(dst, src)
}
func (m *Alert) XXX_Size() int {
	return xxx_messageInfo_Alert.Size(m)
}
func (m *Alert) XXX_DiscardUnknown() {
	xxx_messageInfo_Alert.DiscardUnknown(m)
}

var xxx_messageInfo_Alert proto.InternalMessageInfo

func (m *Alert) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Alert) GetSeverity() SeverityType {
	if m != nil {
		return m.Severity
	}
	return SeverityType_SEVERITY_TYPE_NONE
}

func (m *Alert) GetAlertType() int64 {
	if m != nil {
		return m.AlertType
	}
	return 0
}

func (m *Alert) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *Alert) GetTimestamp() *timestamp.Timestamp {
	if m != nil {
		return m.Timestamp
	}
	return nil
}

func (m *Alert) GetResourceId() string {
	if m != nil {
		return m.ResourceId
	}
	return ""
}

func (m *Alert) GetResource() ResourceType {
	if m != nil {
		return m.Resource
	}
	return ResourceType_RESOURCE_TYPE_NONE
}

func (m *Alert) GetCleared() bool {
	if m != nil {
		return m.Cleared
	}
	return false
}

func (m *Alert) GetTtl() uint64 {
	if m != nil {
		return m.Ttl
	}
	return 0
}

func (m *Alert) GetUniqueTag() string {
	if m != nil {
		return m.UniqueTag
	}
	return ""
}

// Alerts is an array of Alert objects
// swagger:model
type Alerts struct {
	Alert                []*Alert `protobuf:"bytes,1,rep,name=alert" json:"alert,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Alerts) Reset()         { *m = Alerts{} }
func (m *Alerts) String() string { return proto.CompactTextString(m) }
func (*Alerts) ProtoMessage()    {}
func (*Alerts) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_1e0f7a7c36ab7fa4, []int{11}
}
func (m *Alerts) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Alerts.Unmarshal(m, b)
}
func (m *Alerts) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Alerts.Marshal(b, m, deterministic)
}
func (dst *Alerts) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Alerts.Merge(dst, src)
}
func (m *Alerts) XXX_Size() int {
	return xxx_messageInfo_Alerts.Size(m)
}
func (m *Alerts) XXX_DiscardUnknown() {
	xxx_messageInfo_Alerts.DiscardUnknown(m)
}

var xxx_messageInfo_Alerts proto.InternalMessageInfo

func (m *Alerts) GetAlert() []*Alert {
	if m != nil {
		return m.Alert
	}
	return nil
}

// ObjectstoreInfo is a structure that has current objectstore info
// swagger:model
type ObjectstoreInfo struct {
	// UUID of objectstore
	Uuid string `protobuf:"bytes,1,opt,name=uuid" json:"uuid,omitempty"`
	// VolumeID of volume used by object store
	VolumeId string `protobuf:"bytes,2,opt,name=volume_id,json=volumeId" json:"volume_id,omitempty"`
	// Enable/Disable created objectstore
	Enabled bool `protobuf:"varint,3,opt,name=enabled" json:"enabled,omitempty"`
	// Status of objectstore running/failed
	Status string `protobuf:"bytes,4,opt,name=status" json:"status,omitempty"`
	// Action being taken on this objectstore
	Action int64 `protobuf:"varint,5,opt,name=action" json:"action,omitempty"`
	// AccessKey for login into objectstore
	AccessKey string `protobuf:"bytes,6,opt,name=access_key,json=accessKey" json:"access_key,omitempty"`
	// SecretKey for login into objectstore
	SecretKey string `protobuf:"bytes,7,opt,name=secret_key,json=secretKey" json:"secret_key,omitempty"`
	// Endpoints for accessing objectstore
	Endpoints []string `protobuf:"bytes,8,rep,name=endpoints" json:"endpoints,omitempty"`
	// CurrentEndpoint on which objectstore server is accessible
	CurrentEndPoint string `protobuf:"bytes,9,opt,name=current_endPoint,json=currentEndPoint" json:"current_endPoint,omitempty"`
	// AccessPort is objectstore server port
	AccessPort int64 `protobuf:"varint,10,opt,name=access_port,json=accessPort" json:"access_port,omitempty"`
	// Region for this objectstore
	Region               string   `protobuf:"bytes,11,opt,name=region" json:"region,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ObjectstoreInfo) Reset()         { *m = ObjectstoreInfo{} }
func (m *ObjectstoreInfo) String() string { return proto.CompactTextString(m) }
func (*ObjectstoreInfo) ProtoMessage()    {}
func (*ObjectstoreInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_1e0f7a7c36ab7fa4, []int{12}
}
func (m *ObjectstoreInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ObjectstoreInfo.Unmarshal(m, b)
}
func (m *ObjectstoreInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ObjectstoreInfo.Marshal(b, m, deterministic)
}
func (dst *ObjectstoreInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ObjectstoreInfo.Merge(dst, src)
}
func (m *ObjectstoreInfo) XXX_Size() int {
	return xxx_messageInfo_ObjectstoreInfo.Size(m)
}
func (m *ObjectstoreInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ObjectstoreInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ObjectstoreInfo proto.InternalMessageInfo

func (m *ObjectstoreInfo) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *ObjectstoreInfo) GetVolumeId() string {
	if m != nil {
		return m.VolumeId
	}
	return ""
}

func (m *ObjectstoreInfo) GetEnabled() bool {
	if m != nil {
		return m.Enabled
	}
	return false
}

func (m *ObjectstoreInfo) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *ObjectstoreInfo) GetAction() int64 {
	if m != nil {
		return m.Action
	}
	return 0
}

func (m *ObjectstoreInfo) GetAccessKey() string {
	if m != nil {
		return m.AccessKey
	}
	return ""
}

func (m *ObjectstoreInfo) GetSecretKey() string {
	if m != nil {
		return m.SecretKey
	}
	return ""
}

func (m *ObjectstoreInfo) GetEndpoints() []string {
	if m != nil {
		return m.Endpoints
	}
	return nil
}

func (m *ObjectstoreInfo) GetCurrentEndPoint() string {
	if m != nil {
		return m.CurrentEndPoint
	}
	return ""
}

func (m *ObjectstoreInfo) GetAccessPort() int64 {
	if m != nil {
		return m.AccessPort
	}
	return 0
}

func (m *ObjectstoreInfo) GetRegion() string {
	if m != nil {
		return m.Region
	}
	return ""
}

// VolumeCreateRequest is a structure that has the locator, source and spec
// to create a volume
// swagger:model
type VolumeCreateRequest struct {
	// User specified volume name and labels
	Locator *VolumeLocator `protobuf:"bytes,1,opt,name=locator" json:"locator,omitempty"`
	// Source to create volume
	Source *Source `protobuf:"bytes,2,opt,name=source" json:"source,omitempty"`
	// The storage spec for the volume
	Spec                 *VolumeSpec `protobuf:"bytes,3,opt,name=spec" json:"spec,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *VolumeCreateRequest) Reset()         { *m = VolumeCreateRequest{} }
func (m *VolumeCreateRequest) String() string { return proto.CompactTextString(m) }
func (*VolumeCreateRequest) ProtoMessage()    {}
func (*VolumeCreateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_1e0f7a7c36ab7fa4, []int{13}
}
func (m *VolumeCreateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VolumeCreateRequest.Unmarshal(m, b)
}
func (m *VolumeCreateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VolumeCreateRequest.Marshal(b, m, deterministic)
}
func (dst *VolumeCreateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VolumeCreateRequest.Merge(dst, src)
}
func (m *VolumeCreateRequest) XXX_Size() int {
	return xxx_messageInfo_VolumeCreateRequest.Size(m)
}
func (m *VolumeCreateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_VolumeCreateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_VolumeCreateRequest proto.InternalMessageInfo

func (m *VolumeCreateRequest) GetLocator() *VolumeLocator {
	if m != nil {
		return m.Locator
	}
	return nil
}

func (m *VolumeCreateRequest) GetSource() *Source {
	if m != nil {
		return m.Source
	}
	return nil
}

func (m *VolumeCreateRequest) GetSpec() *VolumeSpec {
	if m != nil {
		return m.Spec
	}
	return nil
}

// VolumeResponse is a structure that wraps an error.
// swagger:response volumeResponse
type VolumeResponse struct {
	// Error message
	//
	// in: body
	// Required: true
	Error                string   `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VolumeResponse) Reset()         { *m = VolumeResponse{} }
func (m *VolumeResponse) String() string { return proto.CompactTextString(m) }
func (*VolumeResponse) ProtoMessage()    {}
func (*VolumeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_1e0f7a7c36ab7fa4, []int{14}
}
func (m *VolumeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VolumeResponse.Unmarshal(m, b)
}
func (m *VolumeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VolumeResponse.Marshal(b, m, deterministic)
}
func (dst *VolumeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VolumeResponse.Merge(dst, src)
}
func (m *VolumeResponse) XXX_Size() int {
	return xxx_messageInfo_VolumeResponse.Size(m)
}
func (m *VolumeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_VolumeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_VolumeResponse proto.InternalMessageInfo

func (m *VolumeResponse) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

// VolumeCreateResponse
// swagger:response volumeCreateResponse
type VolumeCreateResponse struct {
	// ID of the newly created volume
	//
	// in: body
	// Required: true
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	// Volume Response
	//
	// in: body
	// Required: true
	VolumeResponse       *VolumeResponse `protobuf:"bytes,2,opt,name=volume_response,json=volumeResponse" json:"volume_response,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *VolumeCreateResponse) Reset()         { *m = VolumeCreateResponse{} }
func (m *VolumeCreateResponse) String() string { return proto.CompactTextString(m) }
func (*VolumeCreateResponse) ProtoMessage()    {}
func (*VolumeCreateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_1e0f7a7c36ab7fa4, []int{15}
}
func (m *VolumeCreateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VolumeCreateResponse.Unmarshal(m, b)
}
func (m *VolumeCreateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VolumeCreateResponse.Marshal(b, m, deterministic)
}
func (dst *VolumeCreateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VolumeCreateResponse.Merge(dst, src)
}
func (m *VolumeCreateResponse) XXX_Size() int {
	return xxx_messageInfo_VolumeCreateResponse.Size(m)
}
func (m *VolumeCreateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_VolumeCreateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_VolumeCreateResponse proto.InternalMessageInfo

func (m *VolumeCreateResponse) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *VolumeCreateResponse) GetVolumeResponse() *VolumeResponse {
	if m != nil {
		return m.VolumeResponse
	}
	return nil
}

// VolumeStateAction specifies desired actions.
// swagger:model
type VolumeStateAction struct {
	// Attach or Detach volume
	Attach VolumeActionParam `protobuf:"varint,1,opt,name=attach,enum=openstorage.api.VolumeActionParam" json:"attach,omitempty"`
	// Mount or unmount volume
	Mount VolumeActionParam `protobuf:"varint,2,opt,name=mount,enum=openstorage.api.VolumeActionParam" json:"mount,omitempty"`
	// MountPath Path where the device is mounted
	MountPath string `protobuf:"bytes,3,opt,name=mount_path,json=mountPath" json:"mount_path,omitempty"`
	// DevicePath Path returned in attach
	DevicePath           string   `protobuf:"bytes,4,opt,name=device_path,json=devicePath" json:"device_path,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VolumeStateAction) Reset()         { *m = VolumeStateAction{} }
func (m *VolumeStateAction) String() string { return proto.CompactTextString(m) }
func (*VolumeStateAction) ProtoMessage()    {}
func (*VolumeStateAction) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_1e0f7a7c36ab7fa4, []int{16}
}
func (m *VolumeStateAction) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VolumeStateAction.Unmarshal(m, b)
}
func (m *VolumeStateAction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VolumeStateAction.Marshal(b, m, deterministic)
}
func (dst *VolumeStateAction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VolumeStateAction.Merge(dst, src)
}
func (m *VolumeStateAction) XXX_Size() int {
	return xxx_messageInfo_VolumeStateAction.Size(m)
}
func (m *VolumeStateAction) XXX_DiscardUnknown() {
	xxx_messageInfo_VolumeStateAction.DiscardUnknown(m)
}

var xxx_messageInfo_VolumeStateAction proto.InternalMessageInfo

func (m *VolumeStateAction) GetAttach() VolumeActionParam {
	if m != nil {
		return m.Attach
	}
	return VolumeActionParam_VOLUME_ACTION_PARAM_NONE
}

func (m *VolumeStateAction) GetMount() VolumeActionParam {
	if m != nil {
		return m.Mount
	}
	return VolumeActionParam_VOLUME_ACTION_PARAM_NONE
}

func (m *VolumeStateAction) GetMountPath() string {
	if m != nil {
		return m.MountPath
	}
	return ""
}

func (m *VolumeStateAction) GetDevicePath() string {
	if m != nil {
		return m.DevicePath
	}
	return ""
}

// VolumeSet specifies a request to update a volume.
// swagger:model
type VolumeSetRequest struct {
	// User specified volume name and labels
	Locator *VolumeLocator `protobuf:"bytes,1,opt,name=locator" json:"locator,omitempty"`
	// The storage spec for the volume
	Spec *VolumeSpec `protobuf:"bytes,2,opt,name=spec" json:"spec,omitempty"`
	// State modification on this volume.
	Action *VolumeStateAction `protobuf:"bytes,3,opt,name=action" json:"action,omitempty"`
	// additional options
	// required for the Set operation.
	Options              map[string]string `protobuf:"bytes,4,rep,name=options" json:"options,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *VolumeSetRequest) Reset()         { *m = VolumeSetRequest{} }
func (m *VolumeSetRequest) String() string { return proto.CompactTextString(m) }
func (*VolumeSetRequest) ProtoMessage()    {}
func (*VolumeSetRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_1e0f7a7c36ab7fa4, []int{17}
}
func (m *VolumeSetRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VolumeSetRequest.Unmarshal(m, b)
}
func (m *VolumeSetRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VolumeSetRequest.Marshal(b, m, deterministic)
}
func (dst *VolumeSetRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VolumeSetRequest.Merge(dst, src)
}
func (m *VolumeSetRequest) XXX_Size() int {
	return xxx_messageInfo_VolumeSetRequest.Size(m)
}
func (m *VolumeSetRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_VolumeSetRequest.DiscardUnknown(m)
}

var xxx_messageInfo_VolumeSetRequest proto.InternalMessageInfo

func (m *VolumeSetRequest) GetLocator() *VolumeLocator {
	if m != nil {
		return m.Locator
	}
	return nil
}

func (m *VolumeSetRequest) GetSpec() *VolumeSpec {
	if m != nil {
		return m.Spec
	}
	return nil
}

func (m *VolumeSetRequest) GetAction() *VolumeStateAction {
	if m != nil {
		return m.Action
	}
	return nil
}

func (m *VolumeSetRequest) GetOptions() map[string]string {
	if m != nil {
		return m.Options
	}
	return nil
}

// VolumeSetResponse
// swagger:response volumeSetResponse
type VolumeSetResponse struct {
	// Volume
	//
	// in: body
	// Required: true
	Volume *Volume `protobuf:"bytes,1,opt,name=volume" json:"volume,omitempty"`
	// VolumeResponse
	//
	// in: body
	// Required: true
	VolumeResponse       *VolumeResponse `protobuf:"bytes,2,opt,name=volume_response,json=volumeResponse" json:"volume_response,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *VolumeSetResponse) Reset()         { *m = VolumeSetResponse{} }
func (m *VolumeSetResponse) String() string { return proto.CompactTextString(m) }
func (*VolumeSetResponse) ProtoMessage()    {}
func (*VolumeSetResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_1e0f7a7c36ab7fa4, []int{18}
}
func (m *VolumeSetResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VolumeSetResponse.Unmarshal(m, b)
}
func (m *VolumeSetResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VolumeSetResponse.Marshal(b, m, deterministic)
}
func (dst *VolumeSetResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VolumeSetResponse.Merge(dst, src)
}
func (m *VolumeSetResponse) XXX_Size() int {
	return xxx_messageInfo_VolumeSetResponse.Size(m)
}
func (m *VolumeSetResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_VolumeSetResponse.DiscardUnknown(m)
}

var xxx_messageInfo_VolumeSetResponse proto.InternalMessageInfo

func (m *VolumeSetResponse) GetVolume() *Volume {
	if m != nil {
		return m.Volume
	}
	return nil
}

func (m *VolumeSetResponse) GetVolumeResponse() *VolumeResponse {
	if m != nil {
		return m.VolumeResponse
	}
	return nil
}

// SnapCreateRequest specifies a request to create a snapshot of given volume.
// swagger:parameters snapVolume
type SnapCreateRequest struct {
	// volume id
	Id                   string         `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Locator              *VolumeLocator `protobuf:"bytes,2,opt,name=locator" json:"locator,omitempty"`
	Readonly             bool           `protobuf:"varint,3,opt,name=readonly" json:"readonly,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *SnapCreateRequest) Reset()         { *m = SnapCreateRequest{} }
func (m *SnapCreateRequest) String() string { return proto.CompactTextString(m) }
func (*SnapCreateRequest) ProtoMessage()    {}
func (*SnapCreateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_1e0f7a7c36ab7fa4, []int{19}
}
func (m *SnapCreateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SnapCreateRequest.Unmarshal(m, b)
}
func (m *SnapCreateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SnapCreateRequest.Marshal(b, m, deterministic)
}
func (dst *SnapCreateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SnapCreateRequest.Merge(dst, src)
}
func (m *SnapCreateRequest) XXX_Size() int {
	return xxx_messageInfo_SnapCreateRequest.Size(m)
}
func (m *SnapCreateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SnapCreateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SnapCreateRequest proto.InternalMessageInfo

func (m *SnapCreateRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *SnapCreateRequest) GetLocator() *VolumeLocator {
	if m != nil {
		return m.Locator
	}
	return nil
}

func (m *SnapCreateRequest) GetReadonly() bool {
	if m != nil {
		return m.Readonly
	}
	return false
}

// SnapCreateRequest specifies a response that get's returned when creating a snapshot.
// swagger:response snapCreateResponse
type SnapCreateResponse struct {
	// VolumeCreateResponse
	//
	// in: body
	// Required: true
	VolumeCreateResponse *VolumeCreateResponse `protobuf:"bytes,1,opt,name=volume_create_response,json=volumeCreateResponse" json:"volume_create_response,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *SnapCreateResponse) Reset()         { *m = SnapCreateResponse{} }
func (m *SnapCreateResponse) String() string { return proto.CompactTextString(m) }
func (*SnapCreateResponse) ProtoMessage()    {}
func (*SnapCreateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_1e0f7a7c36ab7fa4, []int{20}
}
func (m *SnapCreateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SnapCreateResponse.Unmarshal(m, b)
}
func (m *SnapCreateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SnapCreateResponse.Marshal(b, m, deterministic)
}
func (dst *SnapCreateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SnapCreateResponse.Merge(dst, src)
}
func (m *SnapCreateResponse) XXX_Size() int {
	return xxx_messageInfo_SnapCreateResponse.Size(m)
}
func (m *SnapCreateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SnapCreateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SnapCreateResponse proto.InternalMessageInfo

func (m *SnapCreateResponse) GetVolumeCreateResponse() *VolumeCreateResponse {
	if m != nil {
		return m.VolumeCreateResponse
	}
	return nil
}

// VolumeInfo
// swagger:model
type VolumeInfo struct {
	VolumeId             string      `protobuf:"bytes,1,opt,name=volume_id,json=volumeId" json:"volume_id,omitempty"`
	Path                 string      `protobuf:"bytes,2,opt,name=path" json:"path,omitempty"`
	Storage              *VolumeSpec `protobuf:"bytes,3,opt,name=storage" json:"storage,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *VolumeInfo) Reset()         { *m = VolumeInfo{} }
func (m *VolumeInfo) String() string { return proto.CompactTextString(m) }
func (*VolumeInfo) ProtoMessage()    {}
func (*VolumeInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_1e0f7a7c36ab7fa4, []int{21}
}
func (m *VolumeInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VolumeInfo.Unmarshal(m, b)
}
func (m *VolumeInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VolumeInfo.Marshal(b, m, deterministic)
}
func (dst *VolumeInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VolumeInfo.Merge(dst, src)
}
func (m *VolumeInfo) XXX_Size() int {
	return xxx_messageInfo_VolumeInfo.Size(m)
}
func (m *VolumeInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_VolumeInfo.DiscardUnknown(m)
}

var xxx_messageInfo_VolumeInfo proto.InternalMessageInfo

func (m *VolumeInfo) GetVolumeId() string {
	if m != nil {
		return m.VolumeId
	}
	return ""
}

func (m *VolumeInfo) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *VolumeInfo) GetStorage() *VolumeSpec {
	if m != nil {
		return m.Storage
	}
	return nil
}

// VolumeConsumer identifies a consumer for a Volume. An example of a VolumeConsumer
// would be a Pod in Kubernetes who has mounted the PersistentVolumeClaim for the
// Volume
// swagger: model
type VolumeConsumer struct {
	// Name is the name of the volume consumer
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	// Namespace is the namespace of the volume consumer
	Namespace string `protobuf:"bytes,2,opt,name=namespace" json:"namespace,omitempty"`
	// Type is the type of the consumer. E.g a Kubernetes pod
	Type string `protobuf:"bytes,3,opt,name=type" json:"type,omitempty"`
	// NodeID is the identifier of the node on which the consumer is running. This
	// identifier would be from the perspective of the container runtime or
	// orchestrator under which the volume consumer resides. For example, NodeID
	//  can be name of a minion in Kubernetes.
	NodeId string `protobuf:"bytes,4,opt,name=node_id,json=nodeId" json:"node_id,omitempty"`
	// OwnerName is the name of the entity who owns this volume consumer
	OwnerName string `protobuf:"bytes,5,opt,name=owner_name,json=ownerName" json:"owner_name,omitempty"`
	// OwnerType is the type of the entity who owns this volume consumer. The type would
	// be from the perspective of the container runtime or the orchestrator under which
	// the volume consumer resides. For e.g OwnerType can be a Deployment in Kubernetes.
	OwnerType            string   `protobuf:"bytes,6,opt,name=owner_type,json=ownerType" json:"owner_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VolumeConsumer) Reset()         { *m = VolumeConsumer{} }
func (m *VolumeConsumer) String() string { return proto.CompactTextString(m) }
func (*VolumeConsumer) ProtoMessage()    {}
func (*VolumeConsumer) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_1e0f7a7c36ab7fa4, []int{22}
}
func (m *VolumeConsumer) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VolumeConsumer.Unmarshal(m, b)
}
func (m *VolumeConsumer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VolumeConsumer.Marshal(b, m, deterministic)
}
func (dst *VolumeConsumer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VolumeConsumer.Merge(dst, src)
}
func (m *VolumeConsumer) XXX_Size() int {
	return xxx_messageInfo_VolumeConsumer.Size(m)
}
func (m *VolumeConsumer) XXX_DiscardUnknown() {
	xxx_messageInfo_VolumeConsumer.DiscardUnknown(m)
}

var xxx_messageInfo_VolumeConsumer proto.InternalMessageInfo

func (m *VolumeConsumer) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *VolumeConsumer) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *VolumeConsumer) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *VolumeConsumer) GetNodeId() string {
	if m != nil {
		return m.NodeId
	}
	return ""
}

func (m *VolumeConsumer) GetOwnerName() string {
	if m != nil {
		return m.OwnerName
	}
	return ""
}

func (m *VolumeConsumer) GetOwnerType() string {
	if m != nil {
		return m.OwnerType
	}
	return ""
}

// GraphDriverChanges represent a list of changes between the filesystem layers
// specified by the ID and Parent.  // Parent may be an empty string, in which
// case there is no parent.
// Where the Path is the filesystem path within the layered filesystem
// swagger:model
type GraphDriverChanges struct {
	Path                 string                `protobuf:"bytes,1,opt,name=path" json:"path,omitempty"`
	Kind                 GraphDriverChangeType `protobuf:"varint,2,opt,name=kind,enum=openstorage.api.GraphDriverChangeType" json:"kind,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *GraphDriverChanges) Reset()         { *m = GraphDriverChanges{} }
func (m *GraphDriverChanges) String() string { return proto.CompactTextString(m) }
func (*GraphDriverChanges) ProtoMessage()    {}
func (*GraphDriverChanges) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_1e0f7a7c36ab7fa4, []int{23}
}
func (m *GraphDriverChanges) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GraphDriverChanges.Unmarshal(m, b)
}
func (m *GraphDriverChanges) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GraphDriverChanges.Marshal(b, m, deterministic)
}
func (dst *GraphDriverChanges) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GraphDriverChanges.Merge(dst, src)
}
func (m *GraphDriverChanges) XXX_Size() int {
	return xxx_messageInfo_GraphDriverChanges.Size(m)
}
func (m *GraphDriverChanges) XXX_DiscardUnknown() {
	xxx_messageInfo_GraphDriverChanges.DiscardUnknown(m)
}

var xxx_messageInfo_GraphDriverChanges proto.InternalMessageInfo

func (m *GraphDriverChanges) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *GraphDriverChanges) GetKind() GraphDriverChangeType {
	if m != nil {
		return m.Kind
	}
	return GraphDriverChangeType_GRAPH_DRIVER_CHANGE_TYPE_NONE
}

// ClusterResponse specifies a response that gets returned when requesting the cluster
// swagger:response clusterResponse
type ClusterResponse struct {
	// Error code
	//
	// in: body
	Error                string   `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ClusterResponse) Reset()         { *m = ClusterResponse{} }
func (m *ClusterResponse) String() string { return proto.CompactTextString(m) }
func (*ClusterResponse) ProtoMessage()    {}
func (*ClusterResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_1e0f7a7c36ab7fa4, []int{24}
}
func (m *ClusterResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClusterResponse.Unmarshal(m, b)
}
func (m *ClusterResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClusterResponse.Marshal(b, m, deterministic)
}
func (dst *ClusterResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClusterResponse.Merge(dst, src)
}
func (m *ClusterResponse) XXX_Size() int {
	return xxx_messageInfo_ClusterResponse.Size(m)
}
func (m *ClusterResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ClusterResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ClusterResponse proto.InternalMessageInfo

func (m *ClusterResponse) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

// Active Request
// swagger:model
type ActiveRequest struct {
	ReqestKV             map[int64]string `protobuf:"bytes,1,rep,name=ReqestKV" json:"ReqestKV,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *ActiveRequest) Reset()         { *m = ActiveRequest{} }
func (m *ActiveRequest) String() string { return proto.CompactTextString(m) }
func (*ActiveRequest) ProtoMessage()    {}
func (*ActiveRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_1e0f7a7c36ab7fa4, []int{25}
}
func (m *ActiveRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ActiveRequest.Unmarshal(m, b)
}
func (m *ActiveRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ActiveRequest.Marshal(b, m, deterministic)
}
func (dst *ActiveRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActiveRequest.Merge(dst, src)
}
func (m *ActiveRequest) XXX_Size() int {
	return xxx_messageInfo_ActiveRequest.Size(m)
}
func (m *ActiveRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ActiveRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ActiveRequest proto.InternalMessageInfo

func (m *ActiveRequest) GetReqestKV() map[int64]string {
	if m != nil {
		return m.ReqestKV
	}
	return nil
}

// Active Requests
// swagger:model
type ActiveRequests struct {
	RequestCount         int64            `protobuf:"varint,1,opt,name=RequestCount" json:"RequestCount,omitempty"`
	ActiveRequest        []*ActiveRequest `protobuf:"bytes,2,rep,name=ActiveRequest" json:"ActiveRequest,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *ActiveRequests) Reset()         { *m = ActiveRequests{} }
func (m *ActiveRequests) String() string { return proto.CompactTextString(m) }
func (*ActiveRequests) ProtoMessage()    {}
func (*ActiveRequests) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_1e0f7a7c36ab7fa4, []int{26}
}
func (m *ActiveRequests) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ActiveRequests.Unmarshal(m, b)
}
func (m *ActiveRequests) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ActiveRequests.Marshal(b, m, deterministic)
}
func (dst *ActiveRequests) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActiveRequests.Merge(dst, src)
}
func (m *ActiveRequests) XXX_Size() int {
	return xxx_messageInfo_ActiveRequests.Size(m)
}
func (m *ActiveRequests) XXX_DiscardUnknown() {
	xxx_messageInfo_ActiveRequests.DiscardUnknown(m)
}

var xxx_messageInfo_ActiveRequests proto.InternalMessageInfo

func (m *ActiveRequests) GetRequestCount() int64 {
	if m != nil {
		return m.RequestCount
	}
	return 0
}

func (m *ActiveRequests) GetActiveRequest() []*ActiveRequest {
	if m != nil {
		return m.ActiveRequest
	}
	return nil
}

// GroupSnapCreateRequest specifies a request to create a snapshot of given group.
// swagger:model
type GroupSnapCreateRequest struct {
	Id                   string            `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Labels               map[string]string `protobuf:"bytes,2,rep,name=Labels" json:"Labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *GroupSnapCreateRequest) Reset()         { *m = GroupSnapCreateRequest{} }
func (m *GroupSnapCreateRequest) String() string { return proto.CompactTextString(m) }
func (*GroupSnapCreateRequest) ProtoMessage()    {}
func (*GroupSnapCreateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_1e0f7a7c36ab7fa4, []int{27}
}
func (m *GroupSnapCreateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GroupSnapCreateRequest.Unmarshal(m, b)
}
func (m *GroupSnapCreateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GroupSnapCreateRequest.Marshal(b, m, deterministic)
}
func (dst *GroupSnapCreateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GroupSnapCreateRequest.Merge(dst, src)
}
func (m *GroupSnapCreateRequest) XXX_Size() int {
	return xxx_messageInfo_GroupSnapCreateRequest.Size(m)
}
func (m *GroupSnapCreateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GroupSnapCreateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GroupSnapCreateRequest proto.InternalMessageInfo

func (m *GroupSnapCreateRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *GroupSnapCreateRequest) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

// GroupSnapCreateRequest specifies a response that get's returned when creating a group snapshot.
// swagger:response groupSnapCreateResponse
type GroupSnapCreateResponse struct {
	// Created snapshots
	//
	// in: body
	// Required: true
	Snapshots map[string]*SnapCreateResponse `protobuf:"bytes,1,rep,name=snapshots" json:"snapshots,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Error message
	//
	// in: body
	// Required: true
	Error                string   `protobuf:"bytes,2,opt,name=error" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GroupSnapCreateResponse) Reset()         { *m = GroupSnapCreateResponse{} }
func (m *GroupSnapCreateResponse) String() string { return proto.CompactTextString(m) }
func (*GroupSnapCreateResponse) ProtoMessage()    {}
func (*GroupSnapCreateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_1e0f7a7c36ab7fa4, []int{28}
}
func (m *GroupSnapCreateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GroupSnapCreateResponse.Unmarshal(m, b)
}
func (m *GroupSnapCreateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GroupSnapCreateResponse.Marshal(b, m, deterministic)
}
func (dst *GroupSnapCreateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GroupSnapCreateResponse.Merge(dst, src)
}
func (m *GroupSnapCreateResponse) XXX_Size() int {
	return xxx_messageInfo_GroupSnapCreateResponse.Size(m)
}
func (m *GroupSnapCreateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GroupSnapCreateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GroupSnapCreateResponse proto.InternalMessageInfo

func (m *GroupSnapCreateResponse) GetSnapshots() map[string]*SnapCreateResponse {
	if m != nil {
		return m.Snapshots
	}
	return nil
}

func (m *GroupSnapCreateResponse) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

// StorageNode describes the state of the node
type StorageNode struct {
	// Id of the node
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	// Cpu usage of the node
	Cpu float64 `protobuf:"fixed64,2,opt,name=cpu" json:"cpu,omitempty"`
	// Total memory of the node
	MemTotal uint64 `protobuf:"varint,3,opt,name=mem_total,json=memTotal" json:"mem_total,omitempty"`
	// Used memory of the node
	MemUsed uint64 `protobuf:"varint,4,opt,name=mem_used,json=memUsed" json:"mem_used,omitempty"`
	// Free memory of the node
	MemFree uint64 `protobuf:"varint,5,opt,name=mem_free,json=memFree" json:"mem_free,omitempty"`
	// Average load (percentage)
	AvgLoad int64 `protobuf:"varint,6,opt,name=avg_load,json=avgLoad" json:"avg_load,omitempty"`
	// Node status
	Status Status `protobuf:"varint,7,opt,name=status,enum=openstorage.api.Status" json:"status,omitempty"`
	// List of disks on the node
	Disks map[string]*StorageResource `protobuf:"bytes,9,rep,name=disks" json:"disks,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// List of storage pools this node supports
	Pools []*StoragePool `protobuf:"bytes,10,rep,name=pools" json:"pools,omitempty"`
	// Management IP
	MgmtIp string `protobuf:"bytes,11,opt,name=mgmt_ip,json=mgmtIp" json:"mgmt_ip,omitempty"`
	// Data IP
	DataIp string `protobuf:"bytes,12,opt,name=data_ip,json=dataIp" json:"data_ip,omitempty"`
	// Hostname of the node
	Hostname string `protobuf:"bytes,15,opt,name=hostname" json:"hostname,omitempty"`
	// User defined labels for the node
	NodeLabels           map[string]string `protobuf:"bytes,16,rep,name=node_labels,json=nodeLabels" json:"node_labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *StorageNode) Reset()         { *m = StorageNode{} }
func (m *StorageNode) String() string { return proto.CompactTextString(m) }
func (*StorageNode) ProtoMessage()    {}
func (*StorageNode) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_1e0f7a7c36ab7fa4, []int{29}
}
func (m *StorageNode) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StorageNode.Unmarshal(m, b)
}
func (m *StorageNode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StorageNode.Marshal(b, m, deterministic)
}
func (dst *StorageNode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StorageNode.Merge(dst, src)
}
func (m *StorageNode) XXX_Size() int {
	return xxx_messageInfo_StorageNode.Size(m)
}
func (m *StorageNode) XXX_DiscardUnknown() {
	xxx_messageInfo_StorageNode.DiscardUnknown(m)
}

var xxx_messageInfo_StorageNode proto.InternalMessageInfo

func (m *StorageNode) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *StorageNode) GetCpu() float64 {
	if m != nil {
		return m.Cpu
	}
	return 0
}

func (m *StorageNode) GetMemTotal() uint64 {
	if m != nil {
		return m.MemTotal
	}
	return 0
}

func (m *StorageNode) GetMemUsed() uint64 {
	if m != nil {
		return m.MemUsed
	}
	return 0
}

func (m *StorageNode) GetMemFree() uint64 {
	if m != nil {
		return m.MemFree
	}
	return 0
}

func (m *StorageNode) GetAvgLoad() int64 {
	if m != nil {
		return m.AvgLoad
	}
	return 0
}

func (m *StorageNode) GetStatus() Status {
	if m != nil {
		return m.Status
	}
	return Status_STATUS_NONE
}

func (m *StorageNode) GetDisks() map[string]*StorageResource {
	if m != nil {
		return m.Disks
	}
	return nil
}

func (m *StorageNode) GetPools() []*StoragePool {
	if m != nil {
		return m.Pools
	}
	return nil
}

func (m *StorageNode) GetMgmtIp() string {
	if m != nil {
		return m.MgmtIp
	}
	return ""
}

func (m *StorageNode) GetDataIp() string {
	if m != nil {
		return m.DataIp
	}
	return ""
}

func (m *StorageNode) GetHostname() string {
	if m != nil {
		return m.Hostname
	}
	return ""
}

func (m *StorageNode) GetNodeLabels() map[string]string {
	if m != nil {
		return m.NodeLabels
	}
	return nil
}

// StorageCluster represents the state of the cluster
type StorageCluster struct {
	// Status of the cluster
	Status Status `protobuf:"varint,1,opt,name=status,enum=openstorage.api.Status" json:"status,omitempty"`
	// Id of the cluster
	Id string `protobuf:"bytes,2,opt,name=id" json:"id,omitempty"`
	// NodeId is the id of the node servicing these requests
	NodeId string `protobuf:"bytes,3,opt,name=node_id,json=nodeId" json:"node_id,omitempty"`
	// Nodes are a list of all the nodes on the cluster
	Nodes                []*StorageNode `protobuf:"bytes,4,rep,name=nodes" json:"nodes,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *StorageCluster) Reset()         { *m = StorageCluster{} }
func (m *StorageCluster) String() string { return proto.CompactTextString(m) }
func (*StorageCluster) ProtoMessage()    {}
func (*StorageCluster) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_1e0f7a7c36ab7fa4, []int{30}
}
func (m *StorageCluster) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StorageCluster.Unmarshal(m, b)
}
func (m *StorageCluster) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StorageCluster.Marshal(b, m, deterministic)
}
func (dst *StorageCluster) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StorageCluster.Merge(dst, src)
}
func (m *StorageCluster) XXX_Size() int {
	return xxx_messageInfo_StorageCluster.Size(m)
}
func (m *StorageCluster) XXX_DiscardUnknown() {
	xxx_messageInfo_StorageCluster.DiscardUnknown(m)
}

var xxx_messageInfo_StorageCluster proto.InternalMessageInfo

func (m *StorageCluster) GetStatus() Status {
	if m != nil {
		return m.Status
	}
	return Status_STATUS_NONE
}

func (m *StorageCluster) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *StorageCluster) GetNodeId() string {
	if m != nil {
		return m.NodeId
	}
	return ""
}

func (m *StorageCluster) GetNodes() []*StorageNode {
	if m != nil {
		return m.Nodes
	}
	return nil
}

type VolumeMountRequest struct {
	// Id of the volume
	VolumeId string `protobuf:"bytes,1,opt,name=volume_id,json=volumeId" json:"volume_id,omitempty"`
	// Mount path for mounting the volume.
	MountPath string `protobuf:"bytes,2,opt,name=mount_path,json=mountPath" json:"mount_path,omitempty"`
	// Additional options
	Options              map[string]string `protobuf:"bytes,3,rep,name=options" json:"options,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *VolumeMountRequest) Reset()         { *m = VolumeMountRequest{} }
func (m *VolumeMountRequest) String() string { return proto.CompactTextString(m) }
func (*VolumeMountRequest) ProtoMessage()    {}
func (*VolumeMountRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_1e0f7a7c36ab7fa4, []int{31}
}
func (m *VolumeMountRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VolumeMountRequest.Unmarshal(m, b)
}
func (m *VolumeMountRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VolumeMountRequest.Marshal(b, m, deterministic)
}
func (dst *VolumeMountRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VolumeMountRequest.Merge(dst, src)
}
func (m *VolumeMountRequest) XXX_Size() int {
	return xxx_messageInfo_VolumeMountRequest.Size(m)
}
func (m *VolumeMountRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_VolumeMountRequest.DiscardUnknown(m)
}

var xxx_messageInfo_VolumeMountRequest proto.InternalMessageInfo

func (m *VolumeMountRequest) GetVolumeId() string {
	if m != nil {
		return m.VolumeId
	}
	return ""
}

func (m *VolumeMountRequest) GetMountPath() string {
	if m != nil {
		return m.MountPath
	}
	return ""
}

func (m *VolumeMountRequest) GetOptions() map[string]string {
	if m != nil {
		return m.Options
	}
	return nil
}

type VolumeMountResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VolumeMountResponse) Reset()         { *m = VolumeMountResponse{} }
func (m *VolumeMountResponse) String() string { return proto.CompactTextString(m) }
func (*VolumeMountResponse) ProtoMessage()    {}
func (*VolumeMountResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_1e0f7a7c36ab7fa4, []int{32}
}
func (m *VolumeMountResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VolumeMountResponse.Unmarshal(m, b)
}
func (m *VolumeMountResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VolumeMountResponse.Marshal(b, m, deterministic)
}
func (dst *VolumeMountResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VolumeMountResponse.Merge(dst, src)
}
func (m *VolumeMountResponse) XXX_Size() int {
	return xxx_messageInfo_VolumeMountResponse.Size(m)
}
func (m *VolumeMountResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_VolumeMountResponse.DiscardUnknown(m)
}

var xxx_messageInfo_VolumeMountResponse proto.InternalMessageInfo

type VolumeUnmountRequest struct {
	// Id of volume
	VolumeId string `protobuf:"bytes,1,opt,name=volume_id,json=volumeId" json:"volume_id,omitempty"`
	// MountPath for device
	MountPath string `protobuf:"bytes,2,opt,name=mount_path,json=mountPath" json:"mount_path,omitempty"`
	// Options to unmount device
	Options              map[string]string `protobuf:"bytes,3,rep,name=options" json:"options,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *VolumeUnmountRequest) Reset()         { *m = VolumeUnmountRequest{} }
func (m *VolumeUnmountRequest) String() string { return proto.CompactTextString(m) }
func (*VolumeUnmountRequest) ProtoMessage()    {}
func (*VolumeUnmountRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_1e0f7a7c36ab7fa4, []int{33}
}
func (m *VolumeUnmountRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VolumeUnmountRequest.Unmarshal(m, b)
}
func (m *VolumeUnmountRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VolumeUnmountRequest.Marshal(b, m, deterministic)
}
func (dst *VolumeUnmountRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VolumeUnmountRequest.Merge(dst, src)
}
func (m *VolumeUnmountRequest) XXX_Size() int {
	return xxx_messageInfo_VolumeUnmountRequest.Size(m)
}
func (m *VolumeUnmountRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_VolumeUnmountRequest.DiscardUnknown(m)
}

var xxx_messageInfo_VolumeUnmountRequest proto.InternalMessageInfo

func (m *VolumeUnmountRequest) GetVolumeId() string {
	if m != nil {
		return m.VolumeId
	}
	return ""
}

func (m *VolumeUnmountRequest) GetMountPath() string {
	if m != nil {
		return m.MountPath
	}
	return ""
}

func (m *VolumeUnmountRequest) GetOptions() map[string]string {
	if m != nil {
		return m.Options
	}
	return nil
}

type VolumeUnmountResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VolumeUnmountResponse) Reset()         { *m = VolumeUnmountResponse{} }
func (m *VolumeUnmountResponse) String() string { return proto.CompactTextString(m) }
func (*VolumeUnmountResponse) ProtoMessage()    {}
func (*VolumeUnmountResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_1e0f7a7c36ab7fa4, []int{34}
}
func (m *VolumeUnmountResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VolumeUnmountResponse.Unmarshal(m, b)
}
func (m *VolumeUnmountResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VolumeUnmountResponse.Marshal(b, m, deterministic)
}
func (dst *VolumeUnmountResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VolumeUnmountResponse.Merge(dst, src)
}
func (m *VolumeUnmountResponse) XXX_Size() int {
	return xxx_messageInfo_VolumeUnmountResponse.Size(m)
}
func (m *VolumeUnmountResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_VolumeUnmountResponse.DiscardUnknown(m)
}

var xxx_messageInfo_VolumeUnmountResponse proto.InternalMessageInfo

type VolumeAttachRequest struct {
	// Id of volume
	VolumeId string `protobuf:"bytes,1,opt,name=volume_id,json=volumeId" json:"volume_id,omitempty"`
	// Options for attaching volume, right now only passphrase options is supported
	Options              map[string]string `protobuf:"bytes,2,rep,name=options" json:"options,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *VolumeAttachRequest) Reset()         { *m = VolumeAttachRequest{} }
func (m *VolumeAttachRequest) String() string { return proto.CompactTextString(m) }
func (*VolumeAttachRequest) ProtoMessage()    {}
func (*VolumeAttachRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_1e0f7a7c36ab7fa4, []int{35}
}
func (m *VolumeAttachRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VolumeAttachRequest.Unmarshal(m, b)
}
func (m *VolumeAttachRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VolumeAttachRequest.Marshal(b, m, deterministic)
}
func (dst *VolumeAttachRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VolumeAttachRequest.Merge(dst, src)
}
func (m *VolumeAttachRequest) XXX_Size() int {
	return xxx_messageInfo_VolumeAttachRequest.Size(m)
}
func (m *VolumeAttachRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_VolumeAttachRequest.DiscardUnknown(m)
}

var xxx_messageInfo_VolumeAttachRequest proto.InternalMessageInfo

func (m *VolumeAttachRequest) GetVolumeId() string {
	if m != nil {
		return m.VolumeId
	}
	return ""
}

func (m *VolumeAttachRequest) GetOptions() map[string]string {
	if m != nil {
		return m.Options
	}
	return nil
}

type VolumeAttachResponse struct {
	// Device path where device is exported
	DevicePath           string   `protobuf:"bytes,1,opt,name=device_path,json=devicePath" json:"device_path,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VolumeAttachResponse) Reset()         { *m = VolumeAttachResponse{} }
func (m *VolumeAttachResponse) String() string { return proto.CompactTextString(m) }
func (*VolumeAttachResponse) ProtoMessage()    {}
func (*VolumeAttachResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_1e0f7a7c36ab7fa4, []int{36}
}
func (m *VolumeAttachResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VolumeAttachResponse.Unmarshal(m, b)
}
func (m *VolumeAttachResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VolumeAttachResponse.Marshal(b, m, deterministic)
}
func (dst *VolumeAttachResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VolumeAttachResponse.Merge(dst, src)
}
func (m *VolumeAttachResponse) XXX_Size() int {
	return xxx_messageInfo_VolumeAttachResponse.Size(m)
}
func (m *VolumeAttachResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_VolumeAttachResponse.DiscardUnknown(m)
}

var xxx_messageInfo_VolumeAttachResponse proto.InternalMessageInfo

func (m *VolumeAttachResponse) GetDevicePath() string {
	if m != nil {
		return m.DevicePath
	}
	return ""
}

type VolumeDetachRequest struct {
	// Id of the volume
	VolumeId             string   `protobuf:"bytes,1,opt,name=volume_id,json=volumeId" json:"volume_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VolumeDetachRequest) Reset()         { *m = VolumeDetachRequest{} }
func (m *VolumeDetachRequest) String() string { return proto.CompactTextString(m) }
func (*VolumeDetachRequest) ProtoMessage()    {}
func (*VolumeDetachRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_1e0f7a7c36ab7fa4, []int{37}
}
func (m *VolumeDetachRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VolumeDetachRequest.Unmarshal(m, b)
}
func (m *VolumeDetachRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VolumeDetachRequest.Marshal(b, m, deterministic)
}
func (dst *VolumeDetachRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VolumeDetachRequest.Merge(dst, src)
}
func (m *VolumeDetachRequest) XXX_Size() int {
	return xxx_messageInfo_VolumeDetachRequest.Size(m)
}
func (m *VolumeDetachRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_VolumeDetachRequest.DiscardUnknown(m)
}

var xxx_messageInfo_VolumeDetachRequest proto.InternalMessageInfo

func (m *VolumeDetachRequest) GetVolumeId() string {
	if m != nil {
		return m.VolumeId
	}
	return ""
}

type VolumeDetachResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VolumeDetachResponse) Reset()         { *m = VolumeDetachResponse{} }
func (m *VolumeDetachResponse) String() string { return proto.CompactTextString(m) }
func (*VolumeDetachResponse) ProtoMessage()    {}
func (*VolumeDetachResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_1e0f7a7c36ab7fa4, []int{38}
}
func (m *VolumeDetachResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VolumeDetachResponse.Unmarshal(m, b)
}
func (m *VolumeDetachResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VolumeDetachResponse.Marshal(b, m, deterministic)
}
func (dst *VolumeDetachResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VolumeDetachResponse.Merge(dst, src)
}
func (m *VolumeDetachResponse) XXX_Size() int {
	return xxx_messageInfo_VolumeDetachResponse.Size(m)
}
func (m *VolumeDetachResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_VolumeDetachResponse.DiscardUnknown(m)
}

var xxx_messageInfo_VolumeDetachResponse proto.InternalMessageInfo

type OpenStorageVolumeCreateRequest struct {
	// Unique name of the volume. This will be used for idempotency.
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	// Volume specification
	Spec                 *VolumeSpec `protobuf:"bytes,2,opt,name=spec" json:"spec,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *OpenStorageVolumeCreateRequest) Reset()         { *m = OpenStorageVolumeCreateRequest{} }
func (m *OpenStorageVolumeCreateRequest) String() string { return proto.CompactTextString(m) }
func (*OpenStorageVolumeCreateRequest) ProtoMessage()    {}
func (*OpenStorageVolumeCreateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_1e0f7a7c36ab7fa4, []int{39}
}
func (m *OpenStorageVolumeCreateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OpenStorageVolumeCreateRequest.Unmarshal(m, b)
}
func (m *OpenStorageVolumeCreateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OpenStorageVolumeCreateRequest.Marshal(b, m, deterministic)
}
func (dst *OpenStorageVolumeCreateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OpenStorageVolumeCreateRequest.Merge(dst, src)
}
func (m *OpenStorageVolumeCreateRequest) XXX_Size() int {
	return xxx_messageInfo_OpenStorageVolumeCreateRequest.Size(m)
}
func (m *OpenStorageVolumeCreateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_OpenStorageVolumeCreateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_OpenStorageVolumeCreateRequest proto.InternalMessageInfo

func (m *OpenStorageVolumeCreateRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *OpenStorageVolumeCreateRequest) GetSpec() *VolumeSpec {
	if m != nil {
		return m.Spec
	}
	return nil
}

type OpenStorageVolumeCreateResponse struct {
	// Id of new volume
	VolumeId             string   `protobuf:"bytes,1,opt,name=volume_id,json=volumeId" json:"volume_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OpenStorageVolumeCreateResponse) Reset()         { *m = OpenStorageVolumeCreateResponse{} }
func (m *OpenStorageVolumeCreateResponse) String() string { return proto.CompactTextString(m) }
func (*OpenStorageVolumeCreateResponse) ProtoMessage()    {}
func (*OpenStorageVolumeCreateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_1e0f7a7c36ab7fa4, []int{40}
}
func (m *OpenStorageVolumeCreateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OpenStorageVolumeCreateResponse.Unmarshal(m, b)
}
func (m *OpenStorageVolumeCreateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OpenStorageVolumeCreateResponse.Marshal(b, m, deterministic)
}
func (dst *OpenStorageVolumeCreateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OpenStorageVolumeCreateResponse.Merge(dst, src)
}
func (m *OpenStorageVolumeCreateResponse) XXX_Size() int {
	return xxx_messageInfo_OpenStorageVolumeCreateResponse.Size(m)
}
func (m *OpenStorageVolumeCreateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_OpenStorageVolumeCreateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_OpenStorageVolumeCreateResponse proto.InternalMessageInfo

func (m *OpenStorageVolumeCreateResponse) GetVolumeId() string {
	if m != nil {
		return m.VolumeId
	}
	return ""
}

type VolumeCreateFromVolumeIDRequest struct {
	// Unique name of the volume. This will be used for idempotency.
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	// Parent volume id, if specified will create a new volume as a clone of the parent.
	ParentId string `protobuf:"bytes,2,opt,name=parent_id,json=parentId" json:"parent_id,omitempty"`
	// Volume specification
	Spec                 *VolumeSpec `protobuf:"bytes,3,opt,name=spec" json:"spec,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *VolumeCreateFromVolumeIDRequest) Reset()         { *m = VolumeCreateFromVolumeIDRequest{} }
func (m *VolumeCreateFromVolumeIDRequest) String() string { return proto.CompactTextString(m) }
func (*VolumeCreateFromVolumeIDRequest) ProtoMessage()    {}
func (*VolumeCreateFromVolumeIDRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_1e0f7a7c36ab7fa4, []int{41}
}
func (m *VolumeCreateFromVolumeIDRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VolumeCreateFromVolumeIDRequest.Unmarshal(m, b)
}
func (m *VolumeCreateFromVolumeIDRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VolumeCreateFromVolumeIDRequest.Marshal(b, m, deterministic)
}
func (dst *VolumeCreateFromVolumeIDRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VolumeCreateFromVolumeIDRequest.Merge(dst, src)
}
func (m *VolumeCreateFromVolumeIDRequest) XXX_Size() int {
	return xxx_messageInfo_VolumeCreateFromVolumeIDRequest.Size(m)
}
func (m *VolumeCreateFromVolumeIDRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_VolumeCreateFromVolumeIDRequest.DiscardUnknown(m)
}

var xxx_messageInfo_VolumeCreateFromVolumeIDRequest proto.InternalMessageInfo

func (m *VolumeCreateFromVolumeIDRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *VolumeCreateFromVolumeIDRequest) GetParentId() string {
	if m != nil {
		return m.ParentId
	}
	return ""
}

func (m *VolumeCreateFromVolumeIDRequest) GetSpec() *VolumeSpec {
	if m != nil {
		return m.Spec
	}
	return nil
}

type VolumeCreateFromVolumeIDResponse struct {
	// Id of new volume
	VolumeId             string   `protobuf:"bytes,1,opt,name=volume_id,json=volumeId" json:"volume_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VolumeCreateFromVolumeIDResponse) Reset()         { *m = VolumeCreateFromVolumeIDResponse{} }
func (m *VolumeCreateFromVolumeIDResponse) String() string { return proto.CompactTextString(m) }
func (*VolumeCreateFromVolumeIDResponse) ProtoMessage()    {}
func (*VolumeCreateFromVolumeIDResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_1e0f7a7c36ab7fa4, []int{42}
}
func (m *VolumeCreateFromVolumeIDResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VolumeCreateFromVolumeIDResponse.Unmarshal(m, b)
}
func (m *VolumeCreateFromVolumeIDResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VolumeCreateFromVolumeIDResponse.Marshal(b, m, deterministic)
}
func (dst *VolumeCreateFromVolumeIDResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VolumeCreateFromVolumeIDResponse.Merge(dst, src)
}
func (m *VolumeCreateFromVolumeIDResponse) XXX_Size() int {
	return xxx_messageInfo_VolumeCreateFromVolumeIDResponse.Size(m)
}
func (m *VolumeCreateFromVolumeIDResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_VolumeCreateFromVolumeIDResponse.DiscardUnknown(m)
}

var xxx_messageInfo_VolumeCreateFromVolumeIDResponse proto.InternalMessageInfo

func (m *VolumeCreateFromVolumeIDResponse) GetVolumeId() string {
	if m != nil {
		return m.VolumeId
	}
	return ""
}

type VolumeDeleteRequest struct {
	// Id of volume to delete
	VolumeId             string   `protobuf:"bytes,1,opt,name=volume_id,json=volumeId" json:"volume_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VolumeDeleteRequest) Reset()         { *m = VolumeDeleteRequest{} }
func (m *VolumeDeleteRequest) String() string { return proto.CompactTextString(m) }
func (*VolumeDeleteRequest) ProtoMessage()    {}
func (*VolumeDeleteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_1e0f7a7c36ab7fa4, []int{43}
}
func (m *VolumeDeleteRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VolumeDeleteRequest.Unmarshal(m, b)
}
func (m *VolumeDeleteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VolumeDeleteRequest.Marshal(b, m, deterministic)
}
func (dst *VolumeDeleteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VolumeDeleteRequest.Merge(dst, src)
}
func (m *VolumeDeleteRequest) XXX_Size() int {
	return xxx_messageInfo_VolumeDeleteRequest.Size(m)
}
func (m *VolumeDeleteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_VolumeDeleteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_VolumeDeleteRequest proto.InternalMessageInfo

func (m *VolumeDeleteRequest) GetVolumeId() string {
	if m != nil {
		return m.VolumeId
	}
	return ""
}

type VolumeDeleteResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VolumeDeleteResponse) Reset()         { *m = VolumeDeleteResponse{} }
func (m *VolumeDeleteResponse) String() string { return proto.CompactTextString(m) }
func (*VolumeDeleteResponse) ProtoMessage()    {}
func (*VolumeDeleteResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_1e0f7a7c36ab7fa4, []int{44}
}
func (m *VolumeDeleteResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VolumeDeleteResponse.Unmarshal(m, b)
}
func (m *VolumeDeleteResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VolumeDeleteResponse.Marshal(b, m, deterministic)
}
func (dst *VolumeDeleteResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VolumeDeleteResponse.Merge(dst, src)
}
func (m *VolumeDeleteResponse) XXX_Size() int {
	return xxx_messageInfo_VolumeDeleteResponse.Size(m)
}
func (m *VolumeDeleteResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_VolumeDeleteResponse.DiscardUnknown(m)
}

var xxx_messageInfo_VolumeDeleteResponse proto.InternalMessageInfo

type VolumeInspectRequest struct {
	// Id of volume to inspect
	VolumeId             string   `protobuf:"bytes,1,opt,name=volume_id,json=volumeId" json:"volume_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VolumeInspectRequest) Reset()         { *m = VolumeInspectRequest{} }
func (m *VolumeInspectRequest) String() string { return proto.CompactTextString(m) }
func (*VolumeInspectRequest) ProtoMessage()    {}
func (*VolumeInspectRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_1e0f7a7c36ab7fa4, []int{45}
}
func (m *VolumeInspectRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VolumeInspectRequest.Unmarshal(m, b)
}
func (m *VolumeInspectRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VolumeInspectRequest.Marshal(b, m, deterministic)
}
func (dst *VolumeInspectRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VolumeInspectRequest.Merge(dst, src)
}
func (m *VolumeInspectRequest) XXX_Size() int {
	return xxx_messageInfo_VolumeInspectRequest.Size(m)
}
func (m *VolumeInspectRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_VolumeInspectRequest.DiscardUnknown(m)
}

var xxx_messageInfo_VolumeInspectRequest proto.InternalMessageInfo

func (m *VolumeInspectRequest) GetVolumeId() string {
	if m != nil {
		return m.VolumeId
	}
	return ""
}

type VolumeInspectResponse struct {
	// Information about the volume
	Volume               *Volume  `protobuf:"bytes,1,opt,name=volume" json:"volume,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VolumeInspectResponse) Reset()         { *m = VolumeInspectResponse{} }
func (m *VolumeInspectResponse) String() string { return proto.CompactTextString(m) }
func (*VolumeInspectResponse) ProtoMessage()    {}
func (*VolumeInspectResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_1e0f7a7c36ab7fa4, []int{46}
}
func (m *VolumeInspectResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VolumeInspectResponse.Unmarshal(m, b)
}
func (m *VolumeInspectResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VolumeInspectResponse.Marshal(b, m, deterministic)
}
func (dst *VolumeInspectResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VolumeInspectResponse.Merge(dst, src)
}
func (m *VolumeInspectResponse) XXX_Size() int {
	return xxx_messageInfo_VolumeInspectResponse.Size(m)
}
func (m *VolumeInspectResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_VolumeInspectResponse.DiscardUnknown(m)
}

var xxx_messageInfo_VolumeInspectResponse proto.InternalMessageInfo

func (m *VolumeInspectResponse) GetVolume() *Volume {
	if m != nil {
		return m.Volume
	}
	return nil
}

type VolumeEnumerateRequest struct {
	// Volumes to match to this locator.
	// If not provided, all volumes will be returned.
	Locator              *VolumeLocator `protobuf:"bytes,1,opt,name=locator" json:"locator,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *VolumeEnumerateRequest) Reset()         { *m = VolumeEnumerateRequest{} }
func (m *VolumeEnumerateRequest) String() string { return proto.CompactTextString(m) }
func (*VolumeEnumerateRequest) ProtoMessage()    {}
func (*VolumeEnumerateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_1e0f7a7c36ab7fa4, []int{47}
}
func (m *VolumeEnumerateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VolumeEnumerateRequest.Unmarshal(m, b)
}
func (m *VolumeEnumerateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VolumeEnumerateRequest.Marshal(b, m, deterministic)
}
func (dst *VolumeEnumerateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VolumeEnumerateRequest.Merge(dst, src)
}
func (m *VolumeEnumerateRequest) XXX_Size() int {
	return xxx_messageInfo_VolumeEnumerateRequest.Size(m)
}
func (m *VolumeEnumerateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_VolumeEnumerateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_VolumeEnumerateRequest proto.InternalMessageInfo

func (m *VolumeEnumerateRequest) GetLocator() *VolumeLocator {
	if m != nil {
		return m.Locator
	}
	return nil
}

type VolumeEnumerateResponse struct {
	// List of volumes matching label
	Volumes              []*Volume `protobuf:"bytes,1,rep,name=volumes" json:"volumes,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *VolumeEnumerateResponse) Reset()         { *m = VolumeEnumerateResponse{} }
func (m *VolumeEnumerateResponse) String() string { return proto.CompactTextString(m) }
func (*VolumeEnumerateResponse) ProtoMessage()    {}
func (*VolumeEnumerateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_1e0f7a7c36ab7fa4, []int{48}
}
func (m *VolumeEnumerateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VolumeEnumerateResponse.Unmarshal(m, b)
}
func (m *VolumeEnumerateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VolumeEnumerateResponse.Marshal(b, m, deterministic)
}
func (dst *VolumeEnumerateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VolumeEnumerateResponse.Merge(dst, src)
}
func (m *VolumeEnumerateResponse) XXX_Size() int {
	return xxx_messageInfo_VolumeEnumerateResponse.Size(m)
}
func (m *VolumeEnumerateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_VolumeEnumerateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_VolumeEnumerateResponse proto.InternalMessageInfo

func (m *VolumeEnumerateResponse) GetVolumes() []*Volume {
	if m != nil {
		return m.Volumes
	}
	return nil
}

type VolumeSnapshotCreateRequest struct {
	// Id of volume to take the snapshot from
	VolumeId string `protobuf:"bytes,1,opt,name=volume_id,json=volumeId" json:"volume_id,omitempty"`
	// Labels to apply to snapshot
	Labels               map[string]string `protobuf:"bytes,2,rep,name=labels" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *VolumeSnapshotCreateRequest) Reset()         { *m = VolumeSnapshotCreateRequest{} }
func (m *VolumeSnapshotCreateRequest) String() string { return proto.CompactTextString(m) }
func (*VolumeSnapshotCreateRequest) ProtoMessage()    {}
func (*VolumeSnapshotCreateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_1e0f7a7c36ab7fa4, []int{49}
}
func (m *VolumeSnapshotCreateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VolumeSnapshotCreateRequest.Unmarshal(m, b)
}
func (m *VolumeSnapshotCreateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VolumeSnapshotCreateRequest.Marshal(b, m, deterministic)
}
func (dst *VolumeSnapshotCreateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VolumeSnapshotCreateRequest.Merge(dst, src)
}
func (m *VolumeSnapshotCreateRequest) XXX_Size() int {
	return xxx_messageInfo_VolumeSnapshotCreateRequest.Size(m)
}
func (m *VolumeSnapshotCreateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_VolumeSnapshotCreateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_VolumeSnapshotCreateRequest proto.InternalMessageInfo

func (m *VolumeSnapshotCreateRequest) GetVolumeId() string {
	if m != nil {
		return m.VolumeId
	}
	return ""
}

func (m *VolumeSnapshotCreateRequest) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

type VolumeSnapshotCreateResponse struct {
	// Id of immutable snapshot
	SnapshotId           string   `protobuf:"bytes,1,opt,name=snapshot_id,json=snapshotId" json:"snapshot_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VolumeSnapshotCreateResponse) Reset()         { *m = VolumeSnapshotCreateResponse{} }
func (m *VolumeSnapshotCreateResponse) String() string { return proto.CompactTextString(m) }
func (*VolumeSnapshotCreateResponse) ProtoMessage()    {}
func (*VolumeSnapshotCreateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_1e0f7a7c36ab7fa4, []int{50}
}
func (m *VolumeSnapshotCreateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VolumeSnapshotCreateResponse.Unmarshal(m, b)
}
func (m *VolumeSnapshotCreateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VolumeSnapshotCreateResponse.Marshal(b, m, deterministic)
}
func (dst *VolumeSnapshotCreateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VolumeSnapshotCreateResponse.Merge(dst, src)
}
func (m *VolumeSnapshotCreateResponse) XXX_Size() int {
	return xxx_messageInfo_VolumeSnapshotCreateResponse.Size(m)
}
func (m *VolumeSnapshotCreateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_VolumeSnapshotCreateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_VolumeSnapshotCreateResponse proto.InternalMessageInfo

func (m *VolumeSnapshotCreateResponse) GetSnapshotId() string {
	if m != nil {
		return m.SnapshotId
	}
	return ""
}

type VolumeSnapshotRestoreRequest struct {
	// Id of volume
	VolumeId string `protobuf:"bytes,1,opt,name=volume_id,json=volumeId" json:"volume_id,omitempty"`
	// Snapshot id to apply to `volume_id`
	SnapshotId           string   `protobuf:"bytes,2,opt,name=snapshot_id,json=snapshotId" json:"snapshot_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VolumeSnapshotRestoreRequest) Reset()         { *m = VolumeSnapshotRestoreRequest{} }
func (m *VolumeSnapshotRestoreRequest) String() string { return proto.CompactTextString(m) }
func (*VolumeSnapshotRestoreRequest) ProtoMessage()    {}
func (*VolumeSnapshotRestoreRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_1e0f7a7c36ab7fa4, []int{51}
}
func (m *VolumeSnapshotRestoreRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VolumeSnapshotRestoreRequest.Unmarshal(m, b)
}
func (m *VolumeSnapshotRestoreRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VolumeSnapshotRestoreRequest.Marshal(b, m, deterministic)
}
func (dst *VolumeSnapshotRestoreRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VolumeSnapshotRestoreRequest.Merge(dst, src)
}
func (m *VolumeSnapshotRestoreRequest) XXX_Size() int {
	return xxx_messageInfo_VolumeSnapshotRestoreRequest.Size(m)
}
func (m *VolumeSnapshotRestoreRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_VolumeSnapshotRestoreRequest.DiscardUnknown(m)
}

var xxx_messageInfo_VolumeSnapshotRestoreRequest proto.InternalMessageInfo

func (m *VolumeSnapshotRestoreRequest) GetVolumeId() string {
	if m != nil {
		return m.VolumeId
	}
	return ""
}

func (m *VolumeSnapshotRestoreRequest) GetSnapshotId() string {
	if m != nil {
		return m.SnapshotId
	}
	return ""
}

type VolumeSnapshotRestoreResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VolumeSnapshotRestoreResponse) Reset()         { *m = VolumeSnapshotRestoreResponse{} }
func (m *VolumeSnapshotRestoreResponse) String() string { return proto.CompactTextString(m) }
func (*VolumeSnapshotRestoreResponse) ProtoMessage()    {}
func (*VolumeSnapshotRestoreResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_1e0f7a7c36ab7fa4, []int{52}
}
func (m *VolumeSnapshotRestoreResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VolumeSnapshotRestoreResponse.Unmarshal(m, b)
}
func (m *VolumeSnapshotRestoreResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VolumeSnapshotRestoreResponse.Marshal(b, m, deterministic)
}
func (dst *VolumeSnapshotRestoreResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VolumeSnapshotRestoreResponse.Merge(dst, src)
}
func (m *VolumeSnapshotRestoreResponse) XXX_Size() int {
	return xxx_messageInfo_VolumeSnapshotRestoreResponse.Size(m)
}
func (m *VolumeSnapshotRestoreResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_VolumeSnapshotRestoreResponse.DiscardUnknown(m)
}

var xxx_messageInfo_VolumeSnapshotRestoreResponse proto.InternalMessageInfo

type VolumeSnapshotEnumerateRequest struct {
	// Id of volume
	VolumeId string `protobuf:"bytes,1,opt,name=volume_id,json=volumeId" json:"volume_id,omitempty"`
	// Labels from snapshot
	Labels               map[string]string `protobuf:"bytes,2,rep,name=labels" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *VolumeSnapshotEnumerateRequest) Reset()         { *m = VolumeSnapshotEnumerateRequest{} }
func (m *VolumeSnapshotEnumerateRequest) String() string { return proto.CompactTextString(m) }
func (*VolumeSnapshotEnumerateRequest) ProtoMessage()    {}
func (*VolumeSnapshotEnumerateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_1e0f7a7c36ab7fa4, []int{53}
}
func (m *VolumeSnapshotEnumerateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VolumeSnapshotEnumerateRequest.Unmarshal(m, b)
}
func (m *VolumeSnapshotEnumerateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VolumeSnapshotEnumerateRequest.Marshal(b, m, deterministic)
}
func (dst *VolumeSnapshotEnumerateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VolumeSnapshotEnumerateRequest.Merge(dst, src)
}
func (m *VolumeSnapshotEnumerateRequest) XXX_Size() int {
	return xxx_messageInfo_VolumeSnapshotEnumerateRequest.Size(m)
}
func (m *VolumeSnapshotEnumerateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_VolumeSnapshotEnumerateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_VolumeSnapshotEnumerateRequest proto.InternalMessageInfo

func (m *VolumeSnapshotEnumerateRequest) GetVolumeId() string {
	if m != nil {
		return m.VolumeId
	}
	return ""
}

func (m *VolumeSnapshotEnumerateRequest) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

type VolumeSnapshotEnumerateResponse struct {
	// List of immutable snapshots
	Snapshots            []*Volume `protobuf:"bytes,1,rep,name=snapshots" json:"snapshots,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *VolumeSnapshotEnumerateResponse) Reset()         { *m = VolumeSnapshotEnumerateResponse{} }
func (m *VolumeSnapshotEnumerateResponse) String() string { return proto.CompactTextString(m) }
func (*VolumeSnapshotEnumerateResponse) ProtoMessage()    {}
func (*VolumeSnapshotEnumerateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_1e0f7a7c36ab7fa4, []int{54}
}
func (m *VolumeSnapshotEnumerateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VolumeSnapshotEnumerateResponse.Unmarshal(m, b)
}
func (m *VolumeSnapshotEnumerateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VolumeSnapshotEnumerateResponse.Marshal(b, m, deterministic)
}
func (dst *VolumeSnapshotEnumerateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VolumeSnapshotEnumerateResponse.Merge(dst, src)
}
func (m *VolumeSnapshotEnumerateResponse) XXX_Size() int {
	return xxx_messageInfo_VolumeSnapshotEnumerateResponse.Size(m)
}
func (m *VolumeSnapshotEnumerateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_VolumeSnapshotEnumerateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_VolumeSnapshotEnumerateResponse proto.InternalMessageInfo

func (m *VolumeSnapshotEnumerateResponse) GetSnapshots() []*Volume {
	if m != nil {
		return m.Snapshots
	}
	return nil
}

type ClusterEnumerateRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ClusterEnumerateRequest) Reset()         { *m = ClusterEnumerateRequest{} }
func (m *ClusterEnumerateRequest) String() string { return proto.CompactTextString(m) }
func (*ClusterEnumerateRequest) ProtoMessage()    {}
func (*ClusterEnumerateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_1e0f7a7c36ab7fa4, []int{55}
}
func (m *ClusterEnumerateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClusterEnumerateRequest.Unmarshal(m, b)
}
func (m *ClusterEnumerateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClusterEnumerateRequest.Marshal(b, m, deterministic)
}
func (dst *ClusterEnumerateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClusterEnumerateRequest.Merge(dst, src)
}
func (m *ClusterEnumerateRequest) XXX_Size() int {
	return xxx_messageInfo_ClusterEnumerateRequest.Size(m)
}
func (m *ClusterEnumerateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ClusterEnumerateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ClusterEnumerateRequest proto.InternalMessageInfo

type ClusterEnumerateResponse struct {
	// Cluster information
	Cluster              *StorageCluster `protobuf:"bytes,1,opt,name=cluster" json:"cluster,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *ClusterEnumerateResponse) Reset()         { *m = ClusterEnumerateResponse{} }
func (m *ClusterEnumerateResponse) String() string { return proto.CompactTextString(m) }
func (*ClusterEnumerateResponse) ProtoMessage()    {}
func (*ClusterEnumerateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_1e0f7a7c36ab7fa4, []int{56}
}
func (m *ClusterEnumerateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClusterEnumerateResponse.Unmarshal(m, b)
}
func (m *ClusterEnumerateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClusterEnumerateResponse.Marshal(b, m, deterministic)
}
func (dst *ClusterEnumerateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClusterEnumerateResponse.Merge(dst, src)
}
func (m *ClusterEnumerateResponse) XXX_Size() int {
	return xxx_messageInfo_ClusterEnumerateResponse.Size(m)
}
func (m *ClusterEnumerateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ClusterEnumerateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ClusterEnumerateResponse proto.InternalMessageInfo

func (m *ClusterEnumerateResponse) GetCluster() *StorageCluster {
	if m != nil {
		return m.Cluster
	}
	return nil
}

type ClusterInspectRequest struct {
	// Id of node to inspect (required)
	NodeId               string   `protobuf:"bytes,1,opt,name=node_id,json=nodeId" json:"node_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ClusterInspectRequest) Reset()         { *m = ClusterInspectRequest{} }
func (m *ClusterInspectRequest) String() string { return proto.CompactTextString(m) }
func (*ClusterInspectRequest) ProtoMessage()    {}
func (*ClusterInspectRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_1e0f7a7c36ab7fa4, []int{57}
}
func (m *ClusterInspectRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClusterInspectRequest.Unmarshal(m, b)
}
func (m *ClusterInspectRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClusterInspectRequest.Marshal(b, m, deterministic)
}
func (dst *ClusterInspectRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClusterInspectRequest.Merge(dst, src)
}
func (m *ClusterInspectRequest) XXX_Size() int {
	return xxx_messageInfo_ClusterInspectRequest.Size(m)
}
func (m *ClusterInspectRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ClusterInspectRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ClusterInspectRequest proto.InternalMessageInfo

func (m *ClusterInspectRequest) GetNodeId() string {
	if m != nil {
		return m.NodeId
	}
	return ""
}

type ClusterInspectResponse struct {
	// Node information
	Node                 *StorageNode `protobuf:"bytes,1,opt,name=node" json:"node,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *ClusterInspectResponse) Reset()         { *m = ClusterInspectResponse{} }
func (m *ClusterInspectResponse) String() string { return proto.CompactTextString(m) }
func (*ClusterInspectResponse) ProtoMessage()    {}
func (*ClusterInspectResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_1e0f7a7c36ab7fa4, []int{58}
}
func (m *ClusterInspectResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClusterInspectResponse.Unmarshal(m, b)
}
func (m *ClusterInspectResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClusterInspectResponse.Marshal(b, m, deterministic)
}
func (dst *ClusterInspectResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClusterInspectResponse.Merge(dst, src)
}
func (m *ClusterInspectResponse) XXX_Size() int {
	return xxx_messageInfo_ClusterInspectResponse.Size(m)
}
func (m *ClusterInspectResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ClusterInspectResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ClusterInspectResponse proto.InternalMessageInfo

func (m *ClusterInspectResponse) GetNode() *StorageNode {
	if m != nil {
		return m.Node
	}
	return nil
}

type ClusterAlertEnumerateRequest struct {
	// Start time of alerts (required)
	TimeStart *timestamp.Timestamp `protobuf:"bytes,1,opt,name=time_start,json=timeStart" json:"time_start,omitempty"`
	// End time of alerts (required)
	TimeEnd *timestamp.Timestamp `protobuf:"bytes,2,opt,name=time_end,json=timeEnd" json:"time_end,omitempty"`
	// Type of resource (required)
	Resource             ResourceType `protobuf:"varint,3,opt,name=resource,enum=openstorage.api.ResourceType" json:"resource,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *ClusterAlertEnumerateRequest) Reset()         { *m = ClusterAlertEnumerateRequest{} }
func (m *ClusterAlertEnumerateRequest) String() string { return proto.CompactTextString(m) }
func (*ClusterAlertEnumerateRequest) ProtoMessage()    {}
func (*ClusterAlertEnumerateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_1e0f7a7c36ab7fa4, []int{59}
}
func (m *ClusterAlertEnumerateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClusterAlertEnumerateRequest.Unmarshal(m, b)
}
func (m *ClusterAlertEnumerateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClusterAlertEnumerateRequest.Marshal(b, m, deterministic)
}
func (dst *ClusterAlertEnumerateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClusterAlertEnumerateRequest.Merge(dst, src)
}
func (m *ClusterAlertEnumerateRequest) XXX_Size() int {
	return xxx_messageInfo_ClusterAlertEnumerateRequest.Size(m)
}
func (m *ClusterAlertEnumerateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ClusterAlertEnumerateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ClusterAlertEnumerateRequest proto.InternalMessageInfo

func (m *ClusterAlertEnumerateRequest) GetTimeStart() *timestamp.Timestamp {
	if m != nil {
		return m.TimeStart
	}
	return nil
}

func (m *ClusterAlertEnumerateRequest) GetTimeEnd() *timestamp.Timestamp {
	if m != nil {
		return m.TimeEnd
	}
	return nil
}

func (m *ClusterAlertEnumerateRequest) GetResource() ResourceType {
	if m != nil {
		return m.Resource
	}
	return ResourceType_RESOURCE_TYPE_NONE
}

type ClusterAlertEnumerateResponse struct {
	// Information on the alerts requested
	Alerts               *Alerts  `protobuf:"bytes,1,opt,name=alerts" json:"alerts,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ClusterAlertEnumerateResponse) Reset()         { *m = ClusterAlertEnumerateResponse{} }
func (m *ClusterAlertEnumerateResponse) String() string { return proto.CompactTextString(m) }
func (*ClusterAlertEnumerateResponse) ProtoMessage()    {}
func (*ClusterAlertEnumerateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_1e0f7a7c36ab7fa4, []int{60}
}
func (m *ClusterAlertEnumerateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClusterAlertEnumerateResponse.Unmarshal(m, b)
}
func (m *ClusterAlertEnumerateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClusterAlertEnumerateResponse.Marshal(b, m, deterministic)
}
func (dst *ClusterAlertEnumerateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClusterAlertEnumerateResponse.Merge(dst, src)
}
func (m *ClusterAlertEnumerateResponse) XXX_Size() int {
	return xxx_messageInfo_ClusterAlertEnumerateResponse.Size(m)
}
func (m *ClusterAlertEnumerateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ClusterAlertEnumerateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ClusterAlertEnumerateResponse proto.InternalMessageInfo

func (m *ClusterAlertEnumerateResponse) GetAlerts() *Alerts {
	if m != nil {
		return m.Alerts
	}
	return nil
}

type ClusterAlertClearRequest struct {
	// Type of resource (required)
	Resource ResourceType `protobuf:"varint,1,opt,name=resource,enum=openstorage.api.ResourceType" json:"resource,omitempty"`
	// Id of alert as returned by ClusterEnumerateAlertResponse (required)
	AlertId              int64    `protobuf:"varint,2,opt,name=alert_id,json=alertId" json:"alert_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ClusterAlertClearRequest) Reset()         { *m = ClusterAlertClearRequest{} }
func (m *ClusterAlertClearRequest) String() string { return proto.CompactTextString(m) }
func (*ClusterAlertClearRequest) ProtoMessage()    {}
func (*ClusterAlertClearRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_1e0f7a7c36ab7fa4, []int{61}
}
func (m *ClusterAlertClearRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClusterAlertClearRequest.Unmarshal(m, b)
}
func (m *ClusterAlertClearRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClusterAlertClearRequest.Marshal(b, m, deterministic)
}
func (dst *ClusterAlertClearRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClusterAlertClearRequest.Merge(dst, src)
}
func (m *ClusterAlertClearRequest) XXX_Size() int {
	return xxx_messageInfo_ClusterAlertClearRequest.Size(m)
}
func (m *ClusterAlertClearRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ClusterAlertClearRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ClusterAlertClearRequest proto.InternalMessageInfo

func (m *ClusterAlertClearRequest) GetResource() ResourceType {
	if m != nil {
		return m.Resource
	}
	return ResourceType_RESOURCE_TYPE_NONE
}

func (m *ClusterAlertClearRequest) GetAlertId() int64 {
	if m != nil {
		return m.AlertId
	}
	return 0
}

type ClusterAlertClearResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ClusterAlertClearResponse) Reset()         { *m = ClusterAlertClearResponse{} }
func (m *ClusterAlertClearResponse) String() string { return proto.CompactTextString(m) }
func (*ClusterAlertClearResponse) ProtoMessage()    {}
func (*ClusterAlertClearResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_1e0f7a7c36ab7fa4, []int{62}
}
func (m *ClusterAlertClearResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClusterAlertClearResponse.Unmarshal(m, b)
}
func (m *ClusterAlertClearResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClusterAlertClearResponse.Marshal(b, m, deterministic)
}
func (dst *ClusterAlertClearResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClusterAlertClearResponse.Merge(dst, src)
}
func (m *ClusterAlertClearResponse) XXX_Size() int {
	return xxx_messageInfo_ClusterAlertClearResponse.Size(m)
}
func (m *ClusterAlertClearResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ClusterAlertClearResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ClusterAlertClearResponse proto.InternalMessageInfo

type ClusterAlertEraseRequest struct {
	// Type of resource (required)
	Resource ResourceType `protobuf:"varint,1,opt,name=resource,enum=openstorage.api.ResourceType" json:"resource,omitempty"`
	// Id of alert as returned by ClusterEnumerateAlertResponse (required)
	AlertId              int64    `protobuf:"varint,2,opt,name=alert_id,json=alertId" json:"alert_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ClusterAlertEraseRequest) Reset()         { *m = ClusterAlertEraseRequest{} }
func (m *ClusterAlertEraseRequest) String() string { return proto.CompactTextString(m) }
func (*ClusterAlertEraseRequest) ProtoMessage()    {}
func (*ClusterAlertEraseRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_1e0f7a7c36ab7fa4, []int{63}
}
func (m *ClusterAlertEraseRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClusterAlertEraseRequest.Unmarshal(m, b)
}
func (m *ClusterAlertEraseRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClusterAlertEraseRequest.Marshal(b, m, deterministic)
}
func (dst *ClusterAlertEraseRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClusterAlertEraseRequest.Merge(dst, src)
}
func (m *ClusterAlertEraseRequest) XXX_Size() int {
	return xxx_messageInfo_ClusterAlertEraseRequest.Size(m)
}
func (m *ClusterAlertEraseRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ClusterAlertEraseRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ClusterAlertEraseRequest proto.InternalMessageInfo

func (m *ClusterAlertEraseRequest) GetResource() ResourceType {
	if m != nil {
		return m.Resource
	}
	return ResourceType_RESOURCE_TYPE_NONE
}

func (m *ClusterAlertEraseRequest) GetAlertId() int64 {
	if m != nil {
		return m.AlertId
	}
	return 0
}

type ClusterAlertEraseResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ClusterAlertEraseResponse) Reset()         { *m = ClusterAlertEraseResponse{} }
func (m *ClusterAlertEraseResponse) String() string { return proto.CompactTextString(m) }
func (*ClusterAlertEraseResponse) ProtoMessage()    {}
func (*ClusterAlertEraseResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_1e0f7a7c36ab7fa4, []int{64}
}
func (m *ClusterAlertEraseResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClusterAlertEraseResponse.Unmarshal(m, b)
}
func (m *ClusterAlertEraseResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClusterAlertEraseResponse.Marshal(b, m, deterministic)
}
func (dst *ClusterAlertEraseResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClusterAlertEraseResponse.Merge(dst, src)
}
func (m *ClusterAlertEraseResponse) XXX_Size() int {
	return xxx_messageInfo_ClusterAlertEraseResponse.Size(m)
}
func (m *ClusterAlertEraseResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ClusterAlertEraseResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ClusterAlertEraseResponse proto.InternalMessageInfo

type CloudBackupCreateRequest struct {
	// VolumeID of the volume for which cloudbackup is requested
	VolumeId string `protobuf:"bytes,1,opt,name=volume_id,json=volumeId" json:"volume_id,omitempty"`
	// CredentialUUID is cloud credential to be used for backup
	CredentialUuid string `protobuf:"bytes,2,opt,name=credential_uuid,json=credentialUuid" json:"credential_uuid,omitempty"`
	// Full indicates if full backup is desired even though incremental is possible
	Full                 bool     `protobuf:"varint,3,opt,name=full" json:"full,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CloudBackupCreateRequest) Reset()         { *m = CloudBackupCreateRequest{} }
func (m *CloudBackupCreateRequest) String() string { return proto.CompactTextString(m) }
func (*CloudBackupCreateRequest) ProtoMessage()    {}
func (*CloudBackupCreateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_1e0f7a7c36ab7fa4, []int{65}
}
func (m *CloudBackupCreateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CloudBackupCreateRequest.Unmarshal(m, b)
}
func (m *CloudBackupCreateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CloudBackupCreateRequest.Marshal(b, m, deterministic)
}
func (dst *CloudBackupCreateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CloudBackupCreateRequest.Merge(dst, src)
}
func (m *CloudBackupCreateRequest) XXX_Size() int {
	return xxx_messageInfo_CloudBackupCreateRequest.Size(m)
}
func (m *CloudBackupCreateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CloudBackupCreateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CloudBackupCreateRequest proto.InternalMessageInfo

func (m *CloudBackupCreateRequest) GetVolumeId() string {
	if m != nil {
		return m.VolumeId
	}
	return ""
}

func (m *CloudBackupCreateRequest) GetCredentialUuid() string {
	if m != nil {
		return m.CredentialUuid
	}
	return ""
}

func (m *CloudBackupCreateRequest) GetFull() bool {
	if m != nil {
		return m.Full
	}
	return false
}

type CloudBackupCreateResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CloudBackupCreateResponse) Reset()         { *m = CloudBackupCreateResponse{} }
func (m *CloudBackupCreateResponse) String() string { return proto.CompactTextString(m) }
func (*CloudBackupCreateResponse) ProtoMessage()    {}
func (*CloudBackupCreateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_1e0f7a7c36ab7fa4, []int{66}
}
func (m *CloudBackupCreateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CloudBackupCreateResponse.Unmarshal(m, b)
}
func (m *CloudBackupCreateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CloudBackupCreateResponse.Marshal(b, m, deterministic)
}
func (dst *CloudBackupCreateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CloudBackupCreateResponse.Merge(dst, src)
}
func (m *CloudBackupCreateResponse) XXX_Size() int {
	return xxx_messageInfo_CloudBackupCreateResponse.Size(m)
}
func (m *CloudBackupCreateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CloudBackupCreateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CloudBackupCreateResponse proto.InternalMessageInfo

type CloudBackupRestoreRequest struct {
	// Backup ID being restored
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	// Optional volume Name of the new volume to be created
	// in the cluster for restoring the cloudbackup
	RestoreVolumeName string `protobuf:"bytes,2,opt,name=restore_volume_name,json=restoreVolumeName" json:"restore_volume_name,omitempty"`
	// The credential to be used for restore operation
	CredentialUuid string `protobuf:"bytes,3,opt,name=credential_uuid,json=credentialUuid" json:"credential_uuid,omitempty"`
	// Optional for provisioning restore
	// volume (ResoreVolumeName should not be specified)
	NodeId               string   `protobuf:"bytes,4,opt,name=node_id,json=nodeId" json:"node_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CloudBackupRestoreRequest) Reset()         { *m = CloudBackupRestoreRequest{} }
func (m *CloudBackupRestoreRequest) String() string { return proto.CompactTextString(m) }
func (*CloudBackupRestoreRequest) ProtoMessage()    {}
func (*CloudBackupRestoreRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_1e0f7a7c36ab7fa4, []int{67}
}
func (m *CloudBackupRestoreRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CloudBackupRestoreRequest.Unmarshal(m, b)
}
func (m *CloudBackupRestoreRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CloudBackupRestoreRequest.Marshal(b, m, deterministic)
}
func (dst *CloudBackupRestoreRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CloudBackupRestoreRequest.Merge(dst, src)
}
func (m *CloudBackupRestoreRequest) XXX_Size() int {
	return xxx_messageInfo_CloudBackupRestoreRequest.Size(m)
}
func (m *CloudBackupRestoreRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CloudBackupRestoreRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CloudBackupRestoreRequest proto.InternalMessageInfo

func (m *CloudBackupRestoreRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *CloudBackupRestoreRequest) GetRestoreVolumeName() string {
	if m != nil {
		return m.RestoreVolumeName
	}
	return ""
}

func (m *CloudBackupRestoreRequest) GetCredentialUuid() string {
	if m != nil {
		return m.CredentialUuid
	}
	return ""
}

func (m *CloudBackupRestoreRequest) GetNodeId() string {
	if m != nil {
		return m.NodeId
	}
	return ""
}

type CloudBackupRestoreResponse struct {
	// VolumeID to which the backup is being restored
	RestoreVolumeId      string   `protobuf:"bytes,1,opt,name=restore_volume_id,json=restoreVolumeId" json:"restore_volume_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CloudBackupRestoreResponse) Reset()         { *m = CloudBackupRestoreResponse{} }
func (m *CloudBackupRestoreResponse) String() string { return proto.CompactTextString(m) }
func (*CloudBackupRestoreResponse) ProtoMessage()    {}
func (*CloudBackupRestoreResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_1e0f7a7c36ab7fa4, []int{68}
}
func (m *CloudBackupRestoreResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CloudBackupRestoreResponse.Unmarshal(m, b)
}
func (m *CloudBackupRestoreResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CloudBackupRestoreResponse.Marshal(b, m, deterministic)
}
func (dst *CloudBackupRestoreResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CloudBackupRestoreResponse.Merge(dst, src)
}
func (m *CloudBackupRestoreResponse) XXX_Size() int {
	return xxx_messageInfo_CloudBackupRestoreResponse.Size(m)
}
func (m *CloudBackupRestoreResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CloudBackupRestoreResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CloudBackupRestoreResponse proto.InternalMessageInfo

func (m *CloudBackupRestoreResponse) GetRestoreVolumeId() string {
	if m != nil {
		return m.RestoreVolumeId
	}
	return ""
}

type CloudBackupGenericRequest struct {
	// Optional source id of the volume for the request
	SrcVolumeId string `protobuf:"bytes,1,opt,name=src_volume_id,json=srcVolumeId" json:"src_volume_id,omitempty"`
	// ClusterID is the optional clusterID for the request
	ClusterId string `protobuf:"bytes,2,opt,name=cluster_id,json=clusterId" json:"cluster_id,omitempty"`
	// CredentialUUID is the credential for cloud to be used for the request
	CredentialUuid string `protobuf:"bytes,3,opt,name=credential_uuid,json=credentialUuid" json:"credential_uuid,omitempty"`
	// All if set to true, backups for all clusters in the cloud are processed
	All                  bool     `protobuf:"varint,4,opt,name=all" json:"all,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CloudBackupGenericRequest) Reset()         { *m = CloudBackupGenericRequest{} }
func (m *CloudBackupGenericRequest) String() string { return proto.CompactTextString(m) }
func (*CloudBackupGenericRequest) ProtoMessage()    {}
func (*CloudBackupGenericRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_1e0f7a7c36ab7fa4, []int{69}
}
func (m *CloudBackupGenericRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CloudBackupGenericRequest.Unmarshal(m, b)
}
func (m *CloudBackupGenericRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CloudBackupGenericRequest.Marshal(b, m, deterministic)
}
func (dst *CloudBackupGenericRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CloudBackupGenericRequest.Merge(dst, src)
}
func (m *CloudBackupGenericRequest) XXX_Size() int {
	return xxx_messageInfo_CloudBackupGenericRequest.Size(m)
}
func (m *CloudBackupGenericRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CloudBackupGenericRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CloudBackupGenericRequest proto.InternalMessageInfo

func (m *CloudBackupGenericRequest) GetSrcVolumeId() string {
	if m != nil {
		return m.SrcVolumeId
	}
	return ""
}

func (m *CloudBackupGenericRequest) GetClusterId() string {
	if m != nil {
		return m.ClusterId
	}
	return ""
}

func (m *CloudBackupGenericRequest) GetCredentialUuid() string {
	if m != nil {
		return m.CredentialUuid
	}
	return ""
}

func (m *CloudBackupGenericRequest) GetAll() bool {
	if m != nil {
		return m.All
	}
	return false
}

type CloudBackupInfo struct {
	// ID is the ID of the cloud backup
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	// SrcVolumeID is Source volumeID of the backup
	SrcVolumeId string `protobuf:"bytes,2,opt,name=src_volume_id,json=srcVolumeId" json:"src_volume_id,omitempty"`
	// SrcvolumeName is name of the sourceVolume of the backup
	SrcVolumeName string `protobuf:"bytes,3,opt,name=src_volume_name,json=srcVolumeName" json:"src_volume_name,omitempty"`
	// Timestamp is the timestamp at which the source volume
	// was backed up to cloud
	Timestamp *timestamp.Timestamp `protobuf:"bytes,4,opt,name=timestamp" json:"timestamp,omitempty"`
	// Metadata associated with the backup
	Metadata map[string]string `protobuf:"bytes,5,rep,name=metadata" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Status indicates the status of the backup
	Status               string   `protobuf:"bytes,6,opt,name=status" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CloudBackupInfo) Reset()         { *m = CloudBackupInfo{} }
func (m *CloudBackupInfo) String() string { return proto.CompactTextString(m) }
func (*CloudBackupInfo) ProtoMessage()    {}
func (*CloudBackupInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_1e0f7a7c36ab7fa4, []int{70}
}
func (m *CloudBackupInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CloudBackupInfo.Unmarshal(m, b)
}
func (m *CloudBackupInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CloudBackupInfo.Marshal(b, m, deterministic)
}
func (dst *CloudBackupInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CloudBackupInfo.Merge(dst, src)
}
func (m *CloudBackupInfo) XXX_Size() int {
	return xxx_messageInfo_CloudBackupInfo.Size(m)
}
func (m *CloudBackupInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_CloudBackupInfo.DiscardUnknown(m)
}

var xxx_messageInfo_CloudBackupInfo proto.InternalMessageInfo

func (m *CloudBackupInfo) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *CloudBackupInfo) GetSrcVolumeId() string {
	if m != nil {
		return m.SrcVolumeId
	}
	return ""
}

func (m *CloudBackupInfo) GetSrcVolumeName() string {
	if m != nil {
		return m.SrcVolumeName
	}
	return ""
}

func (m *CloudBackupInfo) GetTimestamp() *timestamp.Timestamp {
	if m != nil {
		return m.Timestamp
	}
	return nil
}

func (m *CloudBackupInfo) GetMetadata() map[string]string {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *CloudBackupInfo) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

type CloudBackupEnumerateRequest struct {
	// Optional source id of the volume for the request
	SrcVolumeId string `protobuf:"bytes,1,opt,name=src_volume_id,json=srcVolumeId" json:"src_volume_id,omitempty"`
	// ClusterID is the optional clusterID for the request
	ClusterId string `protobuf:"bytes,2,opt,name=cluster_id,json=clusterId" json:"cluster_id,omitempty"`
	// CredentialUUID is the credential for cloud to be used for the request
	CredentialUuid string `protobuf:"bytes,3,opt,name=credential_uuid,json=credentialUuid" json:"credential_uuid,omitempty"`
	// All if set to true, backups for all clusters in the cloud are processed
	All                  bool     `protobuf:"varint,4,opt,name=all" json:"all,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CloudBackupEnumerateRequest) Reset()         { *m = CloudBackupEnumerateRequest{} }
func (m *CloudBackupEnumerateRequest) String() string { return proto.CompactTextString(m) }
func (*CloudBackupEnumerateRequest) ProtoMessage()    {}
func (*CloudBackupEnumerateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_1e0f7a7c36ab7fa4, []int{71}
}
func (m *CloudBackupEnumerateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CloudBackupEnumerateRequest.Unmarshal(m, b)
}
func (m *CloudBackupEnumerateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CloudBackupEnumerateRequest.Marshal(b, m, deterministic)
}
func (dst *CloudBackupEnumerateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CloudBackupEnumerateRequest.Merge(dst, src)
}
func (m *CloudBackupEnumerateRequest) XXX_Size() int {
	return xxx_messageInfo_CloudBackupEnumerateRequest.Size(m)
}
func (m *CloudBackupEnumerateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CloudBackupEnumerateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CloudBackupEnumerateRequest proto.InternalMessageInfo

func (m *CloudBackupEnumerateRequest) GetSrcVolumeId() string {
	if m != nil {
		return m.SrcVolumeId
	}
	return ""
}

func (m *CloudBackupEnumerateRequest) GetClusterId() string {
	if m != nil {
		return m.ClusterId
	}
	return ""
}

func (m *CloudBackupEnumerateRequest) GetCredentialUuid() string {
	if m != nil {
		return m.CredentialUuid
	}
	return ""
}

func (m *CloudBackupEnumerateRequest) GetAll() bool {
	if m != nil {
		return m.All
	}
	return false
}

type CloudBackupEnumerateResponse struct {
	// Backups is list of backups in cloud for given volume/cluster/s
	Backups              []*CloudBackupInfo `protobuf:"bytes,1,rep,name=backups" json:"backups,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *CloudBackupEnumerateResponse) Reset()         { *m = CloudBackupEnumerateResponse{} }
func (m *CloudBackupEnumerateResponse) String() string { return proto.CompactTextString(m) }
func (*CloudBackupEnumerateResponse) ProtoMessage()    {}
func (*CloudBackupEnumerateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_1e0f7a7c36ab7fa4, []int{72}
}
func (m *CloudBackupEnumerateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CloudBackupEnumerateResponse.Unmarshal(m, b)
}
func (m *CloudBackupEnumerateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CloudBackupEnumerateResponse.Marshal(b, m, deterministic)
}
func (dst *CloudBackupEnumerateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CloudBackupEnumerateResponse.Merge(dst, src)
}
func (m *CloudBackupEnumerateResponse) XXX_Size() int {
	return xxx_messageInfo_CloudBackupEnumerateResponse.Size(m)
}
func (m *CloudBackupEnumerateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CloudBackupEnumerateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CloudBackupEnumerateResponse proto.InternalMessageInfo

func (m *CloudBackupEnumerateResponse) GetBackups() []*CloudBackupInfo {
	if m != nil {
		return m.Backups
	}
	return nil
}

type CloudBackupDeleteRequest struct {
	// ID is the ID of the cloud backup
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	// CredentialUUID is the credential for cloud to be used for the request
	CredentialUuid string `protobuf:"bytes,2,opt,name=credential_uuid,json=credentialUuid" json:"credential_uuid,omitempty"`
	// Force Delete cloudbackup even if there are dependencies
	Force                bool     `protobuf:"varint,3,opt,name=force" json:"force,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CloudBackupDeleteRequest) Reset()         { *m = CloudBackupDeleteRequest{} }
func (m *CloudBackupDeleteRequest) String() string { return proto.CompactTextString(m) }
func (*CloudBackupDeleteRequest) ProtoMessage()    {}
func (*CloudBackupDeleteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_1e0f7a7c36ab7fa4, []int{73}
}
func (m *CloudBackupDeleteRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CloudBackupDeleteRequest.Unmarshal(m, b)
}
func (m *CloudBackupDeleteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CloudBackupDeleteRequest.Marshal(b, m, deterministic)
}
func (dst *CloudBackupDeleteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CloudBackupDeleteRequest.Merge(dst, src)
}
func (m *CloudBackupDeleteRequest) XXX_Size() int {
	return xxx_messageInfo_CloudBackupDeleteRequest.Size(m)
}
func (m *CloudBackupDeleteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CloudBackupDeleteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CloudBackupDeleteRequest proto.InternalMessageInfo

func (m *CloudBackupDeleteRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *CloudBackupDeleteRequest) GetCredentialUuid() string {
	if m != nil {
		return m.CredentialUuid
	}
	return ""
}

func (m *CloudBackupDeleteRequest) GetForce() bool {
	if m != nil {
		return m.Force
	}
	return false
}

type CloudBackupDeleteAllRequest struct {
	// Optional source id of the volume for the request
	SrcVolumeId string `protobuf:"bytes,1,opt,name=src_volume_id,json=srcVolumeId" json:"src_volume_id,omitempty"`
	// ClusterID is the optional clusterID for the request
	ClusterId string `protobuf:"bytes,2,opt,name=cluster_id,json=clusterId" json:"cluster_id,omitempty"`
	// CredentialUUID is the credential for cloud to be used for the request
	CredentialUuid string `protobuf:"bytes,3,opt,name=credential_uuid,json=credentialUuid" json:"credential_uuid,omitempty"`
	// All if set to true, backups for all clusters in the cloud are processed
	All                  bool     `protobuf:"varint,4,opt,name=all" json:"all,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CloudBackupDeleteAllRequest) Reset()         { *m = CloudBackupDeleteAllRequest{} }
func (m *CloudBackupDeleteAllRequest) String() string { return proto.CompactTextString(m) }
func (*CloudBackupDeleteAllRequest) ProtoMessage()    {}
func (*CloudBackupDeleteAllRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_1e0f7a7c36ab7fa4, []int{74}
}
func (m *CloudBackupDeleteAllRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CloudBackupDeleteAllRequest.Unmarshal(m, b)
}
func (m *CloudBackupDeleteAllRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CloudBackupDeleteAllRequest.Marshal(b, m, deterministic)
}
func (dst *CloudBackupDeleteAllRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CloudBackupDeleteAllRequest.Merge(dst, src)
}
func (m *CloudBackupDeleteAllRequest) XXX_Size() int {
	return xxx_messageInfo_CloudBackupDeleteAllRequest.Size(m)
}
func (m *CloudBackupDeleteAllRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CloudBackupDeleteAllRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CloudBackupDeleteAllRequest proto.InternalMessageInfo

func (m *CloudBackupDeleteAllRequest) GetSrcVolumeId() string {
	if m != nil {
		return m.SrcVolumeId
	}
	return ""
}

func (m *CloudBackupDeleteAllRequest) GetClusterId() string {
	if m != nil {
		return m.ClusterId
	}
	return ""
}

func (m *CloudBackupDeleteAllRequest) GetCredentialUuid() string {
	if m != nil {
		return m.CredentialUuid
	}
	return ""
}

func (m *CloudBackupDeleteAllRequest) GetAll() bool {
	if m != nil {
		return m.All
	}
	return false
}

type CloudBackupStatusRequest struct {
	// SrcVolumeID optional volumeID to list status of backup/restore
	SrcVolumeId string `protobuf:"bytes,1,opt,name=src_volume_id,json=srcVolumeId" json:"src_volume_id,omitempty"`
	// Local indicates if only those backups/restores that are
	// active on current node must be returned
	Local                bool     `protobuf:"varint,2,opt,name=local" json:"local,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CloudBackupStatusRequest) Reset()         { *m = CloudBackupStatusRequest{} }
func (m *CloudBackupStatusRequest) String() string { return proto.CompactTextString(m) }
func (*CloudBackupStatusRequest) ProtoMessage()    {}
func (*CloudBackupStatusRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_1e0f7a7c36ab7fa4, []int{75}
}
func (m *CloudBackupStatusRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CloudBackupStatusRequest.Unmarshal(m, b)
}
func (m *CloudBackupStatusRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CloudBackupStatusRequest.Marshal(b, m, deterministic)
}
func (dst *CloudBackupStatusRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CloudBackupStatusRequest.Merge(dst, src)
}
func (m *CloudBackupStatusRequest) XXX_Size() int {
	return xxx_messageInfo_CloudBackupStatusRequest.Size(m)
}
func (m *CloudBackupStatusRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CloudBackupStatusRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CloudBackupStatusRequest proto.InternalMessageInfo

func (m *CloudBackupStatusRequest) GetSrcVolumeId() string {
	if m != nil {
		return m.SrcVolumeId
	}
	return ""
}

func (m *CloudBackupStatusRequest) GetLocal() bool {
	if m != nil {
		return m.Local
	}
	return false
}

type CloudBackupStatus struct {
	// ID is the ID for the operation
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	// OpType indicates if this is a backup or restore
	Optype CloudBackupOpType `protobuf:"varint,2,opt,name=optype,enum=openstorage.api.CloudBackupOpType" json:"optype,omitempty"`
	// State indicates if the op is currently active/done/failed
	Status CloudBackupStatusType `protobuf:"varint,3,opt,name=status,enum=openstorage.api.CloudBackupStatusType" json:"status,omitempty"`
	// BytesDone indicates total Bytes uploaded/downloaded
	BytesDone uint64 `protobuf:"varint,4,opt,name=bytes_done,json=bytesDone" json:"bytes_done,omitempty"`
	// StartTime indicates Op's start time
	StartTime *timestamp.Timestamp `protobuf:"bytes,5,opt,name=start_time,json=startTime" json:"start_time,omitempty"`
	// CompletedTime indicates Op's completed time
	ComletedTime *timestamp.Timestamp `protobuf:"bytes,6,opt,name=comleted_time,json=comletedTime" json:"comleted_time,omitempty"`
	// NodeID is the ID of the node where this Op is active
	NodeId               string   `protobuf:"bytes,7,opt,name=node_id,json=nodeId" json:"node_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CloudBackupStatus) Reset()         { *m = CloudBackupStatus{} }
func (m *CloudBackupStatus) String() string { return proto.CompactTextString(m) }
func (*CloudBackupStatus) ProtoMessage()    {}
func (*CloudBackupStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_1e0f7a7c36ab7fa4, []int{76}
}
func (m *CloudBackupStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CloudBackupStatus.Unmarshal(m, b)
}
func (m *CloudBackupStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CloudBackupStatus.Marshal(b, m, deterministic)
}
func (dst *CloudBackupStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CloudBackupStatus.Merge(dst, src)
}
func (m *CloudBackupStatus) XXX_Size() int {
	return xxx_messageInfo_CloudBackupStatus.Size(m)
}
func (m *CloudBackupStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_CloudBackupStatus.DiscardUnknown(m)
}

var xxx_messageInfo_CloudBackupStatus proto.InternalMessageInfo

func (m *CloudBackupStatus) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *CloudBackupStatus) GetOptype() CloudBackupOpType {
	if m != nil {
		return m.Optype
	}
	return CloudBackupOpType_CloudBackupOp
}

func (m *CloudBackupStatus) GetStatus() CloudBackupStatusType {
	if m != nil {
		return m.Status
	}
	return CloudBackupStatusType_CloudBackupStatusNotStarted
}

func (m *CloudBackupStatus) GetBytesDone() uint64 {
	if m != nil {
		return m.BytesDone
	}
	return 0
}

func (m *CloudBackupStatus) GetStartTime() *timestamp.Timestamp {
	if m != nil {
		return m.StartTime
	}
	return nil
}

func (m *CloudBackupStatus) GetComletedTime() *timestamp.Timestamp {
	if m != nil {
		return m.ComletedTime
	}
	return nil
}

func (m *CloudBackupStatus) GetNodeId() string {
	if m != nil {
		return m.NodeId
	}
	return ""
}

type CloudBackupStatusResponse struct {
	// statuses is list of currently active/failed/done backup/restores
	Statuses             map[string]*CloudBackupStatus `protobuf:"bytes,1,rep,name=statuses" json:"statuses,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	XXX_NoUnkeyedLiteral struct{}                      `json:"-"`
	XXX_unrecognized     []byte                        `json:"-"`
	XXX_sizecache        int32                         `json:"-"`
}

func (m *CloudBackupStatusResponse) Reset()         { *m = CloudBackupStatusResponse{} }
func (m *CloudBackupStatusResponse) String() string { return proto.CompactTextString(m) }
func (*CloudBackupStatusResponse) ProtoMessage()    {}
func (*CloudBackupStatusResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_1e0f7a7c36ab7fa4, []int{77}
}
func (m *CloudBackupStatusResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CloudBackupStatusResponse.Unmarshal(m, b)
}
func (m *CloudBackupStatusResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CloudBackupStatusResponse.Marshal(b, m, deterministic)
}
func (dst *CloudBackupStatusResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CloudBackupStatusResponse.Merge(dst, src)
}
func (m *CloudBackupStatusResponse) XXX_Size() int {
	return xxx_messageInfo_CloudBackupStatusResponse.Size(m)
}
func (m *CloudBackupStatusResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CloudBackupStatusResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CloudBackupStatusResponse proto.InternalMessageInfo

func (m *CloudBackupStatusResponse) GetStatuses() map[string]*CloudBackupStatus {
	if m != nil {
		return m.Statuses
	}
	return nil
}

type CloudBackupCatalogRequest struct {
	// ID is Backup ID in the cloud
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	// is the credential for cloud
	CredentialUuid       string   `protobuf:"bytes,2,opt,name=credential_uuid,json=credentialUuid" json:"credential_uuid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CloudBackupCatalogRequest) Reset()         { *m = CloudBackupCatalogRequest{} }
func (m *CloudBackupCatalogRequest) String() string { return proto.CompactTextString(m) }
func (*CloudBackupCatalogRequest) ProtoMessage()    {}
func (*CloudBackupCatalogRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_1e0f7a7c36ab7fa4, []int{78}
}
func (m *CloudBackupCatalogRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CloudBackupCatalogRequest.Unmarshal(m, b)
}
func (m *CloudBackupCatalogRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CloudBackupCatalogRequest.Marshal(b, m, deterministic)
}
func (dst *CloudBackupCatalogRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CloudBackupCatalogRequest.Merge(dst, src)
}
func (m *CloudBackupCatalogRequest) XXX_Size() int {
	return xxx_messageInfo_CloudBackupCatalogRequest.Size(m)
}
func (m *CloudBackupCatalogRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CloudBackupCatalogRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CloudBackupCatalogRequest proto.InternalMessageInfo

func (m *CloudBackupCatalogRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *CloudBackupCatalogRequest) GetCredentialUuid() string {
	if m != nil {
		return m.CredentialUuid
	}
	return ""
}

type CloudBackupCatalogResponse struct {
	// Contents is listing of backup contents
	Contents             []string `protobuf:"bytes,1,rep,name=contents" json:"contents,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CloudBackupCatalogResponse) Reset()         { *m = CloudBackupCatalogResponse{} }
func (m *CloudBackupCatalogResponse) String() string { return proto.CompactTextString(m) }
func (*CloudBackupCatalogResponse) ProtoMessage()    {}
func (*CloudBackupCatalogResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_1e0f7a7c36ab7fa4, []int{79}
}
func (m *CloudBackupCatalogResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CloudBackupCatalogResponse.Unmarshal(m, b)
}
func (m *CloudBackupCatalogResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CloudBackupCatalogResponse.Marshal(b, m, deterministic)
}
func (dst *CloudBackupCatalogResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CloudBackupCatalogResponse.Merge(dst, src)
}
func (m *CloudBackupCatalogResponse) XXX_Size() int {
	return xxx_messageInfo_CloudBackupCatalogResponse.Size(m)
}
func (m *CloudBackupCatalogResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CloudBackupCatalogResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CloudBackupCatalogResponse proto.InternalMessageInfo

func (m *CloudBackupCatalogResponse) GetContents() []string {
	if m != nil {
		return m.Contents
	}
	return nil
}

type CloudBackupHistoryRequest struct {
	// SrcVolumeID is volumeID for which history of backup/restore
	// is being requested
	SrcVolumeId          string   `protobuf:"bytes,1,opt,name=src_volume_id,json=srcVolumeId" json:"src_volume_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CloudBackupHistoryRequest) Reset()         { *m = CloudBackupHistoryRequest{} }
func (m *CloudBackupHistoryRequest) String() string { return proto.CompactTextString(m) }
func (*CloudBackupHistoryRequest) ProtoMessage()    {}
func (*CloudBackupHistoryRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_1e0f7a7c36ab7fa4, []int{80}
}
func (m *CloudBackupHistoryRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CloudBackupHistoryRequest.Unmarshal(m, b)
}
func (m *CloudBackupHistoryRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CloudBackupHistoryRequest.Marshal(b, m, deterministic)
}
func (dst *CloudBackupHistoryRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CloudBackupHistoryRequest.Merge(dst, src)
}
func (m *CloudBackupHistoryRequest) XXX_Size() int {
	return xxx_messageInfo_CloudBackupHistoryRequest.Size(m)
}
func (m *CloudBackupHistoryRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CloudBackupHistoryRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CloudBackupHistoryRequest proto.InternalMessageInfo

func (m *CloudBackupHistoryRequest) GetSrcVolumeId() string {
	if m != nil {
		return m.SrcVolumeId
	}
	return ""
}

type CloudBackupHistoryItem struct {
	// SrcVolumeID is volume ID which was backedup
	SrcVolumeId string `protobuf:"bytes,1,opt,name=src_volume_id,json=srcVolumeId" json:"src_volume_id,omitempty"`
	// TimeStamp is the time at which either backup completed/failed
	Timestamp *timestamp.Timestamp `protobuf:"bytes,2,opt,name=timestamp" json:"timestamp,omitempty"`
	// Status indicates whether backup was completed/failed
	Status               string   `protobuf:"bytes,3,opt,name=status" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CloudBackupHistoryItem) Reset()         { *m = CloudBackupHistoryItem{} }
func (m *CloudBackupHistoryItem) String() string { return proto.CompactTextString(m) }
func (*CloudBackupHistoryItem) ProtoMessage()    {}
func (*CloudBackupHistoryItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_1e0f7a7c36ab7fa4, []int{81}
}
func (m *CloudBackupHistoryItem) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CloudBackupHistoryItem.Unmarshal(m, b)
}
func (m *CloudBackupHistoryItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CloudBackupHistoryItem.Marshal(b, m, deterministic)
}
func (dst *CloudBackupHistoryItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CloudBackupHistoryItem.Merge(dst, src)
}
func (m *CloudBackupHistoryItem) XXX_Size() int {
	return xxx_messageInfo_CloudBackupHistoryItem.Size(m)
}
func (m *CloudBackupHistoryItem) XXX_DiscardUnknown() {
	xxx_messageInfo_CloudBackupHistoryItem.DiscardUnknown(m)
}

var xxx_messageInfo_CloudBackupHistoryItem proto.InternalMessageInfo

func (m *CloudBackupHistoryItem) GetSrcVolumeId() string {
	if m != nil {
		return m.SrcVolumeId
	}
	return ""
}

func (m *CloudBackupHistoryItem) GetTimestamp() *timestamp.Timestamp {
	if m != nil {
		return m.Timestamp
	}
	return nil
}

func (m *CloudBackupHistoryItem) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

type CloudBackupHistoryResponse struct {
	// HistoryList is list of past backup/restores in the cluster
	HistoryList          []*CloudBackupHistoryItem `protobuf:"bytes,1,rep,name=history_list,json=historyList" json:"history_list,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *CloudBackupHistoryResponse) Reset()         { *m = CloudBackupHistoryResponse{} }
func (m *CloudBackupHistoryResponse) String() string { return proto.CompactTextString(m) }
func (*CloudBackupHistoryResponse) ProtoMessage()    {}
func (*CloudBackupHistoryResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_1e0f7a7c36ab7fa4, []int{82}
}
func (m *CloudBackupHistoryResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CloudBackupHistoryResponse.Unmarshal(m, b)
}
func (m *CloudBackupHistoryResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CloudBackupHistoryResponse.Marshal(b, m, deterministic)
}
func (dst *CloudBackupHistoryResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CloudBackupHistoryResponse.Merge(dst, src)
}
func (m *CloudBackupHistoryResponse) XXX_Size() int {
	return xxx_messageInfo_CloudBackupHistoryResponse.Size(m)
}
func (m *CloudBackupHistoryResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CloudBackupHistoryResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CloudBackupHistoryResponse proto.InternalMessageInfo

func (m *CloudBackupHistoryResponse) GetHistoryList() []*CloudBackupHistoryItem {
	if m != nil {
		return m.HistoryList
	}
	return nil
}

type CloudBackupStateChangeRequest struct {
	// SrcVolumeID is volume ID on which backup/restore
	// state change is being requested
	SrcVolumeId string `protobuf:"bytes,1,opt,name=src_volume_id,json=srcVolumeId" json:"src_volume_id,omitempty"`
	// RequestedState is desired state of the op
	// can be pause/resume/stop
	RequestedState       string   `protobuf:"bytes,2,opt,name=requested_state,json=requestedState" json:"requested_state,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CloudBackupStateChangeRequest) Reset()         { *m = CloudBackupStateChangeRequest{} }
func (m *CloudBackupStateChangeRequest) String() string { return proto.CompactTextString(m) }
func (*CloudBackupStateChangeRequest) ProtoMessage()    {}
func (*CloudBackupStateChangeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_1e0f7a7c36ab7fa4, []int{83}
}
func (m *CloudBackupStateChangeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CloudBackupStateChangeRequest.Unmarshal(m, b)
}
func (m *CloudBackupStateChangeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CloudBackupStateChangeRequest.Marshal(b, m, deterministic)
}
func (dst *CloudBackupStateChangeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CloudBackupStateChangeRequest.Merge(dst, src)
}
func (m *CloudBackupStateChangeRequest) XXX_Size() int {
	return xxx_messageInfo_CloudBackupStateChangeRequest.Size(m)
}
func (m *CloudBackupStateChangeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CloudBackupStateChangeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CloudBackupStateChangeRequest proto.InternalMessageInfo

func (m *CloudBackupStateChangeRequest) GetSrcVolumeId() string {
	if m != nil {
		return m.SrcVolumeId
	}
	return ""
}

func (m *CloudBackupStateChangeRequest) GetRequestedState() string {
	if m != nil {
		return m.RequestedState
	}
	return ""
}

type CloudBackupScheduleInfo struct {
	// SrcVolumeID is the schedule's source volume
	SrcVolumeId string `protobuf:"bytes,1,opt,name=src_volume_id,json=srcVolumeId" json:"src_volume_id,omitempty"`
	// CredentialUUID is the cloud credential used with this schedule
	CredentialUuid string `protobuf:"bytes,2,opt,name=credential_uuid,json=credentialUuid" json:"credential_uuid,omitempty"`
	// Schedule is the frequence of backup
	Schedule string `protobuf:"bytes,3,opt,name=schedule" json:"schedule,omitempty"`
	// MaxBackups are the maximum number of backups retained
	// in cloud.Older backups are deleted
	MaxBackups           uint32   `protobuf:"varint,4,opt,name=max_backups,json=maxBackups" json:"max_backups,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CloudBackupScheduleInfo) Reset()         { *m = CloudBackupScheduleInfo{} }
func (m *CloudBackupScheduleInfo) String() string { return proto.CompactTextString(m) }
func (*CloudBackupScheduleInfo) ProtoMessage()    {}
func (*CloudBackupScheduleInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_1e0f7a7c36ab7fa4, []int{84}
}
func (m *CloudBackupScheduleInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CloudBackupScheduleInfo.Unmarshal(m, b)
}
func (m *CloudBackupScheduleInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CloudBackupScheduleInfo.Marshal(b, m, deterministic)
}
func (dst *CloudBackupScheduleInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CloudBackupScheduleInfo.Merge(dst, src)
}
func (m *CloudBackupScheduleInfo) XXX_Size() int {
	return xxx_messageInfo_CloudBackupScheduleInfo.Size(m)
}
func (m *CloudBackupScheduleInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_CloudBackupScheduleInfo.DiscardUnknown(m)
}

var xxx_messageInfo_CloudBackupScheduleInfo proto.InternalMessageInfo

func (m *CloudBackupScheduleInfo) GetSrcVolumeId() string {
	if m != nil {
		return m.SrcVolumeId
	}
	return ""
}

func (m *CloudBackupScheduleInfo) GetCredentialUuid() string {
	if m != nil {
		return m.CredentialUuid
	}
	return ""
}

func (m *CloudBackupScheduleInfo) GetSchedule() string {
	if m != nil {
		return m.Schedule
	}
	return ""
}

func (m *CloudBackupScheduleInfo) GetMaxBackups() uint32 {
	if m != nil {
		return m.MaxBackups
	}
	return 0
}

type CloudBackupSchedCreateRequest struct {
	// SrcVolumeID is the schedule's source volume
	SrcVolumeId string `protobuf:"bytes,1,opt,name=src_volume_id,json=srcVolumeId" json:"src_volume_id,omitempty"`
	// CredentialUUID is the cloud credential used with this schedule
	CredentialUuid string `protobuf:"bytes,2,opt,name=credential_uuid,json=credentialUuid" json:"credential_uuid,omitempty"`
	// Schedule is the frequence of backup
	Schedule string `protobuf:"bytes,3,opt,name=schedule" json:"schedule,omitempty"`
	// MaxBackups are the maximum number of backups retained
	// in cloud.Older backups are deleted
	MaxBackups           uint32   `protobuf:"varint,4,opt,name=max_backups,json=maxBackups" json:"max_backups,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CloudBackupSchedCreateRequest) Reset()         { *m = CloudBackupSchedCreateRequest{} }
func (m *CloudBackupSchedCreateRequest) String() string { return proto.CompactTextString(m) }
func (*CloudBackupSchedCreateRequest) ProtoMessage()    {}
func (*CloudBackupSchedCreateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_1e0f7a7c36ab7fa4, []int{85}
}
func (m *CloudBackupSchedCreateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CloudBackupSchedCreateRequest.Unmarshal(m, b)
}
func (m *CloudBackupSchedCreateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CloudBackupSchedCreateRequest.Marshal(b, m, deterministic)
}
func (dst *CloudBackupSchedCreateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CloudBackupSchedCreateRequest.Merge(dst, src)
}
func (m *CloudBackupSchedCreateRequest) XXX_Size() int {
	return xxx_messageInfo_CloudBackupSchedCreateRequest.Size(m)
}
func (m *CloudBackupSchedCreateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CloudBackupSchedCreateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CloudBackupSchedCreateRequest proto.InternalMessageInfo

func (m *CloudBackupSchedCreateRequest) GetSrcVolumeId() string {
	if m != nil {
		return m.SrcVolumeId
	}
	return ""
}

func (m *CloudBackupSchedCreateRequest) GetCredentialUuid() string {
	if m != nil {
		return m.CredentialUuid
	}
	return ""
}

func (m *CloudBackupSchedCreateRequest) GetSchedule() string {
	if m != nil {
		return m.Schedule
	}
	return ""
}

func (m *CloudBackupSchedCreateRequest) GetMaxBackups() uint32 {
	if m != nil {
		return m.MaxBackups
	}
	return 0
}

type CloudBackupSchedCreateResponse struct {
	// UUID is the UUID of the newly created schedule
	Uuid                 string   `protobuf:"bytes,1,opt,name=uuid" json:"uuid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CloudBackupSchedCreateResponse) Reset()         { *m = CloudBackupSchedCreateResponse{} }
func (m *CloudBackupSchedCreateResponse) String() string { return proto.CompactTextString(m) }
func (*CloudBackupSchedCreateResponse) ProtoMessage()    {}
func (*CloudBackupSchedCreateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_1e0f7a7c36ab7fa4, []int{86}
}
func (m *CloudBackupSchedCreateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CloudBackupSchedCreateResponse.Unmarshal(m, b)
}
func (m *CloudBackupSchedCreateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CloudBackupSchedCreateResponse.Marshal(b, m, deterministic)
}
func (dst *CloudBackupSchedCreateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CloudBackupSchedCreateResponse.Merge(dst, src)
}
func (m *CloudBackupSchedCreateResponse) XXX_Size() int {
	return xxx_messageInfo_CloudBackupSchedCreateResponse.Size(m)
}
func (m *CloudBackupSchedCreateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CloudBackupSchedCreateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CloudBackupSchedCreateResponse proto.InternalMessageInfo

func (m *CloudBackupSchedCreateResponse) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

type CloudBackupSchedDeleteRequest struct {
	// UUID is UUID of the schedule to be deleted
	Uuid                 string   `protobuf:"bytes,1,opt,name=uuid" json:"uuid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CloudBackupSchedDeleteRequest) Reset()         { *m = CloudBackupSchedDeleteRequest{} }
func (m *CloudBackupSchedDeleteRequest) String() string { return proto.CompactTextString(m) }
func (*CloudBackupSchedDeleteRequest) ProtoMessage()    {}
func (*CloudBackupSchedDeleteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_1e0f7a7c36ab7fa4, []int{87}
}
func (m *CloudBackupSchedDeleteRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CloudBackupSchedDeleteRequest.Unmarshal(m, b)
}
func (m *CloudBackupSchedDeleteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CloudBackupSchedDeleteRequest.Marshal(b, m, deterministic)
}
func (dst *CloudBackupSchedDeleteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CloudBackupSchedDeleteRequest.Merge(dst, src)
}
func (m *CloudBackupSchedDeleteRequest) XXX_Size() int {
	return xxx_messageInfo_CloudBackupSchedDeleteRequest.Size(m)
}
func (m *CloudBackupSchedDeleteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CloudBackupSchedDeleteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CloudBackupSchedDeleteRequest proto.InternalMessageInfo

func (m *CloudBackupSchedDeleteRequest) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

type CloudBackupSchedEnumerateResponse struct {
	// Schedule is map of schedule uuid to scheduleInfo
	Schedules            map[string]*CloudBackupScheduleInfo `protobuf:"bytes,1,rep,name=schedules" json:"schedules,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	XXX_NoUnkeyedLiteral struct{}                            `json:"-"`
	XXX_unrecognized     []byte                              `json:"-"`
	XXX_sizecache        int32                               `json:"-"`
}

func (m *CloudBackupSchedEnumerateResponse) Reset()         { *m = CloudBackupSchedEnumerateResponse{} }
func (m *CloudBackupSchedEnumerateResponse) String() string { return proto.CompactTextString(m) }
func (*CloudBackupSchedEnumerateResponse) ProtoMessage()    {}
func (*CloudBackupSchedEnumerateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_1e0f7a7c36ab7fa4, []int{88}
}
func (m *CloudBackupSchedEnumerateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CloudBackupSchedEnumerateResponse.Unmarshal(m, b)
}
func (m *CloudBackupSchedEnumerateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CloudBackupSchedEnumerateResponse.Marshal(b, m, deterministic)
}
func (dst *CloudBackupSchedEnumerateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CloudBackupSchedEnumerateResponse.Merge(dst, src)
}
func (m *CloudBackupSchedEnumerateResponse) XXX_Size() int {
	return xxx_messageInfo_CloudBackupSchedEnumerateResponse.Size(m)
}
func (m *CloudBackupSchedEnumerateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CloudBackupSchedEnumerateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CloudBackupSchedEnumerateResponse proto.InternalMessageInfo

func (m *CloudBackupSchedEnumerateResponse) GetSchedules() map[string]*CloudBackupScheduleInfo {
	if m != nil {
		return m.Schedules
	}
	return nil
}

func init() {
	proto.RegisterType((*StorageResource)(nil), "openstorage.api.StorageResource")
	proto.RegisterType((*StoragePool)(nil), "openstorage.api.StoragePool")
	proto.RegisterMapType((map[string]string)(nil), "openstorage.api.StoragePool.LabelsEntry")
	proto.RegisterType((*VolumeLocator)(nil), "openstorage.api.VolumeLocator")
	proto.RegisterMapType((map[string]string)(nil), "openstorage.api.VolumeLocator.VolumeLabelsEntry")
	proto.RegisterType((*Source)(nil), "openstorage.api.Source")
	proto.RegisterType((*Group)(nil), "openstorage.api.Group")
	proto.RegisterType((*VolumeSpec)(nil), "openstorage.api.VolumeSpec")
	proto.RegisterMapType((map[string]string)(nil), "openstorage.api.VolumeSpec.VolumeLabelsEntry")
	proto.RegisterType((*ReplicaSet)(nil), "openstorage.api.ReplicaSet")
	proto.RegisterType((*RuntimeStateMap)(nil), "openstorage.api.RuntimeStateMap")
	proto.RegisterMapType((map[string]string)(nil), "openstorage.api.RuntimeStateMap.RuntimeStateEntry")
	proto.RegisterType((*Volume)(nil), "openstorage.api.Volume")
	proto.RegisterMapType((map[string]string)(nil), "openstorage.api.Volume.AttachInfoEntry")
	proto.RegisterType((*Stats)(nil), "openstorage.api.Stats")
	proto.RegisterType((*Alert)(nil), "openstorage.api.Alert")
	proto.RegisterType((*Alerts)(nil), "openstorage.api.Alerts")
	proto.RegisterType((*ObjectstoreInfo)(nil), "openstorage.api.ObjectstoreInfo")
	proto.RegisterType((*VolumeCreateRequest)(nil), "openstorage.api.VolumeCreateRequest")
	proto.RegisterType((*VolumeResponse)(nil), "openstorage.api.VolumeResponse")
	proto.RegisterType((*VolumeCreateResponse)(nil), "openstorage.api.VolumeCreateResponse")
	proto.RegisterType((*VolumeStateAction)(nil), "openstorage.api.VolumeStateAction")
	proto.RegisterType((*VolumeSetRequest)(nil), "openstorage.api.VolumeSetRequest")
	proto.RegisterMapType((map[string]string)(nil), "openstorage.api.VolumeSetRequest.OptionsEntry")
	proto.RegisterType((*VolumeSetResponse)(nil), "openstorage.api.VolumeSetResponse")
	proto.RegisterType((*SnapCreateRequest)(nil), "openstorage.api.SnapCreateRequest")
	proto.RegisterType((*SnapCreateResponse)(nil), "openstorage.api.SnapCreateResponse")
	proto.RegisterType((*VolumeInfo)(nil), "openstorage.api.VolumeInfo")
	proto.RegisterType((*VolumeConsumer)(nil), "openstorage.api.VolumeConsumer")
	proto.RegisterType((*GraphDriverChanges)(nil), "openstorage.api.GraphDriverChanges")
	proto.RegisterType((*ClusterResponse)(nil), "openstorage.api.ClusterResponse")
	proto.RegisterType((*ActiveRequest)(nil), "openstorage.api.ActiveRequest")
	proto.RegisterMapType((map[int64]string)(nil), "openstorage.api.ActiveRequest.ReqestKVEntry")
	proto.RegisterType((*ActiveRequests)(nil), "openstorage.api.ActiveRequests")
	proto.RegisterType((*GroupSnapCreateRequest)(nil), "openstorage.api.GroupSnapCreateRequest")
	proto.RegisterMapType((map[string]string)(nil), "openstorage.api.GroupSnapCreateRequest.LabelsEntry")
	proto.RegisterType((*GroupSnapCreateResponse)(nil), "openstorage.api.GroupSnapCreateResponse")
	proto.RegisterMapType((map[string]*SnapCreateResponse)(nil), "openstorage.api.GroupSnapCreateResponse.SnapshotsEntry")
	proto.RegisterType((*StorageNode)(nil), "openstorage.api.StorageNode")
	proto.RegisterMapType((map[string]*StorageResource)(nil), "openstorage.api.StorageNode.DisksEntry")
	proto.RegisterMapType((map[string]string)(nil), "openstorage.api.StorageNode.NodeLabelsEntry")
	proto.RegisterType((*StorageCluster)(nil), "openstorage.api.StorageCluster")
	proto.RegisterType((*VolumeMountRequest)(nil), "openstorage.api.VolumeMountRequest")
	proto.RegisterMapType((map[string]string)(nil), "openstorage.api.VolumeMountRequest.OptionsEntry")
	proto.RegisterType((*VolumeMountResponse)(nil), "openstorage.api.VolumeMountResponse")
	proto.RegisterType((*VolumeUnmountRequest)(nil), "openstorage.api.VolumeUnmountRequest")
	proto.RegisterMapType((map[string]string)(nil), "openstorage.api.VolumeUnmountRequest.OptionsEntry")
	proto.RegisterType((*VolumeUnmountResponse)(nil), "openstorage.api.VolumeUnmountResponse")
	proto.RegisterType((*VolumeAttachRequest)(nil), "openstorage.api.VolumeAttachRequest")
	proto.RegisterMapType((map[string]string)(nil), "openstorage.api.VolumeAttachRequest.OptionsEntry")
	proto.RegisterType((*VolumeAttachResponse)(nil), "openstorage.api.VolumeAttachResponse")
	proto.RegisterType((*VolumeDetachRequest)(nil), "openstorage.api.VolumeDetachRequest")
	proto.RegisterType((*VolumeDetachResponse)(nil), "openstorage.api.VolumeDetachResponse")
	proto.RegisterType((*OpenStorageVolumeCreateRequest)(nil), "openstorage.api.OpenStorageVolumeCreateRequest")
	proto.RegisterType((*OpenStorageVolumeCreateResponse)(nil), "openstorage.api.OpenStorageVolumeCreateResponse")
	proto.RegisterType((*VolumeCreateFromVolumeIDRequest)(nil), "openstorage.api.VolumeCreateFromVolumeIDRequest")
	proto.RegisterType((*VolumeCreateFromVolumeIDResponse)(nil), "openstorage.api.VolumeCreateFromVolumeIDResponse")
	proto.RegisterType((*VolumeDeleteRequest)(nil), "openstorage.api.VolumeDeleteRequest")
	proto.RegisterType((*VolumeDeleteResponse)(nil), "openstorage.api.VolumeDeleteResponse")
	proto.RegisterType((*VolumeInspectRequest)(nil), "openstorage.api.VolumeInspectRequest")
	proto.RegisterType((*VolumeInspectResponse)(nil), "openstorage.api.VolumeInspectResponse")
	proto.RegisterType((*VolumeEnumerateRequest)(nil), "openstorage.api.VolumeEnumerateRequest")
	proto.RegisterType((*VolumeEnumerateResponse)(nil), "openstorage.api.VolumeEnumerateResponse")
	proto.RegisterType((*VolumeSnapshotCreateRequest)(nil), "openstorage.api.VolumeSnapshotCreateRequest")
	proto.RegisterMapType((map[string]string)(nil), "openstorage.api.VolumeSnapshotCreateRequest.LabelsEntry")
	proto.RegisterType((*VolumeSnapshotCreateResponse)(nil), "openstorage.api.VolumeSnapshotCreateResponse")
	proto.RegisterType((*VolumeSnapshotRestoreRequest)(nil), "openstorage.api.VolumeSnapshotRestoreRequest")
	proto.RegisterType((*VolumeSnapshotRestoreResponse)(nil), "openstorage.api.VolumeSnapshotRestoreResponse")
	proto.RegisterType((*VolumeSnapshotEnumerateRequest)(nil), "openstorage.api.VolumeSnapshotEnumerateRequest")
	proto.RegisterMapType((map[string]string)(nil), "openstorage.api.VolumeSnapshotEnumerateRequest.LabelsEntry")
	proto.RegisterType((*VolumeSnapshotEnumerateResponse)(nil), "openstorage.api.VolumeSnapshotEnumerateResponse")
	proto.RegisterType((*ClusterEnumerateRequest)(nil), "openstorage.api.ClusterEnumerateRequest")
	proto.RegisterType((*ClusterEnumerateResponse)(nil), "openstorage.api.ClusterEnumerateResponse")
	proto.RegisterType((*ClusterInspectRequest)(nil), "openstorage.api.ClusterInspectRequest")
	proto.RegisterType((*ClusterInspectResponse)(nil), "openstorage.api.ClusterInspectResponse")
	proto.RegisterType((*ClusterAlertEnumerateRequest)(nil), "openstorage.api.ClusterAlertEnumerateRequest")
	proto.RegisterType((*ClusterAlertEnumerateResponse)(nil), "openstorage.api.ClusterAlertEnumerateResponse")
	proto.RegisterType((*ClusterAlertClearRequest)(nil), "openstorage.api.ClusterAlertClearRequest")
	proto.RegisterType((*ClusterAlertClearResponse)(nil), "openstorage.api.ClusterAlertClearResponse")
	proto.RegisterType((*ClusterAlertEraseRequest)(nil), "openstorage.api.ClusterAlertEraseRequest")
	proto.RegisterType((*ClusterAlertEraseResponse)(nil), "openstorage.api.ClusterAlertEraseResponse")
	proto.RegisterType((*CloudBackupCreateRequest)(nil), "openstorage.api.CloudBackupCreateRequest")
	proto.RegisterType((*CloudBackupCreateResponse)(nil), "openstorage.api.CloudBackupCreateResponse")
	proto.RegisterType((*CloudBackupRestoreRequest)(nil), "openstorage.api.CloudBackupRestoreRequest")
	proto.RegisterType((*CloudBackupRestoreResponse)(nil), "openstorage.api.CloudBackupRestoreResponse")
	proto.RegisterType((*CloudBackupGenericRequest)(nil), "openstorage.api.CloudBackupGenericRequest")
	proto.RegisterType((*CloudBackupInfo)(nil), "openstorage.api.CloudBackupInfo")
	proto.RegisterMapType((map[string]string)(nil), "openstorage.api.CloudBackupInfo.MetadataEntry")
	proto.RegisterType((*CloudBackupEnumerateRequest)(nil), "openstorage.api.CloudBackupEnumerateRequest")
	proto.RegisterType((*CloudBackupEnumerateResponse)(nil), "openstorage.api.CloudBackupEnumerateResponse")
	proto.RegisterType((*CloudBackupDeleteRequest)(nil), "openstorage.api.CloudBackupDeleteRequest")
	proto.RegisterType((*CloudBackupDeleteAllRequest)(nil), "openstorage.api.CloudBackupDeleteAllRequest")
	proto.RegisterType((*CloudBackupStatusRequest)(nil), "openstorage.api.CloudBackupStatusRequest")
	proto.RegisterType((*CloudBackupStatus)(nil), "openstorage.api.CloudBackupStatus")
	proto.RegisterType((*CloudBackupStatusResponse)(nil), "openstorage.api.CloudBackupStatusResponse")
	proto.RegisterMapType((map[string]*CloudBackupStatus)(nil), "openstorage.api.CloudBackupStatusResponse.StatusesEntry")
	proto.RegisterType((*CloudBackupCatalogRequest)(nil), "openstorage.api.CloudBackupCatalogRequest")
	proto.RegisterType((*CloudBackupCatalogResponse)(nil), "openstorage.api.CloudBackupCatalogResponse")
	proto.RegisterType((*CloudBackupHistoryRequest)(nil), "openstorage.api.CloudBackupHistoryRequest")
	proto.RegisterType((*CloudBackupHistoryItem)(nil), "openstorage.api.CloudBackupHistoryItem")
	proto.RegisterType((*CloudBackupHistoryResponse)(nil), "openstorage.api.CloudBackupHistoryResponse")
	proto.RegisterType((*CloudBackupStateChangeRequest)(nil), "openstorage.api.CloudBackupStateChangeRequest")
	proto.RegisterType((*CloudBackupScheduleInfo)(nil), "openstorage.api.CloudBackupScheduleInfo")
	proto.RegisterType((*CloudBackupSchedCreateRequest)(nil), "openstorage.api.CloudBackupSchedCreateRequest")
	proto.RegisterType((*CloudBackupSchedCreateResponse)(nil), "openstorage.api.CloudBackupSchedCreateResponse")
	proto.RegisterType((*CloudBackupSchedDeleteRequest)(nil), "openstorage.api.CloudBackupSchedDeleteRequest")
	proto.RegisterType((*CloudBackupSchedEnumerateResponse)(nil), "openstorage.api.CloudBackupSchedEnumerateResponse")
	proto.RegisterMapType((map[string]*CloudBackupScheduleInfo)(nil), "openstorage.api.CloudBackupSchedEnumerateResponse.SchedulesEntry")
	proto.RegisterEnum("openstorage.api.Status", Status_name, Status_value)
	proto.RegisterEnum("openstorage.api.DriverType", DriverType_name, DriverType_value)
	proto.RegisterEnum("openstorage.api.FSType", FSType_name, FSType_value)
	proto.RegisterEnum("openstorage.api.GraphDriverChangeType", GraphDriverChangeType_name, GraphDriverChangeType_value)
	proto.RegisterEnum("openstorage.api.SeverityType", SeverityType_name, SeverityType_value)
	proto.RegisterEnum("openstorage.api.ResourceType", ResourceType_name, ResourceType_value)
	proto.RegisterEnum("openstorage.api.AlertActionType", AlertActionType_name, AlertActionType_value)
	proto.RegisterEnum("openstorage.api.VolumeActionParam", VolumeActionParam_name, VolumeActionParam_value)
	proto.RegisterEnum("openstorage.api.CosType", CosType_name, CosType_value)
	proto.RegisterEnum("openstorage.api.IoProfile", IoProfile_name, IoProfile_value)
	proto.RegisterEnum("openstorage.api.VolumeState", VolumeState_name, VolumeState_value)
	proto.RegisterEnum("openstorage.api.VolumeStatus", VolumeStatus_name, VolumeStatus_value)
	proto.RegisterEnum("openstorage.api.StorageMedium", StorageMedium_name, StorageMedium_value)
	proto.RegisterEnum("openstorage.api.ClusterNotify", ClusterNotify_name, ClusterNotify_value)
	proto.RegisterEnum("openstorage.api.AttachState", AttachState_name, AttachState_value)
	proto.RegisterEnum("openstorage.api.OperationFlags", OperationFlags_name, OperationFlags_value)
	proto.RegisterEnum("openstorage.api.CloudBackupOpType", CloudBackupOpType_name, CloudBackupOpType_value)
	proto.RegisterEnum("openstorage.api.CloudBackupStatusType", CloudBackupStatusType_name, CloudBackupStatusType_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for OpenStorageCluster service

type OpenStorageClusterClient interface {
	// Enumerate lists all the nodes in the cluster.
	Enumerate(ctx context.Context, in *ClusterEnumerateRequest, opts ...grpc.CallOption) (*ClusterEnumerateResponse, error)
	// Inspect the node given a UUID.
	Inspect(ctx context.Context, in *ClusterInspectRequest, opts ...grpc.CallOption) (*ClusterInspectResponse, error)
	// Get a list of alerts from the storage cluster
	AlertEnumerate(ctx context.Context, in *ClusterAlertEnumerateRequest, opts ...grpc.CallOption) (*ClusterAlertEnumerateResponse, error)
	// Clear the alert for a given resource
	AlertClear(ctx context.Context, in *ClusterAlertClearRequest, opts ...grpc.CallOption) (*ClusterAlertClearResponse, error)
	// Erases an alert for a given resource
	AlertErase(ctx context.Context, in *ClusterAlertEraseRequest, opts ...grpc.CallOption) (*ClusterAlertEraseResponse, error)
}

type openStorageClusterClient struct {
	cc *grpc.ClientConn
}

func NewOpenStorageClusterClient(cc *grpc.ClientConn) OpenStorageClusterClient {
	return &openStorageClusterClient{cc}
}

func (c *openStorageClusterClient) Enumerate(ctx context.Context, in *ClusterEnumerateRequest, opts ...grpc.CallOption) (*ClusterEnumerateResponse, error) {
	out := new(ClusterEnumerateResponse)
	err := grpc.Invoke(ctx, "/openstorage.api.OpenStorageCluster/Enumerate", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *openStorageClusterClient) Inspect(ctx context.Context, in *ClusterInspectRequest, opts ...grpc.CallOption) (*ClusterInspectResponse, error) {
	out := new(ClusterInspectResponse)
	err := grpc.Invoke(ctx, "/openstorage.api.OpenStorageCluster/Inspect", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *openStorageClusterClient) AlertEnumerate(ctx context.Context, in *ClusterAlertEnumerateRequest, opts ...grpc.CallOption) (*ClusterAlertEnumerateResponse, error) {
	out := new(ClusterAlertEnumerateResponse)
	err := grpc.Invoke(ctx, "/openstorage.api.OpenStorageCluster/AlertEnumerate", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *openStorageClusterClient) AlertClear(ctx context.Context, in *ClusterAlertClearRequest, opts ...grpc.CallOption) (*ClusterAlertClearResponse, error) {
	out := new(ClusterAlertClearResponse)
	err := grpc.Invoke(ctx, "/openstorage.api.OpenStorageCluster/AlertClear", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *openStorageClusterClient) AlertErase(ctx context.Context, in *ClusterAlertEraseRequest, opts ...grpc.CallOption) (*ClusterAlertEraseResponse, error) {
	out := new(ClusterAlertEraseResponse)
	err := grpc.Invoke(ctx, "/openstorage.api.OpenStorageCluster/AlertErase", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for OpenStorageCluster service

type OpenStorageClusterServer interface {
	// Enumerate lists all the nodes in the cluster.
	Enumerate(context.Context, *ClusterEnumerateRequest) (*ClusterEnumerateResponse, error)
	// Inspect the node given a UUID.
	Inspect(context.Context, *ClusterInspectRequest) (*ClusterInspectResponse, error)
	// Get a list of alerts from the storage cluster
	AlertEnumerate(context.Context, *ClusterAlertEnumerateRequest) (*ClusterAlertEnumerateResponse, error)
	// Clear the alert for a given resource
	AlertClear(context.Context, *ClusterAlertClearRequest) (*ClusterAlertClearResponse, error)
	// Erases an alert for a given resource
	AlertErase(context.Context, *ClusterAlertEraseRequest) (*ClusterAlertEraseResponse, error)
}

func RegisterOpenStorageClusterServer(s *grpc.Server, srv OpenStorageClusterServer) {
	s.RegisterService(&_OpenStorageCluster_serviceDesc, srv)
}

func _OpenStorageCluster_Enumerate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ClusterEnumerateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OpenStorageClusterServer).Enumerate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openstorage.api.OpenStorageCluster/Enumerate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OpenStorageClusterServer).Enumerate(ctx, req.(*ClusterEnumerateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OpenStorageCluster_Inspect_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ClusterInspectRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OpenStorageClusterServer).Inspect(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openstorage.api.OpenStorageCluster/Inspect",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OpenStorageClusterServer).Inspect(ctx, req.(*ClusterInspectRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OpenStorageCluster_AlertEnumerate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ClusterAlertEnumerateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OpenStorageClusterServer).AlertEnumerate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openstorage.api.OpenStorageCluster/AlertEnumerate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OpenStorageClusterServer).AlertEnumerate(ctx, req.(*ClusterAlertEnumerateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OpenStorageCluster_AlertClear_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ClusterAlertClearRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OpenStorageClusterServer).AlertClear(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openstorage.api.OpenStorageCluster/AlertClear",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OpenStorageClusterServer).AlertClear(ctx, req.(*ClusterAlertClearRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OpenStorageCluster_AlertErase_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ClusterAlertEraseRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OpenStorageClusterServer).AlertErase(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openstorage.api.OpenStorageCluster/AlertErase",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OpenStorageClusterServer).AlertErase(ctx, req.(*ClusterAlertEraseRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _OpenStorageCluster_serviceDesc = grpc.ServiceDesc{
	ServiceName: "openstorage.api.OpenStorageCluster",
	HandlerType: (*OpenStorageClusterServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Enumerate",
			Handler:    _OpenStorageCluster_Enumerate_Handler,
		},
		{
			MethodName: "Inspect",
			Handler:    _OpenStorageCluster_Inspect_Handler,
		},
		{
			MethodName: "AlertEnumerate",
			Handler:    _OpenStorageCluster_AlertEnumerate_Handler,
		},
		{
			MethodName: "AlertClear",
			Handler:    _OpenStorageCluster_AlertClear_Handler,
		},
		{
			MethodName: "AlertErase",
			Handler:    _OpenStorageCluster_AlertErase_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api/api.proto",
}

// Client API for OpenStorageVolume service

type OpenStorageVolumeClient interface {
	// Creates a new volume
	Create(ctx context.Context, in *OpenStorageVolumeCreateRequest, opts ...grpc.CallOption) (*OpenStorageVolumeCreateResponse, error)
	// CreateFromVolumeID creates a new volume cloned from an existing volume
	CreateFromVolumeID(ctx context.Context, in *VolumeCreateFromVolumeIDRequest, opts ...grpc.CallOption) (*VolumeCreateFromVolumeIDResponse, error)
	// Delete a volume
	Delete(ctx context.Context, in *VolumeDeleteRequest, opts ...grpc.CallOption) (*VolumeDeleteResponse, error)
	// Get information on a volume
	Inspect(ctx context.Context, in *VolumeInspectRequest, opts ...grpc.CallOption) (*VolumeInspectResponse, error)
	// Get a list of volumes
	Enumerate(ctx context.Context, in *VolumeEnumerateRequest, opts ...grpc.CallOption) (*VolumeEnumerateResponse, error)
	// Create a snapshot of a volume. This creates an immutable (read-only),
	// point-in-time snapshot of a volume.
	SnapshotCreate(ctx context.Context, in *VolumeSnapshotCreateRequest, opts ...grpc.CallOption) (*VolumeSnapshotCreateResponse, error)
	// Restores a volume to a specified snapshot
	SnapshotRestore(ctx context.Context, in *VolumeSnapshotRestoreRequest, opts ...grpc.CallOption) (*VolumeSnapshotRestoreResponse, error)
	// List the number of snapshots for a specific volume
	SnapshotEnumerate(ctx context.Context, in *VolumeSnapshotEnumerateRequest, opts ...grpc.CallOption) (*VolumeSnapshotEnumerateResponse, error)
	// Attach device to host
	Attach(ctx context.Context, in *VolumeAttachRequest, opts ...grpc.CallOption) (*VolumeAttachResponse, error)
	// Detaches the volume from the node.
	Detach(ctx context.Context, in *VolumeDetachRequest, opts ...grpc.CallOption) (*VolumeDetachResponse, error)
	// Attaches the volume to a node.
	Mount(ctx context.Context, in *VolumeMountRequest, opts ...grpc.CallOption) (*VolumeMountResponse, error)
	// Unmount volume at specified path
	Unmount(ctx context.Context, in *VolumeUnmountRequest, opts ...grpc.CallOption) (*VolumeUnmountResponse, error)
}

type openStorageVolumeClient struct {
	cc *grpc.ClientConn
}

func NewOpenStorageVolumeClient(cc *grpc.ClientConn) OpenStorageVolumeClient {
	return &openStorageVolumeClient{cc}
}

func (c *openStorageVolumeClient) Create(ctx context.Context, in *OpenStorageVolumeCreateRequest, opts ...grpc.CallOption) (*OpenStorageVolumeCreateResponse, error) {
	out := new(OpenStorageVolumeCreateResponse)
	err := grpc.Invoke(ctx, "/openstorage.api.OpenStorageVolume/Create", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *openStorageVolumeClient) CreateFromVolumeID(ctx context.Context, in *VolumeCreateFromVolumeIDRequest, opts ...grpc.CallOption) (*VolumeCreateFromVolumeIDResponse, error) {
	out := new(VolumeCreateFromVolumeIDResponse)
	err := grpc.Invoke(ctx, "/openstorage.api.OpenStorageVolume/CreateFromVolumeID", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *openStorageVolumeClient) Delete(ctx context.Context, in *VolumeDeleteRequest, opts ...grpc.CallOption) (*VolumeDeleteResponse, error) {
	out := new(VolumeDeleteResponse)
	err := grpc.Invoke(ctx, "/openstorage.api.OpenStorageVolume/Delete", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *openStorageVolumeClient) Inspect(ctx context.Context, in *VolumeInspectRequest, opts ...grpc.CallOption) (*VolumeInspectResponse, error) {
	out := new(VolumeInspectResponse)
	err := grpc.Invoke(ctx, "/openstorage.api.OpenStorageVolume/Inspect", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *openStorageVolumeClient) Enumerate(ctx context.Context, in *VolumeEnumerateRequest, opts ...grpc.CallOption) (*VolumeEnumerateResponse, error) {
	out := new(VolumeEnumerateResponse)
	err := grpc.Invoke(ctx, "/openstorage.api.OpenStorageVolume/Enumerate", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *openStorageVolumeClient) SnapshotCreate(ctx context.Context, in *VolumeSnapshotCreateRequest, opts ...grpc.CallOption) (*VolumeSnapshotCreateResponse, error) {
	out := new(VolumeSnapshotCreateResponse)
	err := grpc.Invoke(ctx, "/openstorage.api.OpenStorageVolume/SnapshotCreate", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *openStorageVolumeClient) SnapshotRestore(ctx context.Context, in *VolumeSnapshotRestoreRequest, opts ...grpc.CallOption) (*VolumeSnapshotRestoreResponse, error) {
	out := new(VolumeSnapshotRestoreResponse)
	err := grpc.Invoke(ctx, "/openstorage.api.OpenStorageVolume/SnapshotRestore", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *openStorageVolumeClient) SnapshotEnumerate(ctx context.Context, in *VolumeSnapshotEnumerateRequest, opts ...grpc.CallOption) (*VolumeSnapshotEnumerateResponse, error) {
	out := new(VolumeSnapshotEnumerateResponse)
	err := grpc.Invoke(ctx, "/openstorage.api.OpenStorageVolume/SnapshotEnumerate", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *openStorageVolumeClient) Attach(ctx context.Context, in *VolumeAttachRequest, opts ...grpc.CallOption) (*VolumeAttachResponse, error) {
	out := new(VolumeAttachResponse)
	err := grpc.Invoke(ctx, "/openstorage.api.OpenStorageVolume/Attach", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *openStorageVolumeClient) Detach(ctx context.Context, in *VolumeDetachRequest, opts ...grpc.CallOption) (*VolumeDetachResponse, error) {
	out := new(VolumeDetachResponse)
	err := grpc.Invoke(ctx, "/openstorage.api.OpenStorageVolume/Detach", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *openStorageVolumeClient) Mount(ctx context.Context, in *VolumeMountRequest, opts ...grpc.CallOption) (*VolumeMountResponse, error) {
	out := new(VolumeMountResponse)
	err := grpc.Invoke(ctx, "/openstorage.api.OpenStorageVolume/Mount", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *openStorageVolumeClient) Unmount(ctx context.Context, in *VolumeUnmountRequest, opts ...grpc.CallOption) (*VolumeUnmountResponse, error) {
	out := new(VolumeUnmountResponse)
	err := grpc.Invoke(ctx, "/openstorage.api.OpenStorageVolume/Unmount", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for OpenStorageVolume service

type OpenStorageVolumeServer interface {
	// Creates a new volume
	Create(context.Context, *OpenStorageVolumeCreateRequest) (*OpenStorageVolumeCreateResponse, error)
	// CreateFromVolumeID creates a new volume cloned from an existing volume
	CreateFromVolumeID(context.Context, *VolumeCreateFromVolumeIDRequest) (*VolumeCreateFromVolumeIDResponse, error)
	// Delete a volume
	Delete(context.Context, *VolumeDeleteRequest) (*VolumeDeleteResponse, error)
	// Get information on a volume
	Inspect(context.Context, *VolumeInspectRequest) (*VolumeInspectResponse, error)
	// Get a list of volumes
	Enumerate(context.Context, *VolumeEnumerateRequest) (*VolumeEnumerateResponse, error)
	// Create a snapshot of a volume. This creates an immutable (read-only),
	// point-in-time snapshot of a volume.
	SnapshotCreate(context.Context, *VolumeSnapshotCreateRequest) (*VolumeSnapshotCreateResponse, error)
	// Restores a volume to a specified snapshot
	SnapshotRestore(context.Context, *VolumeSnapshotRestoreRequest) (*VolumeSnapshotRestoreResponse, error)
	// List the number of snapshots for a specific volume
	SnapshotEnumerate(context.Context, *VolumeSnapshotEnumerateRequest) (*VolumeSnapshotEnumerateResponse, error)
	// Attach device to host
	Attach(context.Context, *VolumeAttachRequest) (*VolumeAttachResponse, error)
	// Detaches the volume from the node.
	Detach(context.Context, *VolumeDetachRequest) (*VolumeDetachResponse, error)
	// Attaches the volume to a node.
	Mount(context.Context, *VolumeMountRequest) (*VolumeMountResponse, error)
	// Unmount volume at specified path
	Unmount(context.Context, *VolumeUnmountRequest) (*VolumeUnmountResponse, error)
}

func RegisterOpenStorageVolumeServer(s *grpc.Server, srv OpenStorageVolumeServer) {
	s.RegisterService(&_OpenStorageVolume_serviceDesc, srv)
}

func _OpenStorageVolume_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OpenStorageVolumeCreateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OpenStorageVolumeServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openstorage.api.OpenStorageVolume/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OpenStorageVolumeServer).Create(ctx, req.(*OpenStorageVolumeCreateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OpenStorageVolume_CreateFromVolumeID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VolumeCreateFromVolumeIDRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OpenStorageVolumeServer).CreateFromVolumeID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openstorage.api.OpenStorageVolume/CreateFromVolumeID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OpenStorageVolumeServer).CreateFromVolumeID(ctx, req.(*VolumeCreateFromVolumeIDRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OpenStorageVolume_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VolumeDeleteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OpenStorageVolumeServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openstorage.api.OpenStorageVolume/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OpenStorageVolumeServer).Delete(ctx, req.(*VolumeDeleteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OpenStorageVolume_Inspect_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VolumeInspectRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OpenStorageVolumeServer).Inspect(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openstorage.api.OpenStorageVolume/Inspect",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OpenStorageVolumeServer).Inspect(ctx, req.(*VolumeInspectRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OpenStorageVolume_Enumerate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VolumeEnumerateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OpenStorageVolumeServer).Enumerate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openstorage.api.OpenStorageVolume/Enumerate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OpenStorageVolumeServer).Enumerate(ctx, req.(*VolumeEnumerateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OpenStorageVolume_SnapshotCreate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VolumeSnapshotCreateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OpenStorageVolumeServer).SnapshotCreate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openstorage.api.OpenStorageVolume/SnapshotCreate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OpenStorageVolumeServer).SnapshotCreate(ctx, req.(*VolumeSnapshotCreateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OpenStorageVolume_SnapshotRestore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VolumeSnapshotRestoreRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OpenStorageVolumeServer).SnapshotRestore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openstorage.api.OpenStorageVolume/SnapshotRestore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OpenStorageVolumeServer).SnapshotRestore(ctx, req.(*VolumeSnapshotRestoreRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OpenStorageVolume_SnapshotEnumerate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VolumeSnapshotEnumerateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OpenStorageVolumeServer).SnapshotEnumerate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openstorage.api.OpenStorageVolume/SnapshotEnumerate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OpenStorageVolumeServer).SnapshotEnumerate(ctx, req.(*VolumeSnapshotEnumerateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OpenStorageVolume_Attach_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VolumeAttachRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OpenStorageVolumeServer).Attach(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openstorage.api.OpenStorageVolume/Attach",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OpenStorageVolumeServer).Attach(ctx, req.(*VolumeAttachRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OpenStorageVolume_Detach_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VolumeDetachRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OpenStorageVolumeServer).Detach(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openstorage.api.OpenStorageVolume/Detach",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OpenStorageVolumeServer).Detach(ctx, req.(*VolumeDetachRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OpenStorageVolume_Mount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VolumeMountRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OpenStorageVolumeServer).Mount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openstorage.api.OpenStorageVolume/Mount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OpenStorageVolumeServer).Mount(ctx, req.(*VolumeMountRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OpenStorageVolume_Unmount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VolumeUnmountRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OpenStorageVolumeServer).Unmount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openstorage.api.OpenStorageVolume/Unmount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OpenStorageVolumeServer).Unmount(ctx, req.(*VolumeUnmountRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _OpenStorageVolume_serviceDesc = grpc.ServiceDesc{
	ServiceName: "openstorage.api.OpenStorageVolume",
	HandlerType: (*OpenStorageVolumeServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _OpenStorageVolume_Create_Handler,
		},
		{
			MethodName: "CreateFromVolumeID",
			Handler:    _OpenStorageVolume_CreateFromVolumeID_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _OpenStorageVolume_Delete_Handler,
		},
		{
			MethodName: "Inspect",
			Handler:    _OpenStorageVolume_Inspect_Handler,
		},
		{
			MethodName: "Enumerate",
			Handler:    _OpenStorageVolume_Enumerate_Handler,
		},
		{
			MethodName: "SnapshotCreate",
			Handler:    _OpenStorageVolume_SnapshotCreate_Handler,
		},
		{
			MethodName: "SnapshotRestore",
			Handler:    _OpenStorageVolume_SnapshotRestore_Handler,
		},
		{
			MethodName: "SnapshotEnumerate",
			Handler:    _OpenStorageVolume_SnapshotEnumerate_Handler,
		},
		{
			MethodName: "Attach",
			Handler:    _OpenStorageVolume_Attach_Handler,
		},
		{
			MethodName: "Detach",
			Handler:    _OpenStorageVolume_Detach_Handler,
		},
		{
			MethodName: "Mount",
			Handler:    _OpenStorageVolume_Mount_Handler,
		},
		{
			MethodName: "Unmount",
			Handler:    _OpenStorageVolume_Unmount_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api/api.proto",
}

func init() { proto.RegisterFile("api/api.proto", fileDescriptor_api_1e0f7a7c36ab7fa4) }

var fileDescriptor_api_1e0f7a7c36ab7fa4 = []byte{
	// 5508 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x3b, 0x4b, 0x6c, 0x1b, 0x49,
	0x76, 0xd3, 0xa4, 0xf8, 0x7b, 0xfa, 0xb5, 0xda, 0xb6, 0x44, 0xd3, 0xb2, 0xa5, 0xed, 0x9d, 0xb1,
	0x35, 0xca, 0x8c, 0xe4, 0xd1, 0xfc, 0x6c, 0x4f, 0x76, 0x26, 0x34, 0xd9, 0xb2, 0x68, 0x53, 0xa4,
	0xb6, 0x49, 0xd9, 0x33, 0x93, 0x04, 0x8d, 0x36, 0x59, 0x96, 0x38, 0x26, 0xbb, 0xdb, 0xdd, 0x4d,
	0xcd, 0x6a, 0x0e, 0x09, 0xb0, 0x39, 0x2c, 0x02, 0x24, 0x9b, 0x43, 0xbe, 0x83, 0x60, 0x93, 0x00,
	0x39, 0x05, 0x8b, 0x00, 0xc9, 0x79, 0x0f, 0x39, 0xe4, 0x90, 0x04, 0xc9, 0xe6, 0x90, 0x3d, 0x24,
	0x87, 0xdc, 0x12, 0x04, 0x08, 0xb0, 0xc8, 0x3d, 0xb7, 0xa0, 0x5e, 0x55, 0x37, 0xfb, 0x47, 0x8a,
	0xcc, 0x78, 0x92, 0xbd, 0x48, 0x5d, 0xef, 0xbd, 0x7a, 0xf5, 0xea, 0xd5, 0xfb, 0xd5, 0x87, 0xb0,
	0xa8, 0x5b, 0xbd, 0x5d, 0xdd, 0xea, 0xed, 0x58, 0xb6, 0xe9, 0x9a, 0xd2, 0xb2, 0x69, 0x11, 0xc3,
	0x71, 0x4d, 0x5b, 0x3f, 0x21, 0x3b, 0xba, 0xd5, 0x2b, 0x6d, 0x9c, 0x98, 0xe6, 0x49, 0x9f, 0xec,
	0x22, 0xfa, 0xe9, 0xf0, 0xd9, 0xae, 0xdb, 0x1b, 0x10, 0xc7, 0xd5, 0x07, 0x16, 0xeb, 0x51, 0x5a,
	0xe7, 0x04, 0xc8, 0xc7, 0x30, 0x4c, 0x57, 0x77, 0x7b, 0xa6, 0xe1, 0x30, 0xac, 0xfc, 0x9b, 0x69,
	0x58, 0x6e, 0x31, 0x76, 0x2a, 0x71, 0xcc, 0xa1, 0xdd, 0x21, 0xd2, 0x12, 0xa4, 0x7a, 0xdd, 0xa2,
	0xb0, 0x29, 0x6c, 0x15, 0xd4, 0x54, 0xaf, 0x2b, 0x49, 0x30, 0x67, 0xe9, 0xee, 0x69, 0x31, 0x85,
	0x10, 0xfc, 0x96, 0xde, 0x83, 0xec, 0x80, 0x74, 0x7b, 0xc3, 0x41, 0x31, 0xbd, 0x29, 0x6c, 0x2d,
	0xed, 0xdd, 0xd8, 0x89, 0x08, 0xb6, 0xc3, 0xb9, 0x1e, 0x22, 0x95, 0xca, 0xa9, 0xa5, 0x55, 0xc8,
	0x9a, 0x46, 0xbf, 0x67, 0x90, 0xe2, 0xdc, 0xa6, 0xb0, 0x95, 0x57, 0x79, 0x8b, 0x8e, 0xd1, 0x33,
	0x2d, 0xa7, 0x98, 0xd9, 0x14, 0xb6, 0xe6, 0x54, 0xfc, 0x96, 0xae, 0x41, 0xc1, 0x21, 0x2f, 0xb4,
	0xcf, 0xed, 0x9e, 0x4b, 0x8a, 0xd9, 0x4d, 0x61, 0x4b, 0x50, 0xf3, 0x0e, 0x79, 0xf1, 0x84, 0xb6,
	0xa5, 0xab, 0x40, 0xbf, 0x35, 0x9b, 0xe8, 0xdd, 0x62, 0x0e, 0x71, 0x39, 0x87, 0xbc, 0x50, 0x89,
	0xde, 0xa5, 0x63, 0xd8, 0xba, 0xd1, 0x55, 0x9f, 0x14, 0xf3, 0x88, 0xe0, 0x2d, 0x3a, 0x86, 0xd3,
	0xfb, 0x82, 0x14, 0x0b, 0x6c, 0x0c, 0xfa, 0x4d, 0x61, 0x43, 0x87, 0x74, 0x8b, 0xc0, 0x60, 0xf4,
	0x5b, 0x7a, 0x0d, 0x96, 0x6c, 0xae, 0x26, 0xcd, 0xb1, 0x08, 0xe9, 0x16, 0xe7, 0x71, 0xe6, 0x8b,
	0x1e, 0xb4, 0x45, 0x81, 0xd2, 0xfb, 0x50, 0xe8, 0xeb, 0x8e, 0xab, 0x39, 0x1d, 0xdd, 0x28, 0x2e,
	0x6c, 0x0a, 0x5b, 0xf3, 0x7b, 0xa5, 0x1d, 0xa6, 0xec, 0x1d, 0x6f, 0x35, 0x76, 0xda, 0xde, 0x6a,
	0xa8, 0x79, 0x4a, 0xdc, 0xea, 0xe8, 0x86, 0x54, 0x82, 0xfc, 0x80, 0xb8, 0x7a, 0x57, 0x77, 0xf5,
	0xe2, 0x22, 0x6a, 0xc1, 0x6f, 0xcb, 0xff, 0x98, 0x82, 0x79, 0xae, 0xb9, 0x23, 0xd3, 0xec, 0xd3,
	0xb5, 0xa8, 0x55, 0x71, 0x2d, 0x32, 0x6a, 0xaa, 0x56, 0x95, 0xb6, 0x21, 0x5d, 0x31, 0x1d, 0x5c,
	0x8a, 0xa5, 0xbd, 0x62, 0x4c, 0xe9, 0x15, 0xd3, 0x69, 0x9f, 0x5b, 0x44, 0xa5, 0x44, 0x74, 0x8d,
	0x0e, 0x67, 0x5a, 0x23, 0xf6, 0x5f, 0x5a, 0x87, 0x82, 0xaa, 0xf7, 0xba, 0x75, 0x72, 0x46, 0xfa,
	0xb8, 0x4c, 0x05, 0x75, 0x04, 0xa0, 0xd8, 0xb6, 0xe9, 0xea, 0xfd, 0x16, 0x55, 0x65, 0x0e, 0xd5,
	0x36, 0x02, 0x50, 0x7d, 0x1e, 0x53, 0x7d, 0xe6, 0x99, 0x3e, 0xe9, 0xb7, 0xf4, 0x0b, 0x90, 0xed,
	0xeb, 0x4f, 0x49, 0xdf, 0x29, 0x16, 0x36, 0xd3, 0x5b, 0xf3, 0x7b, 0x5b, 0xe3, 0xe4, 0xa0, 0x33,
	0xde, 0xa9, 0x23, 0xa9, 0x62, 0xb8, 0xf6, 0xb9, 0xca, 0xfb, 0x95, 0xee, 0xc2, 0x7c, 0x00, 0x2c,
	0x89, 0x90, 0x7e, 0x4e, 0xce, 0xb9, 0x85, 0xd2, 0x4f, 0xe9, 0x32, 0x64, 0xce, 0xf4, 0xfe, 0x90,
	0x70, 0x1b, 0x65, 0x8d, 0x7b, 0xa9, 0x3b, 0x82, 0xfc, 0x23, 0x01, 0x16, 0x1f, 0x9b, 0xfd, 0xe1,
	0x80, 0xd4, 0xcd, 0x8e, 0xee, 0x9a, 0x36, 0x15, 0xd1, 0xd0, 0x07, 0x84, 0x77, 0xc7, 0x6f, 0xe9,
	0x18, 0x16, 0xcf, 0x90, 0x48, 0xe3, 0x92, 0xa6, 0x50, 0xd2, 0xdb, 0x31, 0x49, 0x43, 0xac, 0xbc,
	0x56, 0x40, 0xe2, 0x85, 0xb3, 0x00, 0xa8, 0xf4, 0x11, 0xac, 0xc4, 0x48, 0x66, 0x92, 0xfe, 0x1d,
	0xc8, 0xb6, 0x98, 0x53, 0xae, 0x42, 0xd6, 0xd2, 0x6d, 0x62, 0xb8, 0xbc, 0x23, 0x6f, 0xa1, 0x51,
	0x53, 0x13, 0xe5, 0xce, 0x49, 0xbf, 0xe5, 0x35, 0xc8, 0x3c, 0xb0, 0xcd, 0xa1, 0x15, 0xf5, 0x64,
	0xf9, 0xc7, 0x39, 0x00, 0x26, 0x50, 0xcb, 0x22, 0x1d, 0xba, 0x94, 0xc4, 0x3a, 0x25, 0x03, 0x62,
	0xeb, 0x7d, 0xa4, 0xca, 0xab, 0x23, 0x80, 0xef, 0x2e, 0xa9, 0x80, 0xbb, 0xec, 0x42, 0xf6, 0x99,
	0x69, 0x0f, 0x74, 0x97, 0x9b, 0xd4, 0x5a, 0x4c, 0x41, 0xfb, 0x2d, 0x34, 0x40, 0x4e, 0x26, 0x5d,
	0x07, 0x78, 0xda, 0x37, 0x3b, 0xcf, 0x35, 0x64, 0x45, 0x8d, 0x29, 0xad, 0x16, 0x10, 0x82, 0xe6,
	0x72, 0x15, 0xf2, 0xa7, 0xba, 0xd6, 0x47, 0x4b, 0xcb, 0x20, 0x32, 0x77, 0xaa, 0x33, 0x3b, 0xdb,
	0x86, 0x74, 0xc7, 0x74, 0xd0, 0xef, 0x27, 0x5a, 0x7a, 0xc7, 0x74, 0xa4, 0xbb, 0x00, 0x3d, 0x53,
	0xb3, 0x6c, 0xf3, 0x59, 0xaf, 0xcf, 0x8c, 0x72, 0x69, 0xaf, 0x14, 0xeb, 0x52, 0x33, 0x8f, 0x18,
	0x85, 0x5a, 0xe8, 0x79, 0x9f, 0x54, 0xaf, 0x5d, 0xd2, 0x1d, 0x5a, 0x04, 0x4d, 0x36, 0xaf, 0xf2,
	0x96, 0xf4, 0x73, 0xb0, 0xe2, 0x18, 0xba, 0xe5, 0x9c, 0x9a, 0xae, 0xd6, 0x33, 0x5c, 0x62, 0x9f,
	0xe9, 0x7d, 0x8c, 0x1c, 0x8b, 0xaa, 0xe8, 0x21, 0x6a, 0x1c, 0x2e, 0xa9, 0x51, 0xf3, 0x01, 0x34,
	0x9f, 0x37, 0xc7, 0x98, 0x0f, 0x55, 0xfe, 0x45, 0xb6, 0x43, 0x05, 0x73, 0x4e, 0x75, 0x9b, 0x47,
	0x9f, 0xbc, 0xca, 0x5b, 0xd2, 0xcf, 0xc3, 0xbc, 0x4d, 0xac, 0x7e, 0xaf, 0xa3, 0x6b, 0x0e, 0x71,
	0x79, 0xe0, 0xb9, 0x16, 0x1b, 0x49, 0x65, 0x34, 0x2d, 0xe2, 0xaa, 0x60, 0xfb, 0xdf, 0x74, 0x5a,
	0xfa, 0xc9, 0x89, 0x4d, 0x4e, 0x58, 0x78, 0x63, 0x9a, 0x5f, 0x64, 0xd3, 0x0a, 0x20, 0x7c, 0x57,
	0x27, 0x46, 0xc7, 0x3e, 0xb7, 0x5c, 0xd2, 0x2d, 0x2e, 0x71, 0xfb, 0xf0, 0x00, 0xd2, 0x0d, 0x00,
	0x4b, 0x77, 0x1c, 0xeb, 0xd4, 0xd6, 0x1d, 0x52, 0x5c, 0x46, 0x23, 0x0b, 0x40, 0x42, 0x1a, 0x74,
	0x3a, 0xa7, 0xa4, 0x3b, 0xec, 0x93, 0xa2, 0x88, 0x64, 0xbe, 0x06, 0x5b, 0x1c, 0x4e, 0x5d, 0xc0,
	0xe9, 0xe8, 0x7d, 0x52, 0x5c, 0x41, 0x59, 0x58, 0x03, 0x75, 0xe0, 0xf6, 0x3a, 0xcf, 0xcf, 0x8b,
	0x12, 0xd7, 0x01, 0xb6, 0xa4, 0x37, 0x20, 0x73, 0x42, 0x0d, 0xbc, 0x78, 0x05, 0x67, 0xbf, 0x1a,
	0x9b, 0x3d, 0x9a, 0xbf, 0xca, 0x88, 0x68, 0x3c, 0xc7, 0x0f, 0x8d, 0x18, 0xcf, 0x4c, 0xbb, 0x43,
	0xba, 0xc5, 0x55, 0xe4, 0xb6, 0x88, 0x50, 0x85, 0x03, 0xe9, 0x7c, 0x3a, 0xe6, 0xc0, 0xb2, 0x89,
	0x43, 0x03, 0xd8, 0x1a, 0x92, 0x04, 0x20, 0x34, 0x6c, 0x77, 0x74, 0xa7, 0xa3, 0x77, 0x49, 0xb7,
	0x58, 0x64, 0x61, 0xdb, 0x6b, 0x4b, 0x45, 0xc8, 0x7d, 0x66, 0x0e, 0x6d, 0x43, 0xef, 0x17, 0xaf,
	0x22, 0xca, 0x6b, 0xd2, 0x5e, 0x6c, 0xe1, 0xce, 0xde, 0x29, 0x96, 0x58, 0x2f, 0xaf, 0xfd, 0xd5,
	0xc3, 0x83, 0x0c, 0x30, 0x5a, 0x67, 0x4a, 0x67, 0x98, 0x5d, 0xe2, 0x14, 0x85, 0xcd, 0x34, 0xa5,
	0xc3, 0x86, 0xfc, 0x43, 0x01, 0x96, 0xd5, 0xa1, 0x41, 0xcb, 0x82, 0x96, 0xab, 0xbb, 0xe4, 0x50,
	0xb7, 0xa4, 0x27, 0xb0, 0x68, 0x33, 0x90, 0xe6, 0x50, 0x18, 0xf6, 0x98, 0xdf, 0xdb, 0x8b, 0x5b,
	0x51, 0xb8, 0x63, 0xa8, 0xcd, 0x8d, 0xd6, 0x0e, 0x80, 0xe8, 0x8c, 0x62, 0x24, 0x33, 0xcd, 0xe8,
	0xdf, 0xf2, 0x90, 0x65, 0x3a, 0x89, 0x95, 0x21, 0xbb, 0x90, 0x65, 0x05, 0x0a, 0xf6, 0x9a, 0x4f,
	0x88, 0x3d, 0x2c, 0x54, 0xaa, 0x9c, 0x6c, 0x64, 0x25, 0xe9, 0x69, 0xac, 0xa4, 0x04, 0x79, 0x5a,
	0x4c, 0x98, 0x46, 0xff, 0x9c, 0xd7, 0x26, 0x7e, 0x5b, 0xba, 0x03, 0xb9, 0x3e, 0x0b, 0xf9, 0x18,
	0xa5, 0xe6, 0x13, 0x52, 0x69, 0x28, 0x31, 0xa8, 0x1e, 0xb9, 0x74, 0x1b, 0x32, 0x1d, 0xaa, 0x0e,
	0x8c, 0x63, 0x93, 0x0b, 0x04, 0x46, 0x28, 0xed, 0xc2, 0x9c, 0x63, 0x91, 0x0e, 0x46, 0xb1, 0x24,
	0xc7, 0x1e, 0x85, 0x10, 0x15, 0x09, 0xa9, 0x32, 0x87, 0x8e, 0x7e, 0x42, 0x78, 0xce, 0x65, 0x8d,
	0x70, 0x75, 0x52, 0x98, 0xa1, 0x3a, 0x19, 0x85, 0x78, 0x98, 0x2e, 0xc4, 0xbf, 0x4b, 0x9d, 0x54,
	0x77, 0x87, 0x0e, 0x06, 0xaa, 0xa5, 0xbd, 0xeb, 0xe3, 0x44, 0x46, 0x22, 0x95, 0x13, 0x4b, 0x7b,
	0x90, 0x61, 0xb6, 0xb7, 0x80, 0xbd, 0xd6, 0x27, 0xf4, 0x22, 0x2a, 0x23, 0x95, 0x36, 0x60, 0x5e,
	0x77, 0x5d, 0x9d, 0x06, 0x0d, 0xcd, 0x34, 0x30, 0x6e, 0x15, 0x54, 0xf0, 0x40, 0x4d, 0x43, 0xaa,
	0xc0, 0x92, 0x4f, 0xc0, 0xb8, 0x2f, 0x8d, 0xe1, 0x5e, 0x46, 0x32, 0xc6, 0x7d, 0xd1, 0xeb, 0xd3,
	0xf2, 0x46, 0xe9, 0x92, 0xb3, 0x5e, 0x87, 0x68, 0x58, 0xf6, 0xf2, 0xc8, 0xc6, 0x40, 0x47, 0xb4,
	0xf8, 0x7d, 0x03, 0x24, 0x87, 0x74, 0x86, 0x36, 0xd1, 0x82, 0x74, 0x5e, 0x68, 0x43, 0x4c, 0x75,
	0x44, 0xed, 0x0b, 0xcd, 0xc8, 0x56, 0xd0, 0x39, 0xb9, 0xd0, 0x48, 0x70, 0xe0, 0x13, 0xf4, 0x8c,
	0x67, 0x66, 0x51, 0x42, 0x5f, 0xbc, 0x35, 0x46, 0x1f, 0x5c, 0xf0, 0x9a, 0xf1, 0xcc, 0x64, 0x0e,
	0xc8, 0x39, 0x51, 0x80, 0xf4, 0x21, 0x2c, 0x04, 0x72, 0x83, 0x53, 0xbc, 0x84, 0xac, 0x26, 0x26,
	0x87, 0xf9, 0x51, 0x72, 0x70, 0x24, 0x25, 0x1a, 0x17, 0x2e, 0x23, 0x83, 0xcd, 0x8b, 0xe2, 0x42,
	0x38, 0x0a, 0x50, 0x8b, 0x24, 0xb6, 0x6d, 0xda, 0x18, 0x9e, 0x0b, 0x2a, 0x6b, 0x48, 0x0f, 0x41,
	0xe4, 0x49, 0xb2, 0x63, 0x1a, 0xce, 0x70, 0x40, 0x6c, 0xa7, 0xb8, 0x8a, 0xfc, 0x37, 0xc6, 0xcc,
	0xb5, 0xc2, 0xe9, 0xd4, 0xe5, 0xb3, 0x50, 0xdb, 0x29, 0x7d, 0x0b, 0x96, 0x23, 0x7a, 0x98, 0x29,
	0xca, 0xfc, 0x71, 0x0a, 0x32, 0x54, 0x54, 0x87, 0xd2, 0x50, 0x2f, 0x77, 0xb0, 0xdf, 0x9c, 0xca,
	0x1a, 0xd2, 0x1a, 0xe4, 0xe8, 0x87, 0x36, 0x70, 0x78, 0xf5, 0x93, 0xa5, 0xcd, 0x43, 0x87, 0x96,
	0x33, 0x88, 0x78, 0x7a, 0xee, 0x12, 0x07, 0xe3, 0xca, 0x9c, 0x5a, 0xa0, 0x90, 0xfb, 0x14, 0x40,
	0xf3, 0x15, 0xee, 0x56, 0x1c, 0x8c, 0x20, 0x73, 0x2a, 0x6f, 0xd1, 0x32, 0x07, 0xbf, 0x28, 0x43,
	0xb6, 0xc3, 0xc9, 0x61, 0xfb, 0xd0, 0xa1, 0xd6, 0xc1, 0x50, 0x8c, 0x65, 0x16, 0xb1, 0x80, 0x20,
	0xc6, 0x73, 0x03, 0xe6, 0x59, 0x6d, 0x73, 0x42, 0xf3, 0x10, 0xaf, 0xb8, 0x01, 0x0b, 0x18, 0x84,
	0x48, 0x97, 0x20, 0xd3, 0x33, 0x29, 0xe7, 0xbc, 0xb7, 0x77, 0x62, 0x82, 0x22, 0x43, 0x0d, 0x77,
	0x37, 0x6c, 0xc7, 0x53, 0x40, 0x08, 0x96, 0xe4, 0x94, 0x29, 0x2f, 0x5e, 0x68, 0x4f, 0xe0, 0x4c,
	0x39, 0xe8, 0xd0, 0x91, 0x7f, 0x9a, 0x82, 0x4c, 0xb9, 0x4f, 0x6c, 0x37, 0x10, 0x86, 0xd3, 0x18,
	0x86, 0xef, 0xd2, 0x8d, 0xd7, 0x19, 0xb1, 0x7b, 0xee, 0x39, 0xdf, 0x86, 0xc4, 0x1d, 0xbe, 0xc5,
	0x09, 0x30, 0x4e, 0xf8, 0xe4, 0x54, 0x28, 0x9d, 0xf2, 0xd4, 0xdc, 0x73, 0x8b, 0xa0, 0xf6, 0xd2,
	0x6a, 0x01, 0x21, 0x94, 0x90, 0x26, 0xd1, 0x01, 0x71, 0x30, 0x94, 0xb1, 0x5d, 0x87, 0xd7, 0x94,
	0xee, 0x40, 0xc1, 0xdf, 0xd6, 0xf2, 0x08, 0x3c, 0x29, 0x98, 0x8d, 0x88, 0xe9, 0x44, 0x6d, 0xbe,
	0xaf, 0xd5, 0x7a, 0x5d, 0x54, 0x6f, 0x81, 0x16, 0x44, 0x0c, 0x54, 0xc3, 0xe9, 0x78, 0x2d, 0x5e,
	0x38, 0x5e, 0x4f, 0x70, 0x17, 0x46, 0xc0, 0xa6, 0xe3, 0x91, 0x53, 0x79, 0x3b, 0x7d, 0x82, 0x25,
	0x1a, 0xab, 0x1d, 0xbd, 0x26, 0xb5, 0x45, 0xd7, 0xed, 0x73, 0xb5, 0xd3, 0x4f, 0x3a, 0xf5, 0xa1,
	0xd1, 0x7b, 0x31, 0x24, 0x9a, 0xab, 0x9f, 0xa0, 0xbe, 0x0b, 0x6a, 0x81, 0x41, 0xda, 0xfa, 0x89,
	0xfc, 0x1e, 0x64, 0x51, 0xdb, 0x0e, 0x4d, 0x5a, 0xa8, 0x11, 0x9e, 0x92, 0xe3, 0x49, 0x0b, 0xe9,
	0x54, 0x46, 0x24, 0xff, 0x43, 0x0a, 0x96, 0x9b, 0x4f, 0x3f, 0x23, 0x1d, 0x97, 0x92, 0x10, 0x0c,
	0x02, 0x74, 0x4b, 0x3b, 0xf4, 0x33, 0x27, 0x7e, 0xd3, 0xad, 0x34, 0xf7, 0xbd, 0x9e, 0xb7, 0x55,
	0xc8, 0x33, 0x40, 0x0d, 0x8b, 0x17, 0x62, 0xe8, 0x4f, 0xfb, 0xa4, 0x8b, 0x6b, 0x92, 0x57, 0xbd,
	0x26, 0xab, 0xbf, 0x30, 0xb4, 0xb3, 0x05, 0xf1, 0x62, 0xf7, 0x2a, 0x64, 0xf5, 0x0e, 0xad, 0x13,
	0x79, 0xd1, 0xce, 0x5b, 0xb8, 0xc0, 0x9d, 0x0e, 0x71, 0x1c, 0x8d, 0xba, 0x22, 0x53, 0x76, 0x81,
	0x41, 0x1e, 0x11, 0x5c, 0x7f, 0x87, 0x74, 0x6c, 0xe2, 0x22, 0x3a, 0xc7, 0xd0, 0x0c, 0x42, 0xd1,
	0x58, 0x6e, 0x76, 0x2d, 0xb3, 0x67, 0xb8, 0xd4, 0x98, 0x69, 0x98, 0x1c, 0x01, 0xa4, 0xd7, 0x41,
	0xec, 0x0c, 0x6d, 0xba, 0xe7, 0xd1, 0x88, 0xd1, 0x3d, 0xa2, 0x40, 0x54, 0x70, 0x41, 0x5d, 0xe6,
	0x70, 0x85, 0x83, 0x31, 0xe2, 0x32, 0x31, 0x2c, 0xd3, 0x66, 0x79, 0x2c, 0xad, 0x72, 0xc9, 0x8e,
	0x4c, 0xdb, 0xc5, 0x13, 0x02, 0x72, 0x42, 0xe5, 0x67, 0x3b, 0x7b, 0xde, 0x92, 0xff, 0x52, 0x80,
	0x4b, 0x3c, 0xf4, 0xd8, 0x84, 0x66, 0x06, 0xf2, 0x62, 0x48, 0x1c, 0x37, 0x98, 0xff, 0x85, 0xd9,
	0xf2, 0xff, 0xcc, 0x45, 0x8b, 0x97, 0xfe, 0xd3, 0x53, 0xa6, 0x7f, 0xf9, 0x26, 0x2c, 0x31, 0x98,
	0x4a, 0x1c, 0xcb, 0x34, 0x9c, 0x40, 0xf8, 0x15, 0x02, 0xe1, 0x57, 0xb6, 0xe0, 0x72, 0x78, 0x6a,
	0x9c, 0x3a, 0x5a, 0x66, 0x1d, 0x00, 0x8f, 0xb6, 0x9a, 0xcd, 0x49, 0xb8, 0xe8, 0xe3, 0xa2, 0xb4,
	0xc7, 0x49, 0x5d, 0x3a, 0x0b, 0xb5, 0xe5, 0xbf, 0x13, 0xbc, 0xfa, 0x16, 0xd3, 0x42, 0x99, 0xd9,
	0xc8, 0x3d, 0xc8, 0xb2, 0x8c, 0x85, 0x63, 0x2e, 0xed, 0xc9, 0x63, 0xd8, 0x32, 0xf2, 0x23, 0xdd,
	0xd6, 0x07, 0x2a, 0xef, 0x21, 0xdd, 0x81, 0xcc, 0xc0, 0x1c, 0x1a, 0x2e, 0x0f, 0x3c, 0xd3, 0x74,
	0x65, 0x1d, 0xa8, 0xe9, 0xe1, 0x07, 0xcb, 0xc1, 0x69, 0x66, 0x7a, 0x08, 0xf1, 0x72, 0x74, 0x30,
	0x95, 0xcf, 0x45, 0x53, 0xbe, 0xfc, 0x57, 0x29, 0x10, 0xf9, 0x5c, 0x88, 0xfb, 0x32, 0xcc, 0x82,
	0xad, 0x72, 0x6a, 0xda, 0x22, 0xef, 0x9e, 0xef, 0x71, 0xcc, 0x30, 0xe4, 0x49, 0xe5, 0x12, 0x9b,
	0xbf, 0xef, 0x95, 0x07, 0x90, 0x33, 0x2d, 0x3c, 0xf4, 0x2b, 0xce, 0x61, 0x50, 0xd9, 0x19, 0xd7,
	0xd9, 0x9f, 0xda, 0x4e, 0x93, 0x75, 0x60, 0x25, 0x86, 0xd7, 0xbd, 0x74, 0x0f, 0x16, 0x82, 0x88,
	0x99, 0x72, 0xee, 0xf7, 0x47, 0xd6, 0x40, 0x87, 0xe1, 0xd6, 0xb7, 0x0b, 0x59, 0x66, 0x35, 0x5c,
	0x83, 0x6b, 0xe3, 0x8c, 0x8c, 0x93, 0xbd, 0x44, 0xf3, 0x3c, 0x87, 0x95, 0x96, 0xa1, 0x5b, 0x61,
	0x4f, 0x8f, 0x7a, 0x43, 0x60, 0x89, 0x53, 0xb3, 0x2d, 0x71, 0x70, 0x3f, 0x91, 0x0e, 0xef, 0x27,
	0xe4, 0x17, 0x20, 0x05, 0x87, 0xe6, 0xba, 0xf8, 0x45, 0x58, 0xf5, 0x0a, 0x24, 0x44, 0x8c, 0x66,
	0xc8, 0x74, 0xf3, 0xda, 0xb8, 0x32, 0x29, 0xc4, 0x46, 0xbd, 0x7c, 0x96, 0x00, 0x95, 0x5d, 0xef,
	0xe4, 0x07, 0x73, 0x44, 0x28, 0x1f, 0x08, 0x91, 0x7c, 0x90, 0x74, 0xde, 0xfb, 0x2e, 0xe4, 0xf8,
	0xc0, 0xd3, 0x44, 0x26, 0x8f, 0x56, 0xfe, 0x73, 0xc1, 0x8b, 0x4e, 0x5e, 0xed, 0x96, 0x78, 0xfc,
	0xb6, 0x0e, 0x05, 0xfa, 0xdf, 0xb1, 0xf4, 0x8e, 0x67, 0x39, 0x23, 0x00, 0xed, 0xe1, 0x17, 0x0c,
	0x05, 0x15, 0xbf, 0x69, 0x85, 0x46, 0xb7, 0xb7, 0x54, 0x7c, 0x9e, 0x9a, 0x68, 0xb3, 0xd6, 0xa5,
	0x8e, 0x6e, 0x7e, 0x6e, 0x10, 0x5b, 0xc3, 0x41, 0x32, 0x8c, 0x17, 0x42, 0x1a, 0x74, 0x24, 0x1f,
	0x8d, 0x1c, 0xb3, 0x01, 0x34, 0x4d, 0xee, 0x72, 0x17, 0xa4, 0x07, 0xb6, 0x6e, 0x9d, 0x56, 0xed,
	0xde, 0x19, 0xb1, 0x2b, 0xa7, 0xba, 0x71, 0x42, 0x1c, 0x5f, 0x21, 0x42, 0x40, 0x21, 0xf7, 0x60,
	0xee, 0x79, 0xcf, 0xe8, 0xf2, 0x48, 0x74, 0x33, 0x61, 0x6f, 0x19, 0x61, 0x83, 0xc5, 0x03, 0xf6,
	0x91, 0x6f, 0xc1, 0x72, 0xa5, 0x3f, 0x74, 0x5c, 0x62, 0x5f, 0x10, 0xb3, 0x7f, 0x4f, 0x80, 0x45,
	0xea, 0xcc, 0x67, 0xbe, 0x7d, 0x1e, 0x40, 0x5e, 0x25, 0x2f, 0x88, 0xe3, 0x3e, 0x7a, 0xcc, 0x2b,
	0x84, 0x37, 0xe2, 0x15, 0x42, 0xb0, 0xc7, 0x8e, 0x47, 0xce, 0x5c, 0xd9, 0xef, 0x5d, 0xfa, 0x00,
	0x16, 0x43, 0xa8, 0xa0, 0x33, 0xa7, 0x2f, 0x72, 0xe6, 0x2f, 0x60, 0x29, 0x34, 0x8a, 0x23, 0xc9,
	0xb0, 0xc0, 0xbf, 0x2b, 0x18, 0xa1, 0x19, 0x9b, 0x10, 0x4c, 0xaa, 0x46, 0x66, 0xc3, 0x4f, 0x59,
	0x6f, 0x4c, 0x9e, 0x81, 0x1a, 0xee, 0x24, 0xff, 0x85, 0x00, 0xab, 0xb8, 0x73, 0xbf, 0xd8, 0x7b,
	0x1f, 0x41, 0xb6, 0x1e, 0x3c, 0xcf, 0x7d, 0x3b, 0xf9, 0x08, 0x20, 0xc6, 0x28, 0x7c, 0x08, 0x5d,
	0xff, 0xca, 0x87, 0xd0, 0xff, 0x29, 0xc0, 0x5a, 0x6c, 0x24, 0xbe, 0xf2, 0xc7, 0x50, 0xf0, 0x4e,
	0xc3, 0x1c, 0xbe, 0xa4, 0xef, 0x5f, 0x2c, 0x26, 0xeb, 0xbc, 0xd3, 0xf2, 0x7a, 0x32, 0x51, 0x47,
	0x9c, 0x46, 0x06, 0x95, 0x0a, 0x18, 0x54, 0x49, 0x87, 0xa5, 0x70, 0x97, 0x84, 0x69, 0xdc, 0x0d,
	0x4e, 0x63, 0x7e, 0xef, 0x9b, 0xf1, 0x8a, 0x25, 0x26, 0x47, 0x70, 0xae, 0xff, 0x3d, 0xe7, 0xdf,
	0x60, 0x34, 0xcc, 0x6e, 0xbc, 0xbe, 0x10, 0x21, 0xdd, 0xb1, 0x86, 0xc8, 0x5c, 0x50, 0xe9, 0x27,
	0x0d, 0x46, 0x03, 0x32, 0xd0, 0x5c, 0xd3, 0xd5, 0xfb, 0x7c, 0x4f, 0x95, 0x1f, 0x90, 0x01, 0x5e,
	0x2a, 0xd0, 0xad, 0x13, 0x45, 0xe2, 0x36, 0x86, 0x6d, 0xaa, 0x72, 0x03, 0x32, 0xc0, 0x4d, 0x0c,
	0x47, 0x3d, 0xb3, 0x09, 0xf1, 0x76, 0x55, 0x03, 0x32, 0xd8, 0xb7, 0x09, 0x9e, 0x2b, 0xeb, 0x67,
	0x27, 0x5a, 0xdf, 0xd4, 0x59, 0xcd, 0x9f, 0x56, 0x73, 0xfa, 0xd9, 0x49, 0xdd, 0xd4, 0xd9, 0x31,
	0x12, 0xab, 0x69, 0x73, 0x63, 0xce, 0x37, 0x22, 0x07, 0x15, 0xdf, 0x82, 0x4c, 0xb7, 0xe7, 0x3c,
	0xf7, 0x6e, 0x2f, 0x6e, 0x8d, 0xbb, 0xbd, 0xa0, 0xb3, 0xdd, 0xa9, 0x52, 0x4a, 0xb6, 0x18, 0xac,
	0x97, 0xb4, 0x07, 0x19, 0xcb, 0x34, 0xfd, 0x33, 0xe1, 0xf5, 0x49, 0x97, 0x1f, 0x2a, 0x23, 0xa5,
	0xd1, 0x6d, 0x70, 0x32, 0x70, 0xb5, 0x9e, 0xe5, 0x15, 0xa8, 0xb4, 0x59, 0xb3, 0x28, 0xa2, 0xab,
	0xbb, 0x3a, 0x45, 0x2c, 0x30, 0x04, 0x6d, 0xd6, 0xf0, 0xf4, 0xea, 0xd4, 0x74, 0x5c, 0x0c, 0x7a,
	0xec, 0xc0, 0xc2, 0x6f, 0x4b, 0x87, 0x30, 0x8f, 0xb1, 0x92, 0x9f, 0x4d, 0x8b, 0x63, 0xc2, 0x46,
	0x70, 0x1a, 0xf4, 0x4f, 0xd0, 0x07, 0xc0, 0xf0, 0x01, 0xa5, 0x4f, 0x01, 0x46, 0xb3, 0x4c, 0xb0,
	0x9f, 0xf7, 0xc2, 0xf6, 0xb3, 0x39, 0x6e, 0x20, 0x6f, 0x57, 0x15, 0x30, 0x1e, 0xba, 0xaf, 0x8f,
	0x0c, 0x3d, 0x93, 0x9f, 0xfd, 0x91, 0x00, 0x4b, 0x9c, 0x3b, 0x0f, 0xb0, 0x81, 0xe5, 0x16, 0xa6,
	0x5b, 0x6e, 0x66, 0xaf, 0x29, 0xdf, 0x5e, 0x03, 0x99, 0x26, 0x1d, 0xca, 0x34, 0x7b, 0xde, 0x71,
	0xeb, 0xdc, 0xe4, 0x85, 0xa5, 0x13, 0xf2, 0x0e, 0x63, 0xff, 0x45, 0x00, 0x89, 0xe5, 0xc3, 0x43,
	0x1a, 0x11, 0xbd, 0xb8, 0x35, 0x31, 0x1d, 0x87, 0x4b, 0xd7, 0x54, 0xb4, 0x74, 0x7d, 0x38, 0xaa,
	0xee, 0xd2, 0x13, 0x2f, 0xad, 0x82, 0x23, 0x7e, 0x0d, 0xf5, 0xdd, 0x15, 0x6f, 0xeb, 0xc4, 0xc7,
	0xe1, 0x75, 0xc7, 0xbf, 0x0a, 0xde, 0xbe, 0xe3, 0xd8, 0x18, 0xbc, 0xac, 0x39, 0xd7, 0xa3, 0x73,
	0xde, 0x1b, 0x33, 0xe7, 0xf0, 0x98, 0x5f, 0xc3, 0xac, 0xd7, 0xe0, 0x4a, 0x64, 0x24, 0x3e, 0xef,
	0x1f, 0xf9, 0x5b, 0x49, 0x76, 0x50, 0x35, 0xd5, 0xb4, 0x1f, 0x8d, 0xe6, 0xc5, 0x12, 0xd6, 0x5b,
	0xe3, 0x76, 0x38, 0x41, 0x9e, 0x5f, 0xc3, 0xb4, 0xde, 0xf7, 0x16, 0xcd, 0x1b, 0x88, 0x27, 0xab,
	0xc8, 0x3e, 0x49, 0x88, 0xed, 0x93, 0xf6, 0xbc, 0x59, 0x57, 0xc9, 0xb4, 0xb3, 0x96, 0x57, 0xbd,
	0xc1, 0xbc, 0x3e, 0x5c, 0x85, 0x04, 0x6e, 0x34, 0x2d, 0x62, 0x70, 0x37, 0x4a, 0xda, 0x97, 0x27,
	0xd5, 0x92, 0xb3, 0x6e, 0xad, 0xe4, 0x0f, 0x61, 0x63, 0xec, 0x30, 0x7c, 0xda, 0x13, 0xc5, 0xff,
	0x35, 0x01, 0x36, 0x82, 0xbd, 0xf6, 0x6d, 0x73, 0xc0, 0x4b, 0xed, 0xea, 0x24, 0x41, 0xaf, 0x41,
	0x81, 0xdd, 0xe1, 0x06, 0xce, 0x64, 0x18, 0xa0, 0xd6, 0x9d, 0xfd, 0x18, 0xe0, 0x23, 0xd8, 0x1c,
	0x2f, 0xc4, 0x34, 0xd3, 0x08, 0xac, 0x5c, 0x9f, 0x8c, 0x54, 0x3c, 0xed, 0xca, 0xb1, 0x3e, 0x7c,
	0xe5, 0xde, 0xf6, 0xe0, 0x35, 0x83, 0x0a, 0x37, 0x95, 0xcf, 0xcb, 0x07, 0x9e, 0x2b, 0xf9, 0x9d,
	0xfe, 0x97, 0x7b, 0x44, 0x59, 0x85, 0x55, 0x06, 0x51, 0x0c, 0xba, 0xe5, 0x78, 0x19, 0x07, 0x39,
	0x72, 0x1d, 0xd6, 0x62, 0x3c, 0xb9, 0x7c, 0x6f, 0x41, 0x8e, 0x0d, 0xec, 0xd5, 0x6f, 0x63, 0x05,
	0xf4, 0xe8, 0xe4, 0xbf, 0x11, 0xe0, 0x1a, 0x5f, 0x42, 0x5e, 0x8e, 0x85, 0x0d, 0x7b, 0x62, 0x94,
	0x38, 0xf2, 0xdf, 0x53, 0xb0, 0x20, 0x71, 0x67, 0x9c, 0x75, 0x24, 0xb1, 0x7e, 0xd9, 0xef, 0x2b,
	0x3e, 0x82, 0xf5, 0xe4, 0xd1, 0x46, 0x11, 0x63, 0x74, 0x8f, 0xee, 0xcd, 0x05, 0xfc, 0x1b, 0xf4,
	0xae, 0xfc, 0x4b, 0x51, 0x06, 0x2a, 0xc1, 0xb3, 0xcc, 0xa9, 0x54, 0x11, 0xe1, 0x9e, 0x8a, 0x71,
	0xdf, 0x80, 0xeb, 0x63, 0xb8, 0x73, 0x53, 0xfd, 0xb1, 0x00, 0x37, 0xc2, 0x14, 0x31, 0xa3, 0x99,
	0x28, 0x41, 0x2b, 0xb2, 0x18, 0x1f, 0x5c, 0xb0, 0x18, 0x51, 0xee, 0x2f, 0x7b, 0x3d, 0x3e, 0xf6,
	0x82, 0x51, 0xc2, 0x80, 0x7c, 0x49, 0xde, 0x8d, 0xef, 0x38, 0xc6, 0x5a, 0xec, 0x88, 0x52, 0xbe,
	0x0a, 0x6b, 0xbc, 0xa8, 0x8a, 0xce, 0x41, 0x3e, 0x86, 0x62, 0x1c, 0xc5, 0x47, 0xbb, 0x0b, 0xb9,
	0x0e, 0xc3, 0x71, 0x97, 0xdb, 0x18, 0x57, 0x28, 0x79, 0x7b, 0x62, 0x8f, 0x5e, 0xbe, 0x0d, 0x57,
	0x38, 0x2c, 0x12, 0x47, 0x02, 0x35, 0x99, 0x10, 0xac, 0xc9, 0xe4, 0x87, 0xb0, 0x1a, 0xed, 0xc1,
	0xc5, 0xb8, 0x0d, 0x73, 0x94, 0x86, 0xcb, 0x30, 0xb9, 0x58, 0x43, 0x4a, 0xf9, 0xef, 0x05, 0x58,
	0xe7, 0xcc, 0xf0, 0xcc, 0x3d, 0x66, 0x17, 0x77, 0x01, 0xbc, 0xab, 0x32, 0xdb, 0xe5, 0x8c, 0x2f,
	0xbc, 0x96, 0x68, 0x51, 0x62, 0xe9, 0x5d, 0xc8, 0x63, 0x57, 0xc2, 0x4f, 0x10, 0x26, 0x77, 0xcc,
	0x51, 0x5a, 0xc5, 0x08, 0x5f, 0x56, 0xa4, 0x67, 0xba, 0xac, 0x90, 0x8f, 0xe0, 0xfa, 0x98, 0xc9,
	0x8c, 0xa2, 0x2c, 0xde, 0x29, 0x38, 0x63, 0xa3, 0x2c, 0xbb, 0xa1, 0x50, 0x39, 0x99, 0x6c, 0xf9,
	0x8b, 0x8e, 0x88, 0x4a, 0x9f, 0xe8, 0xf6, 0x48, 0x35, 0x23, 0x41, 0x85, 0xd9, 0x6e, 0x55, 0xe8,
	0xd6, 0x0d, 0x2f, 0x89, 0xb8, 0x3f, 0xd3, 0xad, 0x1b, 0x6d, 0xd7, 0xba, 0xf2, 0x35, 0xb8, 0x9a,
	0x30, 0x22, 0x77, 0xe4, 0x88, 0x38, 0x8a, 0xad, 0x3b, 0xe4, 0xff, 0x54, 0x1c, 0x3e, 0xa2, 0x7f,
	0xde, 0x56, 0xac, 0xf4, 0xcd, 0x61, 0xf7, 0xbe, 0xde, 0x79, 0x3e, 0xb4, 0x66, 0x88, 0xee, 0xb7,
	0x60, 0xb9, 0x63, 0x93, 0x2e, 0x31, 0xdc, 0x9e, 0xde, 0xd7, 0xf0, 0x26, 0x87, 0x39, 0xf9, 0xd2,
	0x08, 0x7c, 0x3c, 0x64, 0xcf, 0x32, 0x9f, 0x0d, 0xfb, 0x7d, 0x7e, 0xb8, 0x88, 0xdf, 0x4c, 0xa4,
	0xd8, 0xa8, 0x5c, 0xa4, 0x1f, 0x08, 0x21, 0x6c, 0x24, 0xce, 0x46, 0xf7, 0xe9, 0x3b, 0x70, 0xc9,
	0x66, 0x14, 0x1a, 0x17, 0x16, 0x2b, 0x18, 0x26, 0xcb, 0x0a, 0x47, 0xb1, 0x28, 0x81, 0x27, 0x6b,
	0x09, 0x72, 0xa7, 0x13, 0xe5, 0x1e, 0x77, 0x74, 0x27, 0x1f, 0x40, 0x29, 0x49, 0x3c, 0x6e, 0x9f,
	0xdb, 0xb0, 0x12, 0x91, 0xc7, 0x17, 0x77, 0x39, 0x24, 0x4d, 0xad, 0x2b, 0x7f, 0x19, 0x9e, 0xe9,
	0x03, 0x62, 0x10, 0xbb, 0xd7, 0xf1, 0x66, 0x2a, 0xc3, 0xa2, 0x63, 0x77, 0x62, 0x5c, 0xe6, 0x1d,
	0xbb, 0xf3, 0x38, 0xb0, 0x01, 0xe1, 0x51, 0x68, 0x94, 0x57, 0x0a, 0x1c, 0x92, 0xbc, 0x48, 0xc9,
	0x93, 0x15, 0x21, 0xad, 0xf7, 0xfb, 0xfc, 0x41, 0x09, 0xfd, 0x94, 0xff, 0x36, 0x05, 0xcb, 0x01,
	0xd9, 0xf0, 0x38, 0x36, 0xaa, 0xfb, 0x98, 0x84, 0xa9, 0xb8, 0x84, 0x37, 0x61, 0x39, 0x40, 0x83,
	0x6b, 0xc3, 0x44, 0x58, 0xf4, 0xa9, 0x70, 0x5d, 0x42, 0x77, 0xa7, 0x73, 0xb3, 0xdc, 0x9d, 0x3e,
	0x0c, 0xbc, 0x53, 0xcd, 0x8c, 0xb9, 0x38, 0x88, 0xcc, 0x64, 0xe7, 0x90, 0x77, 0xe0, 0xa7, 0x8d,
	0x5e, 0xff, 0xc0, 0x4d, 0x62, 0x36, 0x78, 0x93, 0x58, 0xfa, 0x00, 0x16, 0x43, 0x5d, 0x66, 0xca,
	0x75, 0x7f, 0x28, 0xc0, 0xb5, 0x80, 0x00, 0xb1, 0x00, 0xfd, 0xff, 0xbb, 0xd0, 0x9f, 0xd2, 0xf4,
	0x91, 0x24, 0x1c, 0x37, 0xe8, 0x7b, 0x90, 0x7b, 0x8a, 0x28, 0x2f, 0x09, 0x6f, 0x5e, 0xa4, 0x5d,
	0xd5, 0xeb, 0x20, 0xf7, 0x42, 0xd1, 0x25, 0x5c, 0xb1, 0x47, 0x8d, 0x69, 0xea, 0x80, 0x72, 0x19,
	0x32, 0xf8, 0x14, 0x8e, 0x47, 0x14, 0xd6, 0x88, 0x2a, 0x99, 0x8d, 0x55, 0xee, 0xf7, 0x7f, 0x36,
	0x94, 0xdc, 0x0e, 0x29, 0x82, 0x1f, 0xe5, 0xcc, 0x20, 0xd9, 0x65, 0xc8, 0xd0, 0x0a, 0xbf, 0x8f,
	0x42, 0xe5, 0x55, 0xd6, 0x90, 0x7f, 0x92, 0x82, 0x95, 0x18, 0xdb, 0x98, 0x62, 0xef, 0x41, 0xd6,
	0xb4, 0xf0, 0x1e, 0x61, 0xdc, 0x75, 0x64, 0x80, 0x47, 0xd3, 0x62, 0x8f, 0xa6, 0x58, 0x0f, 0xe9,
	0x43, 0xdf, 0x1f, 0xd2, 0x63, 0x2e, 0x10, 0x62, 0xe3, 0xb3, 0xfe, 0xfc, 0x94, 0xca, 0x7f, 0xdf,
	0xd1, 0x35, 0xf9, 0x5b, 0x7a, 0xef, 0x7d, 0x47, 0xd5, 0x34, 0x68, 0xd1, 0x05, 0x58, 0x95, 0x68,
	0xf8, 0xf6, 0x6c, 0x8a, 0x17, 0x13, 0x48, 0x4d, 0xdb, 0xd2, 0x47, 0xb0, 0xd8, 0x31, 0x07, 0x74,
	0x91, 0xbb, 0xda, 0x94, 0x2f, 0xd7, 0x16, 0xbc, 0x0e, 0xc8, 0x20, 0x10, 0xdf, 0x73, 0xa1, 0xf8,
	0xfe, 0x4f, 0xe1, 0xa8, 0xec, 0x2d, 0x16, 0x77, 0x87, 0x36, 0xe4, 0xd9, 0xdc, 0xfc, 0x6d, 0xd4,
	0x9d, 0x8b, 0x75, 0x32, 0x3a, 0x08, 0xe7, 0x5d, 0x79, 0xdc, 0xf1, 0x38, 0x95, 0x34, 0x58, 0x0c,
	0xa1, 0x12, 0xe2, 0xcb, 0x9d, 0xf0, 0x79, 0xa5, 0x3c, 0xc5, 0xa8, 0x81, 0x18, 0xd4, 0x0e, 0x67,
	0x5c, 0xdd, 0xd5, 0xfb, 0xe6, 0xc9, 0x57, 0x75, 0x45, 0xf9, 0x4e, 0x28, 0x15, 0xfa, 0x5c, 0xb9,
	0xaa, 0x4a, 0x90, 0xef, 0x98, 0x86, 0x4b, 0x0c, 0xd7, 0x7b, 0xeb, 0xe9, 0xb7, 0xe5, 0x8f, 0x42,
	0xf2, 0x1c, 0xf4, 0xe8, 0x44, 0xce, 0x67, 0xf0, 0x08, 0xf9, 0xfb, 0x02, 0xad, 0xa1, 0xa3, 0x1c,
	0x6a, 0x2e, 0x19, 0x4c, 0xe5, 0x50, 0xa1, 0x74, 0x93, 0x9a, 0x25, 0xdd, 0xac, 0x86, 0x5c, 0xc2,
	0x4f, 0x11, 0xf2, 0x69, 0x48, 0x17, 0xfe, 0x8c, 0xb8, 0x2e, 0x1e, 0xc2, 0xc2, 0x29, 0x03, 0x69,
	0xfd, 0x9e, 0xe3, 0x3d, 0x9b, 0xb9, 0x35, 0x69, 0x11, 0x03, 0x53, 0x52, 0xe7, 0x79, 0xe7, 0x7a,
	0xcf, 0x71, 0xe5, 0x3e, 0xad, 0x91, 0x43, 0x6b, 0x4d, 0xd8, 0xdd, 0xdd, 0x2c, 0x11, 0xe5, 0x16,
	0x2c, 0xdb, 0x8c, 0xdc, 0x7f, 0x83, 0xc8, 0xd7, 0xd8, 0x07, 0x23, 0x67, 0xf9, 0x4f, 0x05, 0xba,
	0xa1, 0x1a, 0x0d, 0xc7, 0x9f, 0x42, 0x63, 0x41, 0x30, 0xe5, 0x40, 0xd3, 0xc5, 0xf5, 0x12, 0xe4,
	0xfd, 0xf7, 0xd7, 0x4c, 0xb5, 0x7e, 0x9b, 0x6e, 0xa0, 0x07, 0xfa, 0x77, 0x34, 0x2f, 0x11, 0xcd,
	0xe1, 0xeb, 0x6b, 0x18, 0xe8, 0xdf, 0xb9, 0xcf, 0x33, 0xcd, 0x9f, 0x09, 0x61, 0xa5, 0xd0, 0x8e,
	0xe1, 0x6a, 0xf6, 0x67, 0x47, 0xd6, 0x77, 0xe0, 0xc6, 0x38, 0x51, 0xb9, 0xb5, 0x24, 0xbc, 0x8d,
	0x92, 0xdf, 0x8e, 0x4f, 0x30, 0x9c, 0x50, 0x93, 0x3a, 0xfd, 0x54, 0x80, 0x6f, 0x44, 0x7b, 0xc5,
	0x53, 0xbc, 0x06, 0x05, 0x4f, 0x7a, 0x2f, 0xa8, 0x95, 0x27, 0x86, 0x97, 0x44, 0x36, 0x3b, 0x9e,
	0x69, 0xf8, 0xb7, 0x7c, 0x5e, 0xbb, 0xf4, 0x0c, 0x96, 0xc2, 0xc8, 0x84, 0xf8, 0xf6, 0x61, 0x38,
	0xbe, 0x6d, 0x5d, 0x28, 0x00, 0x37, 0xc2, 0x40, 0x94, 0xdb, 0xfe, 0xaf, 0x14, 0x64, 0x79, 0x16,
	0x5c, 0x86, 0xf9, 0x56, 0xbb, 0xdc, 0x3e, 0x6e, 0x69, 0x8d, 0x66, 0x43, 0x11, 0x5f, 0x09, 0x00,
	0x6a, 0x8d, 0x5a, 0x5b, 0x14, 0xa4, 0x45, 0x28, 0x70, 0x40, 0xf3, 0x91, 0x98, 0x92, 0x24, 0x58,
	0xf2, 0x9a, 0xfb, 0xfb, 0xf5, 0x5a, 0x43, 0x11, 0xd3, 0x92, 0x08, 0x0b, 0x1c, 0xa6, 0xa8, 0x6a,
	0x53, 0x15, 0xe7, 0xa4, 0x22, 0x5c, 0xf6, 0xd9, 0xb6, 0xb5, 0x5a, 0x43, 0xfb, 0xf6, 0x71, 0x53,
	0x3d, 0x3e, 0x14, 0x33, 0xd2, 0x1a, 0x5c, 0xe2, 0x98, 0xaa, 0x52, 0x69, 0x1e, 0x1e, 0xd6, 0x5a,
	0xad, 0x5a, 0xb3, 0x21, 0x66, 0xa5, 0x55, 0x90, 0x38, 0xe2, 0xb0, 0x5c, 0x6b, 0xb4, 0x95, 0x46,
	0xb9, 0x51, 0x51, 0xc4, 0x5c, 0xa0, 0x43, 0xab, 0xdd, 0x54, 0xcb, 0x0f, 0x14, 0xad, 0xda, 0x7c,
	0xd2, 0x10, 0xf3, 0xd2, 0x35, 0x58, 0x8b, 0x22, 0x94, 0x07, 0x6a, 0xb9, 0xaa, 0x54, 0xc5, 0x42,
	0xa0, 0x57, 0x43, 0x51, 0xaa, 0x2d, 0x4d, 0x55, 0xee, 0x37, 0x9b, 0x6d, 0x11, 0xa4, 0x75, 0x28,
	0x46, 0x7a, 0xa9, 0xca, 0xfd, 0x72, 0x1d, 0x07, 0x9b, 0x97, 0x36, 0x61, 0x3d, 0xca, 0x53, 0xad,
	0x3d, 0xa6, 0x34, 0x47, 0xf5, 0x72, 0x45, 0x11, 0x17, 0xa4, 0x6f, 0xc2, 0x46, 0xd2, 0xcc, 0xb4,
	0x46, 0xd3, 0xeb, 0x22, 0x2e, 0x4a, 0x4b, 0x00, 0xfe, 0x5c, 0x3e, 0x16, 0x97, 0xb6, 0xbf, 0x14,
	0x00, 0xd8, 0xeb, 0x01, 0x7c, 0x1a, 0x79, 0x19, 0x44, 0x64, 0xab, 0x6a, 0xed, 0x4f, 0x8e, 0x14,
	0x4f, 0xf3, 0x11, 0xe8, 0x7e, 0xad, 0xae, 0x88, 0x82, 0x74, 0x05, 0x56, 0x82, 0xd0, 0xfb, 0xf5,
	0x66, 0x85, 0x2e, 0xc3, 0x2a, 0x48, 0x41, 0x70, 0xf3, 0xfe, 0x43, 0xa5, 0xd2, 0x16, 0xd3, 0xd2,
	0x55, 0xb8, 0x12, 0x84, 0x57, 0xea, 0xc7, 0xad, 0xb6, 0xa2, 0x2a, 0x55, 0x71, 0x2e, 0xca, 0xe9,
	0x81, 0x5a, 0x3e, 0x3a, 0x10, 0x33, 0xdb, 0xbf, 0x2b, 0x40, 0x96, 0xbd, 0x01, 0xa7, 0xeb, 0xb8,
	0xdf, 0x0a, 0xc9, 0xb4, 0x02, 0x8b, 0x1e, 0xe4, 0x7e, 0x5b, 0xdd, 0x6f, 0x89, 0x42, 0x90, 0x48,
	0xf9, 0xb8, 0xfd, 0x8e, 0x98, 0x0a, 0x42, 0xf6, 0x8f, 0x5b, 0xd4, 0x20, 0x96, 0x61, 0xde, 0x67,
	0xb4, 0xdf, 0x12, 0xe7, 0x82, 0x80, 0xc7, 0xfb, 0x2d, 0x31, 0x13, 0x04, 0x7c, 0xbc, 0xdf, 0x12,
	0xb3, 0x41, 0xc0, 0xa7, 0xfb, 0x2d, 0x31, 0xb7, 0xfd, 0x43, 0x01, 0xae, 0x24, 0x3e, 0xbb, 0x90,
	0xbe, 0x01, 0xd7, 0x51, 0x78, 0x8d, 0x4f, 0xa7, 0x72, 0x50, 0x6e, 0x3c, 0x50, 0x42, 0x72, 0xbf,
	0x06, 0xdf, 0x18, 0x4b, 0x72, 0xd8, 0xac, 0xd6, 0xf6, 0x6b, 0x4a, 0x55, 0x14, 0x24, 0x19, 0x6e,
	0x8c, 0x25, 0x2b, 0x57, 0xa9, 0x25, 0xa5, 0xa4, 0x57, 0x61, 0x73, 0x2c, 0x4d, 0x55, 0xa9, 0x2b,
	0x6d, 0xa5, 0x2a, 0xa6, 0xb7, 0x5d, 0x58, 0x08, 0x3e, 0x93, 0x45, 0x6b, 0x56, 0x1e, 0x2b, 0x6a,
	0xad, 0xfd, 0x49, 0x48, 0x30, 0x6a, 0x97, 0x21, 0x78, 0xb9, 0x5e, 0x56, 0x0f, 0x45, 0x81, 0x2e,
	0x5c, 0x18, 0xf1, 0xa4, 0xac, 0x36, 0x6a, 0x8d, 0x07, 0x62, 0x0a, 0x9d, 0x29, 0xc2, 0xab, 0x5d,
	0xdb, 0xff, 0x44, 0x4c, 0x6f, 0xff, 0x86, 0x00, 0x0b, 0xc1, 0x93, 0x0e, 0x3a, 0xac, 0xaa, 0xb4,
	0x9a, 0xc7, 0x6a, 0x25, 0xac, 0x8f, 0x22, 0x5c, 0x0e, 0xc3, 0x1f, 0x37, 0xeb, 0xc7, 0x87, 0xd4,
	0xbe, 0x12, 0x7a, 0x54, 0x15, 0x31, 0x45, 0xe5, 0x09, 0xc3, 0xb9, 0x29, 0x89, 0x69, 0x3a, 0x87,
	0x30, 0x0a, 0x35, 0x23, 0xce, 0x6d, 0x7f, 0x4f, 0x80, 0x65, 0x3c, 0x3c, 0x61, 0x4f, 0xd6, 0x50,
	0xa2, 0x12, 0xac, 0x96, 0xeb, 0x8a, 0xda, 0xd6, 0xca, 0x95, 0x76, 0xad, 0xd9, 0x08, 0x49, 0xb5,
	0x0e, 0xc5, 0x38, 0x8e, 0xe9, 0x54, 0x14, 0x92, 0xb1, 0x15, 0x55, 0x29, 0xb7, 0xa9, 0x7c, 0x89,
	0xd8, 0xe3, 0xa3, 0x2a, 0xc5, 0xa6, 0xb7, 0x3f, 0xf3, 0x5e, 0xa7, 0x05, 0x1e, 0x0f, 0xd2, 0x2e,
	0x6c, 0xda, 0x5e, 0x9f, 0xa3, 0xb2, 0x5a, 0x3e, 0xf4, 0x84, 0xb9, 0x06, 0x6b, 0x49, 0xd8, 0xe6,
	0xfe, 0xbe, 0x28, 0xd0, 0x59, 0x24, 0x22, 0x1b, 0x62, 0x6a, 0x7b, 0x0f, 0x72, 0xfc, 0xe7, 0x6b,
	0x52, 0x1e, 0xe6, 0x38, 0xb7, 0x1c, 0xa4, 0xeb, 0xcd, 0x27, 0xa2, 0x20, 0x01, 0x64, 0x0f, 0x95,
	0x6a, 0xed, 0xf8, 0x50, 0x4c, 0x51, 0xf4, 0x41, 0xed, 0xc1, 0x81, 0x98, 0xde, 0xfe, 0x15, 0x28,
	0xf8, 0xbf, 0x5f, 0xa3, 0xaa, 0xae, 0x35, 0xb5, 0x23, 0xb5, 0x49, 0x5d, 0x5e, 0x6b, 0x29, 0xdf,
	0x3e, 0x56, 0x1a, 0xed, 0x5a, 0xb9, 0x2e, 0xbe, 0x42, 0x7d, 0x36, 0x80, 0x52, 0xcb, 0x8d, 0x6a,
	0x93, 0x1a, 0xcb, 0x0a, 0x2c, 0x06, 0xc0, 0xd5, 0xfb, 0xcc, 0x48, 0x42, 0x20, 0x4d, 0x55, 0x0e,
	0x9b, 0x54, 0x17, 0x34, 0x62, 0x07, 0x30, 0x95, 0xc3, 0x96, 0x38, 0xb7, 0xfd, 0x65, 0x0a, 0xe6,
	0x03, 0x4f, 0x0c, 0xe9, 0x38, 0x7c, 0x7e, 0x34, 0x6e, 0x05, 0xcd, 0x26, 0x04, 0x3e, 0x52, 0x1a,
	0x55, 0x6a, 0x93, 0x41, 0x85, 0x30, 0x4c, 0xf9, 0x71, 0xb9, 0x56, 0x2f, 0xdf, 0xaf, 0x73, 0xd3,
	0x09, 0xe3, 0xda, 0xed, 0x72, 0xe5, 0x80, 0xba, 0x49, 0x0c, 0x55, 0x55, 0x38, 0x6a, 0x2e, 0xa0,
	0xff, 0x11, 0xaa, 0x5d, 0x39, 0xa0, 0xc3, 0x65, 0xa8, 0x95, 0x86, 0x90, 0x2c, 0xcf, 0x64, 0x63,
	0x02, 0x7a, 0x0e, 0x99, 0x93, 0x6e, 0x40, 0x29, 0x84, 0x69, 0xab, 0x9f, 0xf0, 0xd1, 0x28, 0xc7,
	0x7c, 0xac, 0xa7, 0xaa, 0xd0, 0xf0, 0xad, 0x88, 0x85, 0xed, 0xdf, 0x12, 0x60, 0x21, 0xf8, 0x1b,
	0x97, 0xc8, 0xe0, 0xa3, 0x54, 0x79, 0x1d, 0xae, 0x46, 0xe1, 0x6d, 0xed, 0x48, 0x55, 0x5a, 0x4a,
	0x83, 0x26, 0xce, 0xcb, 0x20, 0x86, 0xd1, 0xc7, 0x47, 0x2c, 0x70, 0x87, 0xa1, 0x98, 0xcd, 0xd2,
	0x11, 0x85, 0x62, 0x7a, 0xe4, 0xc9, 0x6c, 0x6e, 0xfb, 0x97, 0xe9, 0xb6, 0x27, 0xf0, 0xdb, 0x5e,
	0x96, 0xfa, 0x58, 0x7e, 0x62, 0xc6, 0xa5, 0x1d, 0x96, 0x1f, 0x34, 0x94, 0x76, 0xad, 0x22, 0xbe,
	0xc2, 0x12, 0x69, 0x08, 0xd9, 0x6a, 0xd1, 0x60, 0x87, 0x29, 0x31, 0x04, 0x6f, 0x3c, 0x3e, 0x54,
	0xc4, 0xd4, 0xf6, 0x16, 0x2c, 0xf2, 0x93, 0xcf, 0x86, 0xe9, 0xf6, 0x9e, 0x9d, 0x53, 0x4a, 0xee,
	0xed, 0x3c, 0xd4, 0x30, 0x21, 0x5f, 0xd9, 0x26, 0x30, 0x1f, 0xf8, 0xa5, 0x0d, 0x5d, 0x4d, 0xb6,
	0xb6, 0xde, 0xaa, 0x7c, 0xdc, 0x56, 0xd4, 0x06, 0x1a, 0x6e, 0x14, 0x45, 0x33, 0x3a, 0xa2, 0x04,
	0x9a, 0x63, 0x13, 0x51, 0x5a, 0xeb, 0x49, 0xad, 0x5d, 0x39, 0x10, 0x53, 0xdb, 0x6d, 0x58, 0x6a,
	0x5a, 0xb4, 0x68, 0xea, 0x99, 0xc6, 0x7e, 0x5f, 0x3f, 0x71, 0xa8, 0x2e, 0x9b, 0x47, 0xda, 0x7e,
	0xbd, 0xfc, 0xa0, 0xa5, 0x1d, 0x37, 0x1e, 0x35, 0x50, 0x1c, 0xea, 0x06, 0x3e, 0x14, 0xd7, 0x04,
	0xc3, 0xa8, 0x0f, 0x62, 0xcb, 0xad, 0xed, 0x37, 0xd5, 0x0a, 0x9d, 0xe6, 0xbd, 0xd0, 0x29, 0x00,
	0xdb, 0xc1, 0x53, 0x16, 0x21, 0xa0, 0xf8, 0x0a, 0xf5, 0x17, 0x04, 0xf1, 0x23, 0xcb, 0xa6, 0x25,
	0x0a, 0xdb, 0xff, 0x21, 0xc0, 0x95, 0xc4, 0x2d, 0xbc, 0xb4, 0x11, 0x3a, 0x4f, 0x61, 0x88, 0x86,
	0xe9, 0xe2, 0xc5, 0x00, 0xe9, 0x32, 0x4d, 0xc4, 0x08, 0xe8, 0xae, 0x9e, 0x45, 0xb8, 0x18, 0xaa,
	0xfc, 0xd4, 0xc4, 0x8e, 0x29, 0xba, 0xc8, 0x31, 0xec, 0x91, 0x3e, 0x74, 0x48, 0x57, 0x4c, 0x27,
	0x76, 0x6d, 0xb9, 0xa6, 0x65, 0x91, 0x2e, 0xf3, 0xa5, 0x38, 0x63, 0x7c, 0x76, 0x27, 0x66, 0x12,
	0x91, 0xfb, 0x7a, 0xaf, 0x4f, 0xba, 0x62, 0x76, 0xef, 0xaf, 0x33, 0x20, 0x05, 0xee, 0xcf, 0xbd,
	0x77, 0x37, 0xdf, 0x15, 0xa0, 0xe0, 0x57, 0xb2, 0x52, 0x52, 0xd1, 0x99, 0x78, 0x95, 0x54, 0x7a,
	0x7d, 0x0a, 0x4a, 0x7e, 0x9e, 0xbd, 0xf9, 0xdd, 0x9f, 0xfc, 0xfb, 0x6f, 0xa7, 0x4a, 0xf2, 0x95,
	0xdd, 0xb3, 0xb7, 0x76, 0xf9, 0x69, 0xd2, 0x2e, 0xf1, 0xc8, 0xee, 0x09, 0xdb, 0xd2, 0x17, 0x90,
	0xe3, 0xf7, 0x40, 0xd2, 0xcd, 0x71, 0x7c, 0xc3, 0x57, 0x4b, 0xa5, 0x5b, 0x17, 0xd2, 0xf1, 0xd1,
	0x6f, 0xe0, 0xe8, 0x45, 0xf9, 0x52, 0x70, 0xf4, 0x1e, 0x23, 0xa2, 0x63, 0xff, 0xbe, 0x00, 0x4b,
	0xe1, 0xab, 0x16, 0xe9, 0xcd, 0x71, 0xbc, 0x13, 0xef, 0x97, 0x4a, 0x3b, 0xd3, 0x92, 0x73, 0x89,
	0x6e, 0xa2, 0x44, 0x9b, 0xf2, 0xb5, 0xa0, 0x44, 0x78, 0x59, 0x11, 0xd6, 0xca, 0xf7, 0x04, 0x80,
	0xd1, 0x05, 0x8a, 0xf4, 0xfa, 0xc4, 0x61, 0x82, 0xd7, 0x3a, 0xa5, 0xed, 0x69, 0x48, 0xb9, 0x34,
	0x32, 0x4a, 0xb3, 0x2e, 0xaf, 0xc5, 0xa5, 0xc1, 0x9f, 0xc9, 0x84, 0x24, 0xc1, 0xbb, 0x93, 0x0b,
	0x24, 0x09, 0xde, 0xe8, 0x5c, 0x20, 0x49, 0xf8, 0x2a, 0x66, 0x82, 0x24, 0x84, 0x12, 0xde, 0x13,
	0xb6, 0xf7, 0xfe, 0x79, 0x01, 0x56, 0x62, 0xaf, 0x40, 0xa4, 0x5f, 0x17, 0x20, 0xcb, 0x76, 0x90,
	0xd2, 0x6e, 0x6c, 0xc0, 0xc9, 0x6f, 0x53, 0x4a, 0xb7, 0xa7, 0xef, 0xc0, 0xe5, 0x5c, 0x47, 0x39,
	0x57, 0xe5, 0x15, 0x2a, 0x27, 0xdb, 0x4e, 0xef, 0xb2, 0x97, 0xe0, 0x54, 0x57, 0x3f, 0x10, 0x40,
	0x8a, 0xbf, 0xed, 0x90, 0x6e, 0x4f, 0x7c, 0x14, 0x9e, 0xf0, 0x16, 0xa5, 0xf4, 0xd6, 0x0c, 0x3d,
	0x92, 0x34, 0x18, 0x92, 0xec, 0x99, 0x6d, 0x0e, 0x7a, 0x5d, 0x2a, 0x9f, 0x03, 0x59, 0xb6, 0x6d,
	0x96, 0x5e, 0x1d, 0x33, 0x40, 0x68, 0x57, 0x5d, 0x7a, 0xed, 0x02, 0xaa, 0x09, 0x4a, 0xe9, 0x22,
	0x09, 0x1d, 0xf4, 0xf3, 0x91, 0x83, 0x8f, 0xe3, 0x17, 0xf1, 0xef, 0x9b, 0x17, 0x91, 0xf1, 0x71,
	0xaf, 0xe3, 0xb8, 0x6b, 0xb2, 0x14, 0x18, 0x37, 0xe0, 0xdd, 0xbf, 0x1a, 0x8c, 0x6e, 0xe3, 0x7e,
	0xab, 0x19, 0xf3, 0xe8, 0xad, 0x8b, 0x09, 0xf9, 0xf0, 0x1b, 0x38, 0xfc, 0x55, 0xf9, 0x72, 0x60,
	0xf8, 0x90, 0x13, 0xff, 0x8e, 0x30, 0x7a, 0xca, 0xcb, 0x4d, 0xf4, 0x8d, 0x59, 0xde, 0x81, 0x94,
	0xde, 0x9c, 0x92, 0x9a, 0x0b, 0xf4, 0x1a, 0x0a, 0xb4, 0x21, 0x97, 0x02, 0x02, 0x79, 0x6f, 0x03,
	0x02, 0x56, 0xfa, 0x07, 0x02, 0x2c, 0x47, 0x9e, 0x5a, 0x48, 0x17, 0x8d, 0x14, 0xbe, 0x88, 0x2c,
	0xed, 0x4c, 0x4b, 0x9e, 0x14, 0xf6, 0xa2, 0x92, 0xf1, 0x9b, 0x41, 0x2a, 0xda, 0x9f, 0x08, 0xec,
	0x07, 0x1f, 0xa1, 0x47, 0x11, 0x09, 0x7e, 0x3d, 0xf9, 0xbd, 0x46, 0xe9, 0xf6, 0xf4, 0x1d, 0xb8,
	0x80, 0x5b, 0x28, 0xa0, 0x2c, 0x5f, 0x4f, 0x12, 0x30, 0xb4, 0xa8, 0x0e, 0x64, 0x59, 0xb5, 0x34,
	0xd6, 0x87, 0x42, 0x0f, 0xff, 0xc6, 0xfa, 0x50, 0xf8, 0xd5, 0x5e, 0xa2, 0x0f, 0xb1, 0x5f, 0x54,
	0xf9, 0x8e, 0x3b, 0x71, 0xd0, 0xd0, 0x5b, 0xbe, 0x09, 0x8e, 0x7b, 0xe1, 0xa0, 0x5d, 0xe2, 0x0d,
	0x6a, 0x42, 0x06, 0xdf, 0x89, 0x4a, 0xdf, 0x9c, 0xe2, 0xb5, 0x6a, 0xe9, 0xd5, 0xc9, 0x44, 0x7c,
	0xc4, 0x6b, 0x38, 0xe2, 0x15, 0x59, 0x0c, 0x8c, 0x88, 0x8f, 0x32, 0x79, 0xa4, 0xe0, 0x4f, 0x34,
	0xc7, 0x46, 0x8a, 0xf0, 0x63, 0xd1, 0xb1, 0x91, 0x22, 0xfa, 0xd2, 0x33, 0x29, 0x52, 0x0c, 0x0d,
	0x6f, 0xe0, 0xfb, 0xeb, 0x70, 0xa9, 0x63, 0x0e, 0xa2, 0xbc, 0x8e, 0x84, 0x4f, 0xd3, 0xba, 0xd5,
	0x7b, 0x9a, 0xc5, 0x33, 0xf1, 0xb7, 0xff, 0x27, 0x00, 0x00, 0xff, 0xff, 0x45, 0xf2, 0x72, 0x03,
	0xe7, 0x49, 0x00, 0x00,
}
